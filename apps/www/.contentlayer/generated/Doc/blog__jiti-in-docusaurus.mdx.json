{
  "title": "Jiti usage in Docusaurus source code.\r",
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\r\nFor this week, I have been reading [unbuild](https://github.com/unjs/unbuild) source code and found few packages that I have never seen before or used. I wanted to share some interesting packages that are used in these OSS projects so we can learn a thing or two ;)\r\n\r\nThe following are discussed in this article:\r\n\r\n1. What is Jiti?\r\n    \r\n2. Jiti’s usage in Docusaurus\r\n    \r\n\r\n![](https://cdn-images-1.medium.com/max/1600/1*0p3E1fZ7ERKJKI52OPNKYQ.png)\r\n\r\n### What is Jiti?\r\n\r\nJiti is a package built by [authors at Unjs](https://github.com/unjs). Unjs provides JS tools, libraries and has about 63 npm packages and [421m downloads per month](https://unjs.io/packages?q=&order=1&orderBy=title). Sheesh, that’s a lot.\r\n\r\n[Jiti repository](https://github.com/unjs/jiti#readme) has this description “Runtime TypeScript and ESM support for Node.js”. Okay, what does this mean? To understand more about this tool, I looked at the features it offers:\r\n\r\n* Seamless TypeScript and ESM syntax support for Node.js\r\n    \r\n* Seamless interoperability between ESM and CommonJS\r\n    \r\n* Asynchronous API to replace `import()`\r\n    \r\n* Synchronous API to replace `require()` (deprecated)\r\n    \r\n* Super slim and zero dependency\r\n    \r\n* Custom resolve aliases\r\n    \r\n* Smart syntax detection to avoid extra transforms\r\n    \r\n* Node.js native `require.cache` integration\r\n    \r\n* Filesystem transpile with hard disk caches\r\n    \r\n* ESM Loader support\r\n    \r\n* JSX support (opt-in)\r\n    \r\n\r\nSure enough, it has features that I do not understand yet, the one feature that rings a bell for me is the ***Seamless interoperability between ESM and CommonJS*** because I have seen this in dynamic imports in OSS projects where a file is defined using CommonJS (module.exports) required in an file using ESM syntax (export default) but still not sure if what I saw back then has any resemblance to what Jiti offers. I am interested to learn more about this package, may be in the future.\r\n\r\nBut let’s review Jiti’s usage in Open Source projects such as Docusaurus and Unbuild\r\n\r\n### Jiti’s usage in Docusaurus\r\n\r\nI found the below code related to Jiti in the [Docusaurus — moduleUtils.js](https://github.com/facebook/docusaurus/blob/71d682c53b2f6bcb2e70c86dde79cbb7c581e9a8/packages/docusaurus-utils/src/moduleUtils.ts#L21)\r\n\r\n```js\r\nimport jiti from 'jiti';\r\n\r\n/*\r\njiti is able to load ESM, CJS, JSON, TS modules\r\n */\r\nexport async function loadFreshModule(modulePath: string): Promise<unknown> {\r\n  try {\r\n    if (typeof modulePath !== 'string') {\r\n      throw new Error(\r\n        logger.interpolate`Invalid module path of type name=${modulePath}`,\r\n      );\r\n    }\r\n    const load = jiti(__filename, {\r\n      // Transpilation cache, can be safely enabled\r\n      cache: true,\r\n      // Bypass Node.js runtime require cache\r\n      // Same as \"import-fresh\" package we used previously\r\n      requireCache: false,\r\n      // Only take into consideration the default export\r\n      // For now we don't need named exports\r\n      // This also helps normalize return value for both CJS/ESM/TS modules\r\n      interopDefault: true,\r\n      // debug: true,\r\n    });\r\n\r\n    return load(modulePath);\r\n```\r\n\r\nLet’s get the hint from the comments — “***jiti is able to load ESM, CJS, JSON, TS modules***”, this would be the interoperability feature. jiti is imported and directly called as a function with some parameters for additional configuration and it has comments explaining what the configuration is for.\r\n\r\n```js\r\n// Transpilation cache, can be safely enabled\r\ncache: true,\r\n// Bypass Node.js runtime require cache\r\n// Same as \"import-fresh\" package we used previously\r\nrequireCache: false,\r\n// Only take into consideration the default export\r\n// For now we don't need named exports\r\n// This also helps normalize return value for both CJS/ESM/TS modules\r\ninteropDefault: true,\r\n// debug: true,\r\n```\r\n\r\nI also found this [note in Docusaurus migration guide](https://github.com/facebook/docusaurus/blob/71d682c53b2f6bcb2e70c86dde79cbb7c581e9a8/website/docs/migration/v3.mdx#L759):\r\n\r\n> New Config Loader\r\n\r\n> Docusaurus v3 changes its internal config loading library from [`import-fresh`](https://github.com/sindresorhus/import-fresh) to [`jiti`](https://github.com/unjs/jiti). It is responsible for loading files such as `docusaurus.config.js` or `sidebars.js`, and Docusaurus plugins.\r\n\r\n> :::info How to upgrade\r\n\r\n> In theory, you have nothing to do, and your existing config files should keep working as before.\r\n\r\n> However, this is a major dependency swap and subtle behavior changes could occur.\r\n\r\n### About me:\r\n\r\nHey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\r\n\r\n***I am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com***\r\n\r\nMy Github — [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\r\n\r\nMy website — [https://ramunarasinga.com](https://ramunarasinga.com/)\r\n\r\nMy Youtube channel — [https://www.youtube.com/@thinkthroo](https://www.youtube.com/@thinkthroo)\r\n\r\nLearning platform — [https://thinkthroo.com](https://thinkthroo.com/)\r\n\r\nCodebase Architecture — [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\r\n\r\nBest practices — [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\r\n\r\nProduction-grade projects — [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\r\n\r\n### References:\r\n\r\n1. [https://github.com/unjs/unbuild/tree/main/src](https://github.com/unjs/unbuild/tree/main/src)\r\n    \r\n2. [https://github.com/unjs/unbuild/blob/main/src/build.ts#L36](https://github.com/unjs/unbuild/blob/main/src/build.ts#L36)\r\n    \r\n3. [https://github.com/search?q=repo%3Afacebook%2Fdocusaurus%20jiti&type=code](https://github.com/search?q=repo%3Afacebook%2Fdocusaurus%20jiti&type=code)\r\n    \r\n4. [https://github.com/facebook/docusaurus/blob/71d682c53b2f6bcb2e70c86dde79cbb7c581e9a8/website/docs/migration/v3.mdx#L759](https://github.com/facebook/docusaurus/blob/71d682c53b2f6bcb2e70c86dde79cbb7c581e9a8/website/docs/migration/v3.mdx#L759)\r\n    \r\n5. [https://github.com/facebook/docusaurus/blob/71d682c53b2f6bcb2e70c86dde79cbb7c581e9a8/packages/docusaurus-utils/src/moduleUtils.ts#L21](https://github.com/facebook/docusaurus/blob/71d682c53b2f6bcb2e70c86dde79cbb7c581e9a8/packages/docusaurus-utils/src/moduleUtils.ts#L21)\r\n    \r\n6. [https://www.npmjs.com/package/jiti](https://www.npmjs.com/package/jiti)\r\n    \r\n7. [https://unjs.io/packages?q=&order=1&orderBy=title](https://unjs.io/packages?q=&order=1&orderBy=title)",
    "code": "var Component=(()=>{var p=Object.create;var c=Object.defineProperty;var F=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var b=(l,e)=>()=>(e||l((e={exports:{}}).exports,e),e.exports),g=(l,e)=>{for(var r in e)c(l,r,{get:e[r],enumerable:!0})},o=(l,e,r,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of u(e))!y.call(l,s)&&s!==r&&c(l,s,{get:()=>e[s],enumerable:!(i=F(e,s))||i.enumerable});return l};var f=(l,e,r)=>(r=l!=null?p(m(l)):{},o(e||!l||!l.__esModule?c(r,\"default\",{value:l,enumerable:!0}):r,l)),j=l=>o(c({},\"__esModule\",{value:!0}),l);var t=b((S,a)=>{a.exports=_jsx_runtime});var k={};g(k,{default:()=>h,frontmatter:()=>w});var n=f(t()),w={title:\"Jiti usage in Docusaurus source\\xA0code.\"};function d(l){let e={a:\"a\",blockquote:\"blockquote\",code:\"code\",div:\"div\",em:\"em\",h3:\"h3\",img:\"img\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",ul:\"ul\",...l.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"For this week, I have been reading \",(0,n.jsx)(e.a,{href:\"https://github.com/unjs/unbuild\",children:\"unbuild\"}),\" source code and found few packages that I have never seen before or used. I wanted to share some interesting packages that are used in these OSS projects so we can learn a thing or two\\xA0;)\"]}),`\n`,(0,n.jsx)(e.p,{children:\"The following are discussed in this article:\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:\"What is Jiti?\"}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:\"Jiti\\u2019s usage in Docusaurus\"}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://cdn-images-1.medium.com/max/1600/1*0p3E1fZ7ERKJKI52OPNKYQ.png\",alt:\"\"})}),`\n`,(0,n.jsx)(e.h3,{id:\"what-isjiti\",children:\"What is\\xA0Jiti?\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Jiti is a package built by \",(0,n.jsx)(e.a,{href:\"https://github.com/unjs\",children:\"authors at Unjs\"}),\". Unjs provides JS tools, libraries and has about 63 npm packages and \",(0,n.jsx)(e.a,{href:\"https://unjs.io/packages?q=&order=1&orderBy=title\",children:\"421m downloads per month\"}),\". Sheesh, that\\u2019s a lot.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:\"https://github.com/unjs/jiti#readme\",children:\"Jiti repository\"}),\" has this description \\u201CRuntime TypeScript and ESM support for Node.js\\u201D. Okay, what does this mean? To understand more about this tool, I looked at the features it offers:\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:\"Seamless TypeScript and ESM syntax support for Node.js\"}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:\"Seamless interoperability between ESM and CommonJS\"}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[\"Asynchronous API to replace \",(0,n.jsx)(e.code,{children:\"import()\"})]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[\"Synchronous API to replace \",(0,n.jsx)(e.code,{children:\"require()\"}),\" (deprecated)\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:\"Super slim and zero dependency\"}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:\"Custom resolve aliases\"}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:\"Smart syntax detection to avoid extra transforms\"}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[\"Node.js native \",(0,n.jsx)(e.code,{children:\"require.cache\"}),\" integration\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:\"Filesystem transpile with hard disk caches\"}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:\"ESM Loader support\"}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:\"JSX support (opt-in)\"}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Sure enough, it has features that I do not understand yet, the one feature that rings a bell for me is the \",(0,n.jsx)(e.em,{children:(0,n.jsx)(e.strong,{children:\"Seamless interoperability between ESM and CommonJS\"})}),\" because I have seen this in dynamic imports in OSS projects where a file is defined using CommonJS (module.exports) required in an file using ESM syntax (export default) but still not sure if what I saw back then has any resemblance to what Jiti offers. I am interested to learn more about this package, may be in the future.\"]}),`\n`,(0,n.jsx)(e.p,{children:\"But let\\u2019s review Jiti\\u2019s usage in Open Source projects such as Docusaurus and Unbuild\"}),`\n`,(0,n.jsx)(e.h3,{id:\"jitis-usage-in-docusaurus\",children:\"Jiti\\u2019s usage in Docusaurus\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"I found the below code related to Jiti in the \",(0,n.jsx)(e.a,{href:\"https://github.com/facebook/docusaurus/blob/71d682c53b2f6bcb2e70c86dde79cbb7c581e9a8/packages/docusaurus-utils/src/moduleUtils.ts#L21\",children:\"Docusaurus\\u200A\\u2014\\u200AmoduleUtils.js\"})]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"js\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"js\",\"data-theme\":\"default\",children:[(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" jiti \"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"from\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" 'jiti'\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\";\"})]}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:\" \"}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"/*\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#FFF4\"},children:\"jiti is able to load ESM, CJS, JSON, TS modules\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" */\"})}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"export\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" async\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" function\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" loadFreshModule\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"(\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\"modulePath\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" string\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"):\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" Promise\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"<\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\"unknown\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\">\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"  try\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"    if\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" (typeof\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" modulePath \"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"!==\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" 'string'\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\")\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"      throw\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" new\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" Error\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"(\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\"        logger\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\".\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\"interpolate\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"`Invalid module path of type name=${\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\"modulePath\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}`\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\",\"})]}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"      );\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"    }\"})}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"    const\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" load \"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"=\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" jiti\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"(\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\"__filename\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\",\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"      //\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF4\"},children:\" Transpilation cache, can be safely enabled\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\"      cache\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" true,\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"      //\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF4\"},children:\" Bypass Node.js runtime require cache\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"      //\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF4\"},children:' Same as \"import-fresh\" package we used previously'})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\"      requireCache\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" false,\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"      //\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF4\"},children:\" Only take into consideration the default export\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"      //\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF4\"},children:\" For now we don't need named exports\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"      //\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF4\"},children:\" This also helps normalize return value for both CJS/ESM/TS modules\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\"      interopDefault\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" true,\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"      //\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF4\"},children:\" debug: true,\"})]}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"    });\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:\" \"}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"    return\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" load\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"(\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\"modulePath\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\");\"})]})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Let\\u2019s get the hint from the comments\\u200A\\u2014\\u200A\\u201C\",(0,n.jsx)(e.em,{children:(0,n.jsx)(e.strong,{children:\"jiti is able to load ESM, CJS, JSON, TS modules\"})}),\"\\u201D, this would be the interoperability feature. jiti is imported and directly called as a function with some parameters for additional configuration and it has comments explaining what the configuration is for.\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"js\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"js\",\"data-theme\":\"default\",children:[(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"//\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF4\"},children:\" Transpilation cache, can be safely enabled\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\"cache\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" true,\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"//\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF4\"},children:\" Bypass Node.js runtime require cache\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"//\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF4\"},children:' Same as \"import-fresh\" package we used previously'})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\"requireCache\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" false,\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"//\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF4\"},children:\" Only take into consideration the default export\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"//\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF4\"},children:\" For now we don't need named exports\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"//\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF4\"},children:\" This also helps normalize return value for both CJS/ESM/TS modules\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\"interopDefault\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" true,\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"//\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF4\"},children:\" debug: true,\"})]})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"I also found this \",(0,n.jsx)(e.a,{href:\"https://github.com/facebook/docusaurus/blob/71d682c53b2f6bcb2e70c86dde79cbb7c581e9a8/website/docs/migration/v3.mdx#L759\",children:\"note in Docusaurus migration guide\"}),\":\"]}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsx)(e.p,{children:\"New Config Loader\"}),`\n`]}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsxs)(e.p,{children:[\"Docusaurus v3 changes its internal config loading library from \",(0,n.jsx)(e.a,{href:\"https://github.com/sindresorhus/import-fresh\",children:(0,n.jsx)(e.code,{children:\"import-fresh\"})}),\" to \",(0,n.jsx)(e.a,{href:\"https://github.com/unjs/jiti\",children:(0,n.jsx)(e.code,{children:\"jiti\"})}),\". It is responsible for loading files such as \",(0,n.jsx)(e.code,{children:\"docusaurus.config.js\"}),\" or \",(0,n.jsx)(e.code,{children:\"sidebars.js\"}),\", and Docusaurus plugins.\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsx)(e.p,{children:\":::info How to upgrade\"}),`\n`]}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsx)(e.p,{children:\"In theory, you have nothing to do, and your existing config files should keep working as before.\"}),`\n`]}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsx)(e.p,{children:\"However, this is a major dependency swap and subtle behavior changes could occur.\"}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{id:\"about-me\",children:\"About me:\"}),`\n`,(0,n.jsx)(e.p,{children:\"Hey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.em,{children:(0,n.jsxs)(e.strong,{children:[\"I am open to work on interesting projects. Send me an email at \",(0,n.jsx)(e.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:\"ramu.narasinga@gmail.com\"})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Github\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://github.com/ramu-narasinga\",children:\"https://github.com/ramu-narasinga\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My website\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:\"https://ramunarasinga.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Youtube channel\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://www.youtube.com/@thinkthroo\",children:\"https://www.youtube.com/@thinkthroo\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Learning platform\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://thinkthroo.com/\",children:\"https://thinkthroo.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Codebase Architecture\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/architecture\",children:\"https://app.thinkthroo.com/architecture\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Best practices\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/best-practices\",children:\"https://app.thinkthroo.com/best-practices\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Production-grade projects\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:\"https://app.thinkthroo.com/production-grade-projects\"})]}),`\n`,(0,n.jsx)(e.h3,{id:\"references\",children:\"References:\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/unjs/unbuild/tree/main/src\",children:\"https://github.com/unjs/unbuild/tree/main/src\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/unjs/unbuild/blob/main/src/build.ts#L36\",children:\"https://github.com/unjs/unbuild/blob/main/src/build.ts#L36\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/search?q=repo%3Afacebook%2Fdocusaurus%20jiti&type=code\",children:\"https://github.com/search?q=repo%3Afacebook%2Fdocusaurus%20jiti&type=code\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/facebook/docusaurus/blob/71d682c53b2f6bcb2e70c86dde79cbb7c581e9a8/website/docs/migration/v3.mdx#L759\",children:\"https://github.com/facebook/docusaurus/blob/71d682c53b2f6bcb2e70c86dde79cbb7c581e9a8/website/docs/migration/v3.mdx#L759\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/facebook/docusaurus/blob/71d682c53b2f6bcb2e70c86dde79cbb7c581e9a8/packages/docusaurus-utils/src/moduleUtils.ts#L21\",children:\"https://github.com/facebook/docusaurus/blob/71d682c53b2f6bcb2e70c86dde79cbb7c581e9a8/packages/docusaurus-utils/src/moduleUtils.ts#L21\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://www.npmjs.com/package/jiti\",children:\"https://www.npmjs.com/package/jiti\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://unjs.io/packages?q=&order=1&orderBy=title\",children:\"https://unjs.io/packages?q=&order=1&orderBy=title\"})}),`\n`]}),`\n`]})]})}function h(l={}){let{wrapper:e}=l.components||{};return e?(0,n.jsx)(e,{...l,children:(0,n.jsx)(d,{...l})}):d(l)}return j(k);})();\n;return Component;"
  },
  "_id": "blog/jiti-in-docusaurus.mdx",
  "_raw": {
    "sourceFilePath": "blog/jiti-in-docusaurus.mdx",
    "sourceFileName": "jiti-in-docusaurus.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/jiti-in-docusaurus"
  },
  "type": "Doc",
  "slug": "/blog/jiti-in-docusaurus",
  "slugAsParams": "jiti-in-docusaurus"
}