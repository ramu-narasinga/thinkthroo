{
<<<<<<< HEAD
  "title": "Shimmer effect in Card when you load Supabase dashboard.\r",
=======
  "title": "Shimmer effect in Card when you load Supabase dashboard.",
>>>>>>> 442b740f3cf43317109944c6cf4b7ca543a8cddf
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
<<<<<<< HEAD
    "raw": "\r\nWhen loading a dashboard, especially one as feature-rich as Supabase’s, it’s essential to provide visual feedback to users indicating that content is being loaded. A popular and visually appealing way to achieve this is by using a shimmer effect. This effect simulates a loading state and keeps users engaged while the actual content is being fetched.\r\n\r\n![](https://miro.medium.com/v2/resize:fit:875/1*t5qVmiFcIDkaIEnvA0tDwA.png)\r\n\r\nLet’s explore how Supabase implements a shimmer effect in their dashboard using the `animate` property and some creative CSS.\r\n\r\n# **Shimmer Effect Using the Animate Property**\r\n\r\nThe [`ShimmeringCard`](https://github.com/supabase/supabase/blob/master/apps/studio/components/interfaces/Home/ProjectList/ShimmeringCard.tsx#L3) component in Supabase's source code showcases how to create a shimmering loading effect using a combination of React and CSS animations.\r\n\r\nHere’s the implementation of the `ShimmeringCard` component:\r\n\r\n```plaintext\r\n// Pulled from \r\n// https://github.com/supabase/supabase/blob/master/apps/studio/components/interfaces/Home/ProjectList/ShimmeringCard.tsx#L3\r\nimport CardButton from 'components/ui/CardButton'\r\n\r\nconst ShimmeringCard = () => {\r\n  return (\r\n    <CardButton\r\n      className=\"h-44 !px-0 pt-5 pb-0\"\r\n      title={\r\n        <div className=\"w-full justify-between space-y-1.5 px-5\">\r\n          <p className=\"flex-shrink truncate text-sm pr-4 shimmering-loader h-5 w-20\" />\r\n          <p className=\"text-sm lowercase text-foreground-light h-4 w-40 shimmering-loader\" />\r\n        </div>\r\n      }\r\n    />\r\n  )\r\n}\r\nexport default ShimmeringCard\r\n```\r\n\r\nIn this component, `CardButton` is used to create the card structure, and the shimmer effect is applied to the text elements within the card using the `shimmering-loader` class.\r\n\r\n# **The** `shimmering-loader` CSS Class\r\n\r\nThe [`shimmering-loader`](https://github.com/supabase/supabase/blob/ce4213956045da0c174f4881b4300b508e30978c/apps/docs/styles/main.scss#L308C1-L317C2) class is defined in the [`main.scss`](https://github.com/supabase/supabase/blob/ce4213956045da0c174f4881b4300b508e30978c/apps/docs/styles/main.scss#L308C1-L317C2) file and leverages the `animate` property to create the shimmer effect:\r\n\r\n```plaintext\r\n.shimmering-loader {\r\n  animation: shimmer 2s infinite linear;\r\n  background: linear-gradient(\r\n    to right,\r\n    hsl(var(--border-default)) 4%,\r\n    hsl(var(--background-surface-200)) 25%,\r\n    hsl(var(--border-default)) 36%\r\n  );\r\n  background-size: 1000px 100%;\r\n}\r\n```\r\n\r\n# **How It Works**\r\n\r\n1. **Animation Definition**: The `shimmer` keyframes animation moves the background gradient from left to right.\r\n    \r\n2. **Gradient Background**: The background is a linear gradient that creates the shimmer effect. The colors transition smoothly to give the appearance of a light moving across the surface.\r\n    \r\n3. **Animation Application**: The `shimmering-loader` class applies this animation to any element, making it shimmer.\r\n    \r\n\r\n![](https://miro.medium.com/v2/resize:fit:875/1*47EKz3q3aUidRrzxVGAjLg.png)\r\n\r\n> [*Get free courses inspired by the best practices used in open source.*](https://app.thinkthroo.com/best-practices)\r\n\r\n# About me:\r\n\r\nHey, my name is [Ramu Narasinga](https://ramunarasinga.com). I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\r\n\r\n***I am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com***\r\n\r\nMy Github —  [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\r\n\r\nMy website —  [https://ramunarasinga.com](https://ramunarasinga.com/)\r\n\r\nMy Youtube channel —  [https://www.youtube.com/@thinkthroo](https://www.youtube.com/@thinkthroo)\r\n\r\nLearning platform —  [https://thinkthroo.com](https://thinkthroo.com/)\r\n\r\nCodebase Architecture —  [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\r\n\r\nBest practices —  [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\r\n\r\nProduction-grade projects —  [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\r\n\r\n# **References:**\r\n\r\n1. [https://github.com/supabase/supabase/blob/master/apps/studio/components/interfaces/Home/ProjectList/ShimmeringCard.tsx#L3](https://github.com/supabase/supabase/blob/master/apps/studio/components/interfaces/Home/ProjectList/ShimmeringCard.tsx#L3)\r\n    \r\n2. [https://github.com/supabase/supabase/blob/ce4213956045da0c174f4881b4300b508e30978c/apps/docs/styles/main.scss#L308C1-L317C2](https://github.com/supabase/supabase/blob/ce4213956045da0c174f4881b4300b508e30978c/apps/docs/styles/main.scss#L308C1-L317C2)",
=======
    "raw": "\nWhen loading a dashboard, especially one as feature-rich as Supabase’s, it’s essential to provide visual feedback to users indicating that content is being loaded. A popular and visually appealing way to achieve this is by using a shimmer effect. This effect simulates a loading state and keeps users engaged while the actual content is being fetched.\n\n![](https://miro.medium.com/v2/resize:fit:875/1*t5qVmiFcIDkaIEnvA0tDwA.png)\n\nLet’s explore how Supabase implements a shimmer effect in their dashboard using the `animate` property and some creative CSS.\n\n# **Shimmer Effect Using the Animate Property**\n\nThe [`ShimmeringCard`](https://github.com/supabase/supabase/blob/master/apps/studio/components/interfaces/Home/ProjectList/ShimmeringCard.tsx#L3) component in Supabase's source code showcases how to create a shimmering loading effect using a combination of React and CSS animations.\n\nHere’s the implementation of the `ShimmeringCard` component:\n\n```plaintext\n// Pulled from \n// https://github.com/supabase/supabase/blob/master/apps/studio/components/interfaces/Home/ProjectList/ShimmeringCard.tsx#L3\nimport CardButton from 'components/ui/CardButton'\n\nconst ShimmeringCard = () => {\n  return (\n    <CardButton\n      className=\"h-44 !px-0 pt-5 pb-0\"\n      title={\n        <div className=\"w-full justify-between space-y-1.5 px-5\">\n          <p className=\"flex-shrink truncate text-sm pr-4 shimmering-loader h-5 w-20\" />\n          <p className=\"text-sm lowercase text-foreground-light h-4 w-40 shimmering-loader\" />\n        </div>\n      }\n    />\n  )\n}\nexport default ShimmeringCard\n```\n\nIn this component, `CardButton` is used to create the card structure, and the shimmer effect is applied to the text elements within the card using the `shimmering-loader` class.\n\n# **The** `shimmering-loader` CSS Class\n\nThe [`shimmering-loader`](https://github.com/supabase/supabase/blob/ce4213956045da0c174f4881b4300b508e30978c/apps/docs/styles/main.scss#L308C1-L317C2) class is defined in the [`main.scss`](https://github.com/supabase/supabase/blob/ce4213956045da0c174f4881b4300b508e30978c/apps/docs/styles/main.scss#L308C1-L317C2) file and leverages the `animate` property to create the shimmer effect:\n\n```plaintext\n.shimmering-loader {\n  animation: shimmer 2s infinite linear;\n  background: linear-gradient(\n    to right,\n    hsl(var(--border-default)) 4%,\n    hsl(var(--background-surface-200)) 25%,\n    hsl(var(--border-default)) 36%\n  );\n  background-size: 1000px 100%;\n}\n```\n\n# **How It Works**\n\n1. **Animation Definition**: The `shimmer` keyframes animation moves the background gradient from left to right.\n    \n2. **Gradient Background**: The background is a linear gradient that creates the shimmer effect. The colors transition smoothly to give the appearance of a light moving across the surface.\n    \n3. **Animation Application**: The `shimmering-loader` class applies this animation to any element, making it shimmer.\n    \n\n![](https://miro.medium.com/v2/resize:fit:875/1*47EKz3q3aUidRrzxVGAjLg.png)\n\n> [*Get free courses inspired by the best practices used in open source.*](https://app.thinkthroo.com/best-practices)\n\n# About me:\n\nHey, my name is [Ramu Narasinga](https://ramunarasinga.com). I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\n\n***I am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com***\n\nMy Github —  [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\n\nMy website —  [https://ramunarasinga.com](https://ramunarasinga.com/)\n\nMy Youtube channel —  [https://www.youtube.com/@thinkthroo](https://www.youtube.com/@thinkthroo)\n\nLearning platform —  [https://thinkthroo.com](https://thinkthroo.com/)\n\nCodebase Architecture —  [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\n\nBest practices —  [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\n\nProduction-grade projects —  [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\n\n# **References:**\n\n1. [https://github.com/supabase/supabase/blob/master/apps/studio/components/interfaces/Home/ProjectList/ShimmeringCard.tsx#L3](https://github.com/supabase/supabase/blob/master/apps/studio/components/interfaces/Home/ProjectList/ShimmeringCard.tsx#L3)\n    \n2. [https://github.com/supabase/supabase/blob/ce4213956045da0c174f4881b4300b508e30978c/apps/docs/styles/main.scss#L308C1-L317C2](https://github.com/supabase/supabase/blob/ce4213956045da0c174f4881b4300b508e30978c/apps/docs/styles/main.scss#L308C1-L317C2)",
>>>>>>> 442b740f3cf43317109944c6cf4b7ca543a8cddf
    "code": "var Component=(()=>{var p=Object.create;var r=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var f=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),N=(a,e)=>{for(var i in e)r(a,i,{get:e[i],enumerable:!0})},c=(a,e,i,t)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of u(e))!b.call(a,s)&&s!==i&&r(a,s,{get:()=>e[s],enumerable:!(t=m(e,s))||t.enumerable});return a};var y=(a,e,i)=>(i=a!=null?p(g(a)):{},c(e||!a||!a.__esModule?r(i,\"default\",{value:a,enumerable:!0}):i,a)),k=a=>c(r({},\"__esModule\",{value:!0}),a);var l=f((v,h)=>{h.exports=_jsx_runtime});var C={};N(C,{default:()=>o,frontmatter:()=>x});var n=y(l()),x={title:\"Shimmer effect in Card when you load Supabase dashboard.\"};function d(a){let e={a:\"a\",blockquote:\"blockquote\",code:\"code\",div:\"div\",em:\"em\",h1:\"h1\",img:\"img\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"When loading a dashboard, especially one as feature-rich as Supabase\\u2019s, it\\u2019s essential to provide visual feedback to users indicating that content is being loaded. A popular and visually appealing way to achieve this is by using a shimmer effect. This effect simulates a loading state and keeps users engaged while the actual content is being fetched.\"}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://miro.medium.com/v2/resize:fit:875/1*t5qVmiFcIDkaIEnvA0tDwA.png\",alt:\"\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Let\\u2019s explore how Supabase implements a shimmer effect in their dashboard using the \",(0,n.jsx)(e.code,{children:\"animate\"}),\" property and some creative CSS.\"]}),`\n`,(0,n.jsx)(e.h1,{id:\"shimmer-effect-using-the-animate-property\",children:(0,n.jsx)(e.strong,{children:\"Shimmer Effect Using the Animate Property\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"The \",(0,n.jsx)(e.a,{href:\"https://github.com/supabase/supabase/blob/master/apps/studio/components/interfaces/Home/ProjectList/ShimmeringCard.tsx#L3\",children:(0,n.jsx)(e.code,{children:\"ShimmeringCard\"})}),\" component in Supabase's source code showcases how to create a shimmering loading effect using a combination of React and CSS animations.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Here\\u2019s the implementation of the \",(0,n.jsx)(e.code,{children:\"ShimmeringCard\"}),\" component:\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"// Pulled from \"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"// https://github.com/supabase/supabase/blob/master/apps/studio/components/interfaces/Home/ProjectList/ShimmeringCard.tsx#L3\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"import CardButton from 'components/ui/CardButton'\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"const ShimmeringCard = () => {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  return (\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    <CardButton\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'      className=\"h-44 !px-0 pt-5 pb-0\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      title={\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'        <div className=\"w-full justify-between space-y-1.5 px-5\">'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'          <p className=\"flex-shrink truncate text-sm pr-4 shimmering-loader h-5 w-20\" />'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'          <p className=\"text-sm lowercase text-foreground-light h-4 w-40 shimmering-loader\" />'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"        </div>\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    />\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  )\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"export default ShimmeringCard\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"In this component, \",(0,n.jsx)(e.code,{children:\"CardButton\"}),\" is used to create the card structure, and the shimmer effect is applied to the text elements within the card using the \",(0,n.jsx)(e.code,{children:\"shimmering-loader\"}),\" class.\"]}),`\n`,(0,n.jsxs)(e.h1,{id:\"the-shimmering-loader-css-class\",children:[(0,n.jsx)(e.strong,{children:\"The\"}),\" \",(0,n.jsx)(e.code,{children:\"shimmering-loader\"}),\" CSS Class\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"The \",(0,n.jsx)(e.a,{href:\"https://github.com/supabase/supabase/blob/ce4213956045da0c174f4881b4300b508e30978c/apps/docs/styles/main.scss#L308C1-L317C2\",children:(0,n.jsx)(e.code,{children:\"shimmering-loader\"})}),\" class is defined in the \",(0,n.jsx)(e.a,{href:\"https://github.com/supabase/supabase/blob/ce4213956045da0c174f4881b4300b508e30978c/apps/docs/styles/main.scss#L308C1-L317C2\",children:(0,n.jsx)(e.code,{children:\"main.scss\"})}),\" file and leverages the \",(0,n.jsx)(e.code,{children:\"animate\"}),\" property to create the shimmer effect:\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\".shimmering-loader {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  animation: shimmer 2s infinite linear;\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  background: linear-gradient(\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    to right,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    hsl(var(--border-default)) 4%,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    hsl(var(--background-surface-200)) 25%,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    hsl(var(--border-default)) 36%\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  );\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  background-size: 1000px 100%;\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}\"})})]})})}),`\n`,(0,n.jsx)(e.h1,{id:\"how-it-works\",children:(0,n.jsx)(e.strong,{children:\"How It Works\"})}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Animation Definition\"}),\": The \",(0,n.jsx)(e.code,{children:\"shimmer\"}),\" keyframes animation moves the background gradient from left to right.\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Gradient Background\"}),\": The background is a linear gradient that creates the shimmer effect. The colors transition smoothly to give the appearance of a light moving across the surface.\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Animation Application\"}),\": The \",(0,n.jsx)(e.code,{children:\"shimmering-loader\"}),\" class applies this animation to any element, making it shimmer.\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://miro.medium.com/v2/resize:fit:875/1*47EKz3q3aUidRrzxVGAjLg.png\",alt:\"\"})}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/best-practices\",children:(0,n.jsx)(e.em,{children:\"Get free courses inspired by the best practices used in open source.\"})})}),`\n`]}),`\n`,(0,n.jsx)(e.h1,{id:\"about-me\",children:\"About me:\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Hey, my name is \",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com\",children:\"Ramu Narasinga\"}),\". I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.em,{children:(0,n.jsxs)(e.strong,{children:[\"I am open to work on interesting projects. Send me an email at \",(0,n.jsx)(e.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:\"ramu.narasinga@gmail.com\"})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Github\\u200A\\u2014\\u200A \",(0,n.jsx)(e.a,{href:\"https://github.com/ramu-narasinga\",children:\"https://github.com/ramu-narasinga\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My website\\u200A\\u2014\\u200A \",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:\"https://ramunarasinga.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Youtube channel\\u200A\\u2014\\u200A \",(0,n.jsx)(e.a,{href:\"https://www.youtube.com/@thinkthroo\",children:\"https://www.youtube.com/@thinkthroo\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Learning platform\\u200A\\u2014\\u200A \",(0,n.jsx)(e.a,{href:\"https://thinkthroo.com/\",children:\"https://thinkthroo.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Codebase Architecture\\u200A\\u2014\\u200A \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/architecture\",children:\"https://app.thinkthroo.com/architecture\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Best practices\\u200A\\u2014\\u200A \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/best-practices\",children:\"https://app.thinkthroo.com/best-practices\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Production-grade projects\\u200A\\u2014\\u200A \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:\"https://app.thinkthroo.com/production-grade-projects\"})]}),`\n`,(0,n.jsx)(e.h1,{id:\"references\",children:(0,n.jsx)(e.strong,{children:\"References:\"})}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/supabase/supabase/blob/master/apps/studio/components/interfaces/Home/ProjectList/ShimmeringCard.tsx#L3\",children:\"https://github.com/supabase/supabase/blob/master/apps/studio/components/interfaces/Home/ProjectList/ShimmeringCard.tsx#L3\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/supabase/supabase/blob/ce4213956045da0c174f4881b4300b508e30978c/apps/docs/styles/main.scss#L308C1-L317C2\",children:\"https://github.com/supabase/supabase/blob/ce4213956045da0c174f4881b4300b508e30978c/apps/docs/styles/main.scss#L308C1-L317C2\"})}),`\n`]}),`\n`]})]})}function o(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(d,{...a})}):d(a)}return k(C);})();\n;return Component;"
  },
  "_id": "blog/Shimmer-effect-in-Card.mdx",
  "_raw": {
    "sourceFilePath": "blog/Shimmer-effect-in-Card.mdx",
    "sourceFileName": "Shimmer-effect-in-Card.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/Shimmer-effect-in-Card"
  },
  "type": "Doc",
  "slug": "/blog/Shimmer-effect-in-Card",
  "slugAsParams": "Shimmer-effect-in-Card"
}