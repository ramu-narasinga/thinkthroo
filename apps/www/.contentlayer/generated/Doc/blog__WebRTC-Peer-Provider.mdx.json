{
  "title": "WebRTCPeerProvider component in FilePizza codebase.",
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\nIn this article, we will review [WebRTCPeerProvider component in FilePizza codebase](https://github.com/kern/filepizza/blob/main/src/components/WebRTCProvider.tsx#L64). FilePizza allows peer-to-peer file transfers in your browser.\n\n![](https://miro.medium.com/v2/resize:fit:875/1*v8ujMhnr8Ok8y5ZhqPaVXw.png)\n\n# **WebRTCProvider.tsx file**\n\nThis file, WebRTCProvider.tsx, has 102 LOC at the time of writing this article\n\n![](https://miro.medium.com/v2/resize:fit:875/1*eNLCo11HTdiMMZ70Wst_gw.png)\n\n## [**Context**](https://github.com/kern/filepizza/blob/main/src/components/WebRTCProvider.tsx#L20)\n\n```plaintext\nconst WebRTCContext = React.createContext<WebRTCPeerValue | null>(null)\n```\n\nThis Provider component uses Context.\n\n## [**useWebRTCPeer**](https://github.com/kern/filepizza/blob/main/src/components/WebRTCProvider.tsx#L22)\n\n```plaintext\nexport const useWebRTCPeer = (): WebRTCPeerValue => {\n  const value = useContext(WebRTCContext)\n  if (value === null) {\n    throw new Error('useWebRTC must be used within a WebRTCProvider')\n  }\n  return value\n}\n```\n\nThis just checks if useWebRTC is used within a WebRTCProvider and throws an error.\n\n## [**getOrCreateGlobalPeer**](https://github.com/kern/filepizza/blob/main/src/components/WebRTCProvider.tsx#L32)\n\n```plaintext\nlet globalPeer: Peer | null = null\n\nasync function getOrCreateGlobalPeer(): Promise<Peer> {\n  if (!globalPeer) {\n    const response = await fetch('/api/ice', {\n      method: 'POST',\n    })\n    const { iceServers } = await response.json()\n    console.log('[WebRTCProvider] ICE servers:', iceServers)\n\n    globalPeer = new Peer({\n      debug: 3,\n      config: {\n        iceServers,\n      },\n    })\n  }\n```\n\nif globalPeer is null, an API call is made to `api/ice` and a new Peer instance is created. Peer? what is that?\n\n```plaintext\nimport Peer from 'peerjs'\n```\n\nRead more about [Peerjs](https://peerjs.com/).\n\n```plaintext\nif (globalPeer.id) {\n  return globalPeer\n}\n\nawait new Promise<void>((resolve) => {\n  const listener = (id: string) => {\n    console.log('[WebRTCProvider] Peer ID:', id)\n    globalPeer?.off('open', listener)\n    resolve()\n  }\n  globalPeer?.on('open', listener)\n})\n\nreturn globalPeer\n```\n\nIf globalPeer.id exists, globalPeer is returned. On “open” event, listener is called and resolve() is called inside the Promise. off removes the listener and finally globalPeer is removed.\n\n## **WebRTCPeerProvider**\n\n```plaintext\nexport default function WebRTCPeerProvider({\n  children,\n}: {\n  children?: React.ReactNode\n}): JSX.Element {\n  const [peerValue, setPeerValue] = useState<Peer | null>(globalPeer)\n  const [isStopped, setIsStopped] = useState(false)\n  const [error, setError] = useState<Error | null>(null)\n\n  const stop = useCallback(() => {\n    console.log('[WebRTCProvider] Stopping peer')\n    globalPeer?.destroy()\n    globalPeer = null\n    setPeerValue(null)\n    setIsStopped(true)\n  }, [])\n\n  useEffect(() => {\n    getOrCreateGlobalPeer().then(setPeerValue).catch(setError)\n  }, [])\n\n  const value = useMemo(() => ({ peer: peerValue!, stop }), [peerValue, stop])\n\n  if (error) {\n    return <ErrorMessage message={error.message} />\n  }\n\n  if (isStopped) {\n    return <></>\n  }\n\n  if (!peerValue) {\n    return <Loading text=\"Initializing WebRTC peer...\" />\n  }\n\n  return (\n    <WebRTCContext.Provider value={value}>{children}</WebRTCContext.Provider>\n  )\n}\n```\n\nIt has different scenarios handled. I like that isStopped returns Fragments.\n\n# **About me:**\n\nHey, my name is [Ramu Narasinga](https://ramunarasinga.com/). I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\n\n***I am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com***\n\nMy Github — [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\n\nMy website — [https://ramunarasinga.com](https://ramunarasinga.com/)\n\nMy Youtube channel — [https://www.youtube.com/@ramu-narasinga](https://www.youtube.com/@ramu-narasinga)\n\nLearning platform — [https://thinkthroo.com](https://thinkthroo.com/)\n\nCodebase Architecture — [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\n\nBest practices — [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\n\nProduction-grade projects — [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\n\n# **References:**\n\n1. [https://github.com/kern/filepizza/blob/main/src/components/WebRTCProvider.tsx#L64](https://github.com/kern/filepizza/blob/main/src/components/WebRTCProvider.tsx#L64)\n    \n2. [https://file.pizza/](https://file.pizza/)\n    \n3. [https://github.com/kern/filepizza/blob/main/src/components/WebRTCProvider.tsx#L32](https://github.com/kern/filepizza/blob/main/src/components/WebRTCProvider.tsx#L32)",
    "code": "var Component=(()=>{var o=Object.create;var i=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var f=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),N=(a,e)=>{for(var r in e)i(a,r,{get:e[r],enumerable:!0})},c=(a,e,r,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let l of u(e))!b.call(a,l)&&l!==r&&i(a,l,{get:()=>e[l],enumerable:!(s=m(e,l))||s.enumerable});return a};var P=(a,e,r)=>(r=a!=null?o(g(a)):{},c(e||!a||!a.__esModule?i(r,\"default\",{value:a,enumerable:!0}):r,a)),v=a=>c(i({},\"__esModule\",{value:!0}),a);var d=f((T,t)=>{t.exports=_jsx_runtime});var x={};N(x,{default:()=>p,frontmatter:()=>C});var n=P(d()),C={title:\"WebRTCPeerProvider component in FilePizza codebase.\"};function h(a){let e={a:\"a\",code:\"code\",div:\"div\",em:\"em\",h1:\"h1\",h2:\"h2\",img:\"img\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"In this article, we will review \",(0,n.jsx)(e.a,{href:\"https://github.com/kern/filepizza/blob/main/src/components/WebRTCProvider.tsx#L64\",children:\"WebRTCPeerProvider component in FilePizza codebase\"}),\". FilePizza allows peer-to-peer file transfers in your browser.\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://miro.medium.com/v2/resize:fit:875/1*v8ujMhnr8Ok8y5ZhqPaVXw.png\",alt:\"\"})}),`\n`,(0,n.jsx)(e.h1,{id:\"webrtcprovidertsx-file\",children:(0,n.jsx)(e.strong,{children:\"WebRTCProvider.tsx file\"})}),`\n`,(0,n.jsx)(e.p,{children:\"This file, WebRTCProvider.tsx, has 102 LOC at the time of writing this article\"}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://miro.medium.com/v2/resize:fit:875/1*eNLCo11HTdiMMZ70Wst_gw.png\",alt:\"\"})}),`\n`,(0,n.jsx)(e.h2,{id:\"context\",children:(0,n.jsx)(e.a,{href:\"https://github.com/kern/filepizza/blob/main/src/components/WebRTCProvider.tsx#L20\",children:(0,n.jsx)(e.strong,{children:\"Context\"})})}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"const WebRTCContext = React.createContext<WebRTCPeerValue | null>(null)\"})})})})}),`\n`,(0,n.jsx)(e.p,{children:\"This Provider component uses Context.\"}),`\n`,(0,n.jsx)(e.h2,{id:\"usewebrtcpeer\",children:(0,n.jsx)(e.a,{href:\"https://github.com/kern/filepizza/blob/main/src/components/WebRTCProvider.tsx#L22\",children:(0,n.jsx)(e.strong,{children:\"useWebRTCPeer\"})})}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"export const useWebRTCPeer = (): WebRTCPeerValue => {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  const value = useContext(WebRTCContext)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  if (value === null) {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    throw new Error('useWebRTC must be used within a WebRTCProvider')\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  return value\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}\"})})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"This just checks if useWebRTC is used within a WebRTCProvider and throws an error.\"}),`\n`,(0,n.jsx)(e.h2,{id:\"getorcreateglobalpeer\",children:(0,n.jsx)(e.a,{href:\"https://github.com/kern/filepizza/blob/main/src/components/WebRTCProvider.tsx#L32\",children:(0,n.jsx)(e.strong,{children:\"getOrCreateGlobalPeer\"})})}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"let globalPeer: Peer | null = null\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"async function getOrCreateGlobalPeer(): Promise<Peer> {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  if (!globalPeer) {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    const response = await fetch('/api/ice', {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      method: 'POST',\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    })\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    const { iceServers } = await response.json()\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    console.log('[WebRTCProvider] ICE servers:', iceServers)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    globalPeer = new Peer({\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      debug: 3,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      config: {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"        iceServers,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      },\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    })\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  }\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"if globalPeer is null, an API call is made to \",(0,n.jsx)(e.code,{children:\"api/ice\"}),\" and a new Peer instance is created. Peer? what is that?\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"import Peer from 'peerjs'\"})})})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Read more about \",(0,n.jsx)(e.a,{href:\"https://peerjs.com/\",children:\"Peerjs\"}),\".\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"if (globalPeer.id) {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  return globalPeer\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"await new Promise<void>((resolve) => {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  const listener = (id: string) => {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    console.log('[WebRTCProvider] Peer ID:', id)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    globalPeer?.off('open', listener)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    resolve()\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  globalPeer?.on('open', listener)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"})\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"return globalPeer\"})})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"If globalPeer.id exists, globalPeer is returned. On \\u201Copen\\u201D event, listener is called and resolve() is called inside the Promise. off removes the listener and finally globalPeer is removed.\"}),`\n`,(0,n.jsx)(e.h2,{id:\"webrtcpeerprovider\",children:(0,n.jsx)(e.strong,{children:\"WebRTCPeerProvider\"})}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"export default function WebRTCPeerProvider({\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  children,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}: {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  children?: React.ReactNode\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}): JSX.Element {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  const [peerValue, setPeerValue] = useState<Peer | null>(globalPeer)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  const [isStopped, setIsStopped] = useState(false)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  const [error, setError] = useState<Error | null>(null)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  const stop = useCallback(() => {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    console.log('[WebRTCProvider] Stopping peer')\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    globalPeer?.destroy()\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    globalPeer = null\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    setPeerValue(null)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    setIsStopped(true)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  }, [])\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  useEffect(() => {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    getOrCreateGlobalPeer().then(setPeerValue).catch(setError)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  }, [])\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  const value = useMemo(() => ({ peer: peerValue!, stop }), [peerValue, stop])\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  if (error) {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    return <ErrorMessage message={error.message} />\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  if (isStopped) {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    return <></>\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  if (!peerValue) {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'    return <Loading text=\"Initializing WebRTC peer...\" />'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  return (\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    <WebRTCContext.Provider value={value}>{children}</WebRTCContext.Provider>\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  )\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}\"})})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"It has different scenarios handled. I like that isStopped returns Fragments.\"}),`\n`,(0,n.jsx)(e.h1,{id:\"about-me\",children:(0,n.jsx)(e.strong,{children:\"About me:\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Hey, my name is \",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:\"Ramu Narasinga\"}),\". I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.em,{children:(0,n.jsxs)(e.strong,{children:[\"I am open to work on interesting projects. Send me an email at \",(0,n.jsx)(e.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:\"ramu.narasinga@gmail.com\"})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Github \\u2014 \",(0,n.jsx)(e.a,{href:\"https://github.com/ramu-narasinga\",children:\"https://github.com/ramu-narasinga\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My website \\u2014 \",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:\"https://ramunarasinga.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Youtube channel \\u2014 \",(0,n.jsx)(e.a,{href:\"https://www.youtube.com/@ramu-narasinga\",children:\"https://www.youtube.com/@ramu-narasinga\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Learning platform \\u2014 \",(0,n.jsx)(e.a,{href:\"https://thinkthroo.com/\",children:\"https://thinkthroo.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Codebase Architecture \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/architecture\",children:\"https://app.thinkthroo.com/architecture\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Best practices \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/best-practices\",children:\"https://app.thinkthroo.com/best-practices\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Production-grade projects \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:\"https://app.thinkthroo.com/production-grade-projects\"})]}),`\n`,(0,n.jsx)(e.h1,{id:\"references\",children:(0,n.jsx)(e.strong,{children:\"References:\"})}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/kern/filepizza/blob/main/src/components/WebRTCProvider.tsx#L64\",children:\"https://github.com/kern/filepizza/blob/main/src/components/WebRTCProvider.tsx#L64\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://file.pizza/\",children:\"https://file.pizza/\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/kern/filepizza/blob/main/src/components/WebRTCProvider.tsx#L32\",children:\"https://github.com/kern/filepizza/blob/main/src/components/WebRTCProvider.tsx#L32\"})}),`\n`]}),`\n`]})]})}function p(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(h,{...a})}):h(a)}return v(x);})();\n;return Component;"
  },
  "_id": "blog/WebRTC-Peer-Provider.mdx",
  "_raw": {
    "sourceFilePath": "blog/WebRTC-Peer-Provider.mdx",
    "sourceFileName": "WebRTC-Peer-Provider.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/WebRTC-Peer-Provider"
  },
  "type": "Doc",
  "slug": "/blog/WebRTC-Peer-Provider",
  "slugAsParams": "WebRTC-Peer-Provider"
}