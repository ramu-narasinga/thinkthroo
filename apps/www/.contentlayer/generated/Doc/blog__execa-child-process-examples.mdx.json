{
  "title": "Execa vs using child_process to execute CLI commands programmatically.\r",
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\r\nIn this article, we analyse two ways to execute CLI commands programmatically found in Shadcn/ui and CodeMirror.\r\n\r\nHave you ever wondered if it is possible to run CLI commands programmatically? We are going to look at how Shadcn/ui uses execa and how CodeMirror uses child\\_process to execute CLI programmaticaly.\r\n\r\n### child\\_process usage in CodeMirror\r\n\r\nCodeMirror is found to be using a Node.js API called `child_process.execFileSync`. [Read more](https://nodejs.org/api/child_process.html#child_processexecfilesyncfile-args-options)\r\n\r\n```plaintext\r\nfunction run(cmd, args, wd = root, { shell = false } = {}) {\r\n  return child.execFileSync(cmd, args, {shell, cwd: wd, encoding: \"utf8\", stdio: [\"ignore\", \"pipe\", process.stderr]})\r\n}\r\n```\r\n\r\nJust to provide a bit more context, this run gets called inside a function called install in CodeMirror source code.\r\n\r\n![](https://cdn-images-1.medium.com/max/1600/1*Zzj1E6r43pSxrXPWoEYF-Q.png)\r\n\r\nCheck the [CodeMirror v6 Readme](https://github.com/codemirror/dev?tab=readme-ov-file#codemirror) to understand what this install is for.\r\n\r\nOne of the first steps to set up the development environment for CodeMirror is to execute the below command, this is mentioned in [CodeMirror’s Readme.md](https://github.com/codemirror/dev?tab=readme-ov-file#codemirror).\r\n\r\n```plaintext\r\nnode bin/cm.js install\r\n```\r\n\r\ninstall is parsed using process.argv\r\n\r\n![](https://cdn-images-1.medium.com/max/1600/1*VReYQmOQka77UpfXduP2HQ.png)\r\n\r\n### Execa usage in Shadcn/ui\r\n\r\nExeca runs commands in your script, application or library. Unlike shells, it is [optimized](https://github.com/sindresorhus/execa/blob/HEAD/docs/bash.md) for programmatic usage. Built on top of the [`child_process`](https://nodejs.org/api/child_process.html) core module.\r\n\r\nShadcn/ui’s add command is found to be execa to install packages\r\n\r\n![](https://cdn-images-1.medium.com/max/1600/1*PGqlCr-IK3rC_aVkfZWGJQ.png)\r\n\r\nCheck out these search results for [Execa usage in Shadcn/ui repository](https://github.com/search?q=repo%3Ashadcn-ui%2Fui%20execa&type=code)\r\n\r\n![](https://cdn-images-1.medium.com/max/1600/1*Ayrs1obk2c1P95suZeybSg.png)\r\n\r\n# **About me:**\r\n\r\nHey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\r\n\r\nI am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com\r\n\r\nMy Github — [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\r\n\r\nMy website — [https://ramunarasinga.com](https://ramunarasinga.com/)\r\n\r\nMy Youtube channel — [https://www.youtube.com/@thinkthroo](https://www.youtube.com/@thinkthroo)\r\n\r\nLearning platform — [https://thinkthroo.com](https://thinkthroo.com/)\r\n\r\nCodebase Architecture — [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\r\n\r\nBest practices — [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\r\n\r\nProduction-grade projects — [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\r\n\r\n### References\r\n\r\n1. [https://www.npmjs.com/package/execa](https://www.npmjs.com/package/execa)\r\n    \r\n2. [https://nodejs.org/api/child\\_process.html#child\\_processexecfilesyncfile-args-options](https://nodejs.org/api/child_process.html#child_processexecfilesyncfile-args-options)\r\n    \r\n3. [https://nodejs.org/api/child\\_process.html#child\\_processexecfilefile-args-options-callback](https://nodejs.org/api/child_process.html#child_processexecfilefile-args-options-callback)\r\n    \r\n4. [https://github.com/codemirror/dev/blob/main/bin/cm.js#L14](https://github.com/codemirror/dev/blob/main/bin/cm.js#L14)\r\n    \r\n5. [https://github.com/codemirror/dev?tab=readme-ov-file#codemirror](https://github.com/codemirror/dev?tab=readme-ov-file#codemirror)\r\n    \r\n6. [https://github.com/search?q=repo%3Ashadcn-ui%2Fui%20execa&type=code](https://github.com/search?q=repo%3Ashadcn-ui%2Fui%20execa&type=code)",
    "code": "var Component=(()=>{var p=Object.create;var t=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var b=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),x=(n,e)=>{for(var i in e)t(n,i,{get:e[i],enumerable:!0})},o=(n,e,i,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let c of u(e))!f.call(n,c)&&c!==i&&t(n,c,{get:()=>e[c],enumerable:!(a=m(e,c))||a.enumerable});return n};var y=(n,e,i)=>(i=n!=null?p(g(n)):{},o(e||!n||!n.__esModule?t(i,\"default\",{value:n,enumerable:!0}):i,n)),w=n=>o(t({},\"__esModule\",{value:!0}),n);var h=b((v,s)=>{s.exports=_jsx_runtime});var j={};x(j,{default:()=>l,frontmatter:()=>_});var r=y(h()),_={title:\"Execa vs using child_process to execute CLI commands programmatically.\"};function d(n){let e={a:\"a\",code:\"code\",div:\"div\",h1:\"h1\",h3:\"h3\",img:\"img\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.p,{children:\"In this article, we analyse two ways to execute CLI commands programmatically found in Shadcn/ui and CodeMirror.\"}),`\n`,(0,r.jsx)(e.p,{children:\"Have you ever wondered if it is possible to run CLI commands programmatically? We are going to look at how Shadcn/ui uses execa and how CodeMirror uses child_process to execute CLI programmaticaly.\"}),`\n`,(0,r.jsx)(e.h3,{id:\"child_process-usage-in-codemirror\",children:\"child_process usage in CodeMirror\"}),`\n`,(0,r.jsxs)(e.p,{children:[\"CodeMirror is found to be using a Node.js API called \",(0,r.jsx)(e.code,{children:\"child_process.execFileSync\"}),\". \",(0,r.jsx)(e.a,{href:\"https://nodejs.org/api/child_process.html#child_processexecfilesyncfile-args-options\",children:\"Read more\"})]}),`\n`,(0,r.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,r.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,r.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,r.jsx)(e.span,{className:\"line\",children:(0,r.jsx)(e.span,{children:\"function run(cmd, args, wd = root, { shell = false } = {}) {\"})}),`\n`,(0,r.jsx)(e.span,{className:\"line\",children:(0,r.jsx)(e.span,{children:'  return child.execFileSync(cmd, args, {shell, cwd: wd, encoding: \"utf8\", stdio: [\"ignore\", \"pipe\", process.stderr]})'})}),`\n`,(0,r.jsx)(e.span,{className:\"line\",children:(0,r.jsx)(e.span,{children:\"}\"})})]})})}),`\n`,(0,r.jsx)(e.p,{children:\"Just to provide a bit more context, this run gets called inside a function called install in CodeMirror source code.\"}),`\n`,(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:\"https://cdn-images-1.medium.com/max/1600/1*Zzj1E6r43pSxrXPWoEYF-Q.png\",alt:\"\"})}),`\n`,(0,r.jsxs)(e.p,{children:[\"Check the \",(0,r.jsx)(e.a,{href:\"https://github.com/codemirror/dev?tab=readme-ov-file#codemirror\",children:\"CodeMirror v6 Readme\"}),\" to understand what this install is for.\"]}),`\n`,(0,r.jsxs)(e.p,{children:[\"One of the first steps to set up the development environment for CodeMirror is to execute the below command, this is mentioned in \",(0,r.jsx)(e.a,{href:\"https://github.com/codemirror/dev?tab=readme-ov-file#codemirror\",children:\"CodeMirror\\u2019s Readme.md\"}),\".\"]}),`\n`,(0,r.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,r.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,r.jsx)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,r.jsx)(e.span,{className:\"line\",children:(0,r.jsx)(e.span,{children:\"node bin/cm.js install\"})})})})}),`\n`,(0,r.jsx)(e.p,{children:\"install is parsed using process.argv\"}),`\n`,(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:\"https://cdn-images-1.medium.com/max/1600/1*VReYQmOQka77UpfXduP2HQ.png\",alt:\"\"})}),`\n`,(0,r.jsx)(e.h3,{id:\"execa-usage-in-shadcnui\",children:\"Execa usage in Shadcn/ui\"}),`\n`,(0,r.jsxs)(e.p,{children:[\"Execa runs commands in your script, application or library. Unlike shells, it is \",(0,r.jsx)(e.a,{href:\"https://github.com/sindresorhus/execa/blob/HEAD/docs/bash.md\",children:\"optimized\"}),\" for programmatic usage. Built on top of the \",(0,r.jsx)(e.a,{href:\"https://nodejs.org/api/child_process.html\",children:(0,r.jsx)(e.code,{children:\"child_process\"})}),\" core module.\"]}),`\n`,(0,r.jsx)(e.p,{children:\"Shadcn/ui\\u2019s add command is found to be execa to install packages\"}),`\n`,(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:\"https://cdn-images-1.medium.com/max/1600/1*PGqlCr-IK3rC_aVkfZWGJQ.png\",alt:\"\"})}),`\n`,(0,r.jsxs)(e.p,{children:[\"Check out these search results for \",(0,r.jsx)(e.a,{href:\"https://github.com/search?q=repo%3Ashadcn-ui%2Fui%20execa&type=code\",children:\"Execa usage in Shadcn/ui repository\"})]}),`\n`,(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:\"https://cdn-images-1.medium.com/max/1600/1*Ayrs1obk2c1P95suZeybSg.png\",alt:\"\"})}),`\n`,(0,r.jsx)(e.h1,{id:\"about-me\",children:(0,r.jsx)(e.strong,{children:\"About me:\"})}),`\n`,(0,r.jsx)(e.p,{children:\"Hey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"}),`\n`,(0,r.jsxs)(e.p,{children:[\"I am open to work on interesting projects. Send me an email at \",(0,r.jsx)(e.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:\"ramu.narasinga@gmail.com\"})]}),`\n`,(0,r.jsxs)(e.p,{children:[\"My Github \\u2014 \",(0,r.jsx)(e.a,{href:\"https://github.com/ramu-narasinga\",children:\"https://github.com/ramu-narasinga\"})]}),`\n`,(0,r.jsxs)(e.p,{children:[\"My website \\u2014 \",(0,r.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:\"https://ramunarasinga.com\"})]}),`\n`,(0,r.jsxs)(e.p,{children:[\"My Youtube channel \\u2014 \",(0,r.jsx)(e.a,{href:\"https://www.youtube.com/@thinkthroo\",children:\"https://www.youtube.com/@thinkthroo\"})]}),`\n`,(0,r.jsxs)(e.p,{children:[\"Learning platform \\u2014 \",(0,r.jsx)(e.a,{href:\"https://thinkthroo.com/\",children:\"https://thinkthroo.com\"})]}),`\n`,(0,r.jsxs)(e.p,{children:[\"Codebase Architecture \\u2014 \",(0,r.jsx)(e.a,{href:\"https://app.thinkthroo.com/architecture\",children:\"https://app.thinkthroo.com/architecture\"})]}),`\n`,(0,r.jsxs)(e.p,{children:[\"Best practices \\u2014 \",(0,r.jsx)(e.a,{href:\"https://app.thinkthroo.com/best-practices\",children:\"https://app.thinkthroo.com/best-practices\"})]}),`\n`,(0,r.jsxs)(e.p,{children:[\"Production-grade projects \\u2014 \",(0,r.jsx)(e.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:\"https://app.thinkthroo.com/production-grade-projects\"})]}),`\n`,(0,r.jsx)(e.h3,{id:\"references\",children:\"References\"}),`\n`,(0,r.jsxs)(e.ol,{children:[`\n`,(0,r.jsxs)(e.li,{children:[`\n`,(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:\"https://www.npmjs.com/package/execa\",children:\"https://www.npmjs.com/package/execa\"})}),`\n`]}),`\n`,(0,r.jsxs)(e.li,{children:[`\n`,(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:\"https://nodejs.org/api/child_process.html#child_processexecfilesyncfile-args-options\",children:\"https://nodejs.org/api/child_process.html#child_processexecfilesyncfile-args-options\"})}),`\n`]}),`\n`,(0,r.jsxs)(e.li,{children:[`\n`,(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:\"https://nodejs.org/api/child_process.html#child_processexecfilefile-args-options-callback\",children:\"https://nodejs.org/api/child_process.html#child_processexecfilefile-args-options-callback\"})}),`\n`]}),`\n`,(0,r.jsxs)(e.li,{children:[`\n`,(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:\"https://github.com/codemirror/dev/blob/main/bin/cm.js#L14\",children:\"https://github.com/codemirror/dev/blob/main/bin/cm.js#L14\"})}),`\n`]}),`\n`,(0,r.jsxs)(e.li,{children:[`\n`,(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:\"https://github.com/codemirror/dev?tab=readme-ov-file#codemirror\",children:\"https://github.com/codemirror/dev?tab=readme-ov-file#codemirror\"})}),`\n`]}),`\n`,(0,r.jsxs)(e.li,{children:[`\n`,(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:\"https://github.com/search?q=repo%3Ashadcn-ui%2Fui%20execa&type=code\",children:\"https://github.com/search?q=repo%3Ashadcn-ui%2Fui%20execa&type=code\"})}),`\n`]}),`\n`]})]})}function l(n={}){let{wrapper:e}=n.components||{};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}return w(j);})();\n;return Component;"
  },
  "_id": "blog/execa-child-process-examples.mdx",
  "_raw": {
    "sourceFilePath": "blog/execa-child-process-examples.mdx",
    "sourceFileName": "execa-child-process-examples.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/execa-child-process-examples"
  },
  "type": "Doc",
  "slug": "/blog/execa-child-process-examples",
  "slugAsParams": "execa-child-process-examples"
}