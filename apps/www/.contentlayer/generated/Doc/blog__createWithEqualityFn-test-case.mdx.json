{
  "title": "createWithEqualityFn test case in Zustand explained.\r",
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\r\nIn this article, we will understand the test case written to validate the createWithEqualityFn that prevents re-render based on a condition and an equality function that you can pass.\r\n\r\nThe below code is picked from [basic.test.ts](https://github.com/pmndrs/zustand/blob/main/tests/basic.test.tsx#L92)\r\n\r\n```plaintext\r\nit('uses the store with a selector and equality checker', async () => {\r\n  const useBoundStore = createWithEqualityFn(\r\n    () => ({ item: { value: 0 } }),\r\n    Object.is,\r\n  )\r\n  const { setState } = useBoundStore\r\n  let renderCount = 0\r\n\r\n  function Component() {\r\n    // Prevent re-render if new value === 1.\r\n    const item = useBoundStore(\r\n      (s) => s.item,\r\n      (_, newItem) => newItem.value === 1,\r\n    )\r\n    return (\r\n      <div>\r\n        renderCount: {++renderCount}, value: {item.value}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const { findByText } = render(\r\n    <>\r\n      <Component />\r\n    </>,\r\n  )\r\n\r\n  await findByText('renderCount: 1, value: 0')\r\n\r\n  // This will not cause a re-render.\r\n  act(() => setState({ item: { value: 1 } }))\r\n  await findByText('renderCount: 1, value: 0')\r\n\r\n  // This will cause a re-render.\r\n  act(() => setState({ item: { value: 2 } }))\r\n  await findByText('renderCount: 2, value: 2')\r\n})\r\n```\r\n\r\nZustand uses [Vitest](https://vitest.dev/guide/) for its testing needs. Let’s go through the above code snippet.\r\n\r\n# **Initialiize createWithEqualityFn**\r\n\r\n```plaintext\r\nconst useBoundStore = createWithEqualityFn(\r\n    () => ({ item: { value: 0 } }),\r\n    Object.is,\r\n  )\r\n```\r\n\r\ncreateWithEqualityFn is initialized with the state `() => ({ item: { value: 0 } })` and the equality function is `Object.is`\r\n\r\n![](https://miro.medium.com/v2/resize:fit:875/1*oPW9jEWE8rl-g1LMMnquBw.png)\r\n\r\ncreateWithEqualityFn accepts two variables, createState and defaultEqualityFn.\r\n\r\n# **Prevent re-render**\r\n\r\n```plaintext\r\n// Prevent re-render if new value === 1.\r\n    const item = useBoundStore(\r\n      (s) => s.item,\r\n      (_, newItem) => newItem.value === 1,\r\n    )\r\n```\r\n\r\nuseBoundStore accepts the selector and the equality function that is used to prevent re-render based on the matching value.\r\n\r\nThe above example in the basic.test is used to prevent re-render when the value is 1.\r\n\r\n```plaintext\r\nawait findByText('renderCount: 1, value: 0')\r\n\r\n// This will not cause a re-render.\r\nact(() => setState({ item: { value: 1 } }))\r\nawait findByText('renderCount: 1, value: 0')\r\n\r\n// This will cause a re-render.\r\nact(() => setState({ item: { value: 2 } }))\r\nawait findByText('renderCount: 2, value: 2')\r\n```\r\n\r\nThese assertions validate that state update does not cause any re-render.\r\n\r\n# **About me:**\r\n\r\nHey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\r\n\r\nI am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com\r\n\r\nMy Github — [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\r\n\r\nMy website — [https://ramunarasinga.com](https://ramunarasinga.com/)\r\n\r\nMy Youtube channel — [https://www.youtube.com/@thinkthroo](https://www.youtube.com/@thinkthroo)\r\n\r\nLearning platform — [https://thinkthroo.com](https://thinkthroo.com/)\r\n\r\nCodebase Architecture — [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\r\n\r\nBest practices — [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\r\n\r\nProduction-grade projects — [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\r\n\r\n# **References:**\r\n\r\n1. [https://github.com/pmndrs/zustand/blob/main/tests/basic.test.tsx#L92](https://github.com/pmndrs/zustand/blob/main/tests/basic.test.tsx#L92)\r\n    \r\n2. [https://vitest.dev/guide/](https://vitest.dev/guide/)\r\n",
    "code": "var Component=(()=>{var o=Object.create;var s=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,N=Object.prototype.hasOwnProperty;var f=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),v=(a,e)=>{for(var t in e)s(a,t,{get:e[t],enumerable:!0})},r=(a,e,t,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of u(e))!N.call(a,i)&&i!==t&&s(a,i,{get:()=>e[i],enumerable:!(l=m(e,i))||l.enumerable});return a};var y=(a,e,t)=>(t=a!=null?o(g(a)):{},r(e||!a||!a.__esModule?s(t,\"default\",{value:a,enumerable:!0}):t,a)),b=a=>r(s({},\"__esModule\",{value:!0}),a);var d=f((j,c)=>{c.exports=_jsx_runtime});var x={};v(x,{default:()=>p,frontmatter:()=>w});var n=y(d()),w={title:\"createWithEqualityFn test case in Zustand explained.\"};function h(a){let e={a:\"a\",code:\"code\",div:\"div\",h1:\"h1\",img:\"img\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"In this article, we will understand the test case written to validate the createWithEqualityFn that prevents re-render based on a condition and an equality function that you can pass.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The below code is picked from \",(0,n.jsx)(e.a,{href:\"https://github.com/pmndrs/zustand/blob/main/tests/basic.test.tsx#L92\",children:\"basic.test.ts\"})]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"it('uses the store with a selector and equality checker', async () => {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  const useBoundStore = createWithEqualityFn(\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    () => ({ item: { value: 0 } }),\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    Object.is,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  )\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  const { setState } = useBoundStore\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  let renderCount = 0\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  function Component() {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    // Prevent re-render if new value === 1.\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    const item = useBoundStore(\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      (s) => s.item,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      (_, newItem) => newItem.value === 1,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    )\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    return (\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      <div>\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"        renderCount: {++renderCount}, value: {item.value}\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      </div>\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    )\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  const { findByText } = render(\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    <>\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      <Component />\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    </>,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  )\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  await findByText('renderCount: 1, value: 0')\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  // This will not cause a re-render.\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  act(() => setState({ item: { value: 1 } }))\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  await findByText('renderCount: 1, value: 0')\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  // This will cause a re-render.\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  act(() => setState({ item: { value: 2 } }))\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  await findByText('renderCount: 2, value: 2')\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"})\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Zustand uses \",(0,n.jsx)(e.a,{href:\"https://vitest.dev/guide/\",children:\"Vitest\"}),\" for its testing needs. Let\\u2019s go through the above code snippet.\"]}),`\n`,(0,n.jsx)(e.h1,{id:\"initialiize-createwithequalityfn\",children:(0,n.jsx)(e.strong,{children:\"Initialiize createWithEqualityFn\"})}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"const useBoundStore = createWithEqualityFn(\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    () => ({ item: { value: 0 } }),\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    Object.is,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  )\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"createWithEqualityFn is initialized with the state \",(0,n.jsx)(e.code,{children:\"() => ({ item: { value: 0 } })\"}),\" and the equality function is \",(0,n.jsx)(e.code,{children:\"Object.is\"})]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://miro.medium.com/v2/resize:fit:875/1*oPW9jEWE8rl-g1LMMnquBw.png\",alt:\"\"})}),`\n`,(0,n.jsx)(e.p,{children:\"createWithEqualityFn accepts two variables, createState and defaultEqualityFn.\"}),`\n`,(0,n.jsx)(e.h1,{id:\"prevent-re-render\",children:(0,n.jsx)(e.strong,{children:\"Prevent re-render\"})}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"// Prevent re-render if new value === 1.\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    const item = useBoundStore(\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      (s) => s.item,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      (_, newItem) => newItem.value === 1,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    )\"})})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"useBoundStore accepts the selector and the equality function that is used to prevent re-render based on the matching value.\"}),`\n`,(0,n.jsx)(e.p,{children:\"The above example in the basic.test is used to prevent re-render when the value is 1.\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"await findByText('renderCount: 1, value: 0')\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"// This will not cause a re-render.\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"act(() => setState({ item: { value: 1 } }))\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"await findByText('renderCount: 1, value: 0')\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"// This will cause a re-render.\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"act(() => setState({ item: { value: 2 } }))\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"await findByText('renderCount: 2, value: 2')\"})})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"These assertions validate that state update does not cause any re-render.\"}),`\n`,(0,n.jsx)(e.h1,{id:\"about-me\",children:(0,n.jsx)(e.strong,{children:\"About me:\"})}),`\n`,(0,n.jsx)(e.p,{children:\"Hey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"I am open to work on interesting projects. Send me an email at \",(0,n.jsx)(e.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:\"ramu.narasinga@gmail.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Github \\u2014 \",(0,n.jsx)(e.a,{href:\"https://github.com/ramu-narasinga\",children:\"https://github.com/ramu-narasinga\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My website \\u2014 \",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:\"https://ramunarasinga.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Youtube channel \\u2014 \",(0,n.jsx)(e.a,{href:\"https://www.youtube.com/@thinkthroo\",children:\"https://www.youtube.com/@thinkthroo\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Learning platform \\u2014 \",(0,n.jsx)(e.a,{href:\"https://thinkthroo.com/\",children:\"https://thinkthroo.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Codebase Architecture \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/architecture\",children:\"https://app.thinkthroo.com/architecture\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Best practices \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/best-practices\",children:\"https://app.thinkthroo.com/best-practices\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Production-grade projects \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:\"https://app.thinkthroo.com/production-grade-projects\"})]}),`\n`,(0,n.jsx)(e.h1,{id:\"references\",children:(0,n.jsx)(e.strong,{children:\"References:\"})}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/pmndrs/zustand/blob/main/tests/basic.test.tsx#L92\",children:\"https://github.com/pmndrs/zustand/blob/main/tests/basic.test.tsx#L92\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://vitest.dev/guide/\",children:\"https://vitest.dev/guide/\"})}),`\n`]}),`\n`]})]})}function p(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(h,{...a})}):h(a)}return b(x);})();\n;return Component;"
  },
  "_id": "blog/createWithEqualityFn-test-case.mdx",
  "_raw": {
    "sourceFilePath": "blog/createWithEqualityFn-test-case.mdx",
    "sourceFileName": "createWithEqualityFn-test-case.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/createWithEqualityFn-test-case"
  },
  "type": "Doc",
  "slug": "/blog/createWithEqualityFn-test-case",
  "slugAsParams": "createWithEqualityFn-test-case"
}