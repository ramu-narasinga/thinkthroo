{
  "title": "Component Structure in Cal.com\r",
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\r\nIn this guide, you will learn how components are organized in Cal.com.\r\n\r\nBy components, here we mean the building blocks of the user interface or more precisely, \r\nthe building blocks used in a page.\r\n\r\nOur focus is primarily on the folder structure and file naming conventions used. \r\nIn order to establish a common pattern and to understand components structure better, \r\nwe will study few pages/routes in the Cal.com.\r\n\r\nOur approach is to pick a route, locate the route in the source code and from there on, we will look at \r\n1. Where the imported components are located in a project\r\n2. Folder structure and naming conventions used  \r\n3. How the \"page\" is built using these imported components\r\n\r\nThere will be screenshots and links pointing to folders and components that belong to this project. \r\n\r\nwe will select some routes as shown in the following and discuss the components structure used.\r\n\r\n1. [Event types route](https://app.cal.com/event-types)\r\n2. [Booking route](https://app.cal.com/bookings/upcoming) \r\n  a. Upcoming sub-route\r\n  b. Unconfirmed sub-route\r\n  c. Recurring sub-route\r\n  d. Past sub-route\r\n  e. Cancelled sub-route\r\n3. [Availability route](https://app.cal.com/availability)\r\n\r\nUse this free guide to learn how components are organized in Cal.com.",
    "code": "var Component=(()=>{var h=Object.create;var i=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var b=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),w=(t,e)=>{for(var o in e)i(t,o,{get:e[o],enumerable:!0})},s=(t,e,o,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of m(e))!f.call(t,r)&&r!==o&&i(t,r,{get:()=>e[r],enumerable:!(l=p(e,r))||l.enumerable});return t};var y=(t,e,o)=>(o=t!=null?h(g(t)):{},s(e||!t||!t.__esModule?i(o,\"default\",{value:t,enumerable:!0}):o,t)),x=t=>s(i({},\"__esModule\",{value:!0}),t);var a=b((_,c)=>{c.exports=_jsx_runtime});var j={};w(j,{default:()=>d,frontmatter:()=>C});var n=y(a()),C={title:\"Component Structure in Cal.com\"};function u(t){let e={a:\"a\",li:\"li\",ol:\"ol\",p:\"p\",...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"In this guide, you will learn how components are organized in Cal.com.\"}),`\n`,(0,n.jsx)(e.p,{children:`By components, here we mean the building blocks of the user interface or more precisely,\\r\nthe building blocks used in a page.`}),`\n`,(0,n.jsx)(e.p,{children:`Our focus is primarily on the folder structure and file naming conventions used.\\r\nIn order to establish a common pattern and to understand components structure better,\\r\nwe will study few pages/routes in the Cal.com.`}),`\n`,(0,n.jsx)(e.p,{children:\"Our approach is to pick a route, locate the route in the source code and from there on, we will look at\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Where the imported components are located in a project\"}),`\n`,(0,n.jsx)(e.li,{children:\"Folder structure and naming conventions used\"}),`\n`,(0,n.jsx)(e.li,{children:'How the \"page\" is built using these imported components'}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"There will be screenshots and links pointing to folders and components that belong to this project.\"}),`\n`,(0,n.jsx)(e.p,{children:\"we will select some routes as shown in the following and discuss the components structure used.\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://app.cal.com/event-types\",children:\"Event types route\"})}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.a,{href:\"https://app.cal.com/bookings/upcoming\",children:\"Booking route\"}),`\\r\na. Upcoming sub-route\\r\nb. Unconfirmed sub-route\\r\nc. Recurring sub-route\\r\nd. Past sub-route\\r\ne. Cancelled sub-route`]}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://app.cal.com/availability\",children:\"Availability route\"})}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"Use this free guide to learn how components are organized in Cal.com.\"})]})}function d(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(u,{...t})}):u(t)}return x(j);})();\n;return Component;"
  },
  "_id": "guide/codebase-architecture/cal-com/component-structure/introduction.mdx",
  "_raw": {
    "sourceFilePath": "guide/codebase-architecture/cal-com/component-structure/introduction.mdx",
    "sourceFileName": "introduction.mdx",
    "sourceFileDir": "guide/codebase-architecture/cal-com/component-structure",
    "contentType": "mdx",
    "flattenedPath": "guide/codebase-architecture/cal-com/component-structure/introduction"
  },
  "type": "Doc",
  "slug": "/guide/codebase-architecture/cal-com/component-structure/introduction",
  "slugAsParams": "codebase-architecture/cal-com/component-structure/introduction"
}