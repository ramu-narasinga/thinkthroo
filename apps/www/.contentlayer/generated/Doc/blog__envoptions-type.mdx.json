{
  "title": "EnvOptions type in T3 Env source code explained\r",
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\r\nIn this article, we are going to examine the EnvOptions type in T3 Env source code. In case you are wondering whatâ€™s T3 Env or EnvOptions,  \r\n[T3 Env](https://env.t3.gg/) provides validation for type-safe environment variables using zod. you use createEnv function and provide zod validation for your server and client env variables as shown in [below example](https://github.com/t3-oss/t3-env/tree/main?tab=readme-ov-file#define-your-schema).\r\n\r\n```plaintext\r\n// src/env.mjs\r\nimport { createEnv } from \"@t3-oss/env-nextjs\";\r\nimport { z } from \"zod\";\r\nexport const env = createEnv({\r\n /*\r\n * Serverside Environment variables, not available on the client.\r\n * Will throw if you access these variables on the client.\r\n */\r\n server: {\r\n DATABASE_URL: z.string().url(),\r\n OPEN_AI_API_KEY: z.string().min(1),\r\n },\r\n /*\r\n * Environment variables available on the client (and server).\r\n *\r\n * ðŸ’¡ You'll get type errors if these are not prefixed with NEXT_PUBLIC_.\r\n */\r\n client: {\r\n NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: z.string().min(1),\r\n },\r\n /*\r\n * Due to how Next.js bundles environment variables on Edge and Client,\r\n * we need to manually destructure them to make sure all are included in bundle.\r\n *\r\n * ðŸ’¡ You'll get type errors if not all variables from `server` & `client` are included here.\r\n */\r\n runtimeEnv: {\r\n DATABASE_URL: process.env.DATABASE_URL,\r\n OPEN_AI_API_KEY: process.env.OPEN_AI_API_KEY,\r\n NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY:\r\n process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY,\r\n },\r\n});\r\n```\r\n\r\n![](https://cdn-images-1.medium.com/max/1600/1*BI5Clc06_rBCUHB7ePscyQ.png)\r\n\r\nThis createEnv has the below type shown defined in T3 Env source code:\r\n\r\n```plaintext\r\nexport function createEnv<\r\n TPrefix extends TPrefixFormat,\r\n TServer extends TServerFormat = NonNullable<unknown>,\r\n TClient extends TClientFormat = NonNullable<unknown>,\r\n TShared extends TSharedFormat = NonNullable<unknown>,\r\n const TExtends extends TExtendsFormat = [],\r\n>(\r\n opts: EnvOptions<TPrefix, TServer, TClient, TShared, TExtends>,\r\n): CreateEnv<TServer, TClient, TShared, TExtends> {\r\n const runtimeEnv = opts.runtimeEnvStrict ?? opts.runtimeEnv ?? process.env;\r\n```\r\n\r\nFunction parameter here is opts with type `EnvOptions<TPrefix, TServer, TClient, TShared, TExtends>`\r\n\r\n![](https://cdn-images-1.medium.com/max/1600/1*DSCX5g68ONas_tAXK_cP6A.png)\r\n\r\n```plaintext\r\nexport type EnvOptions<\r\n TPrefix extends string | undefined,\r\n TServer extends Record<string, ZodType>,\r\n TClient extends Record<string, ZodType>,\r\n TShared extends Record<string, ZodType>,\r\n TExtends extends Array<Record<string, unknown>>,\r\n> =\r\n | (LooseOptions<TShared, TExtends> &\r\n ServerClientOptions<TPrefix, TServer, TClient>)\r\n | (StrictOptions<TPrefix, TServer, TClient, TShared, TExtends> &\r\n ServerClientOptions<TPrefix, TServer, TClient>);\r\n```\r\n\r\nEnvOptions is a generic type. Server object in opts passed has the generic typeâ€Šâ€”â€ŠTServer extends Record&lt;string, ZodType&gt;\r\n\r\n```plaintext\r\n// server type is TServer that is a Record with key being string \r\n// and value being ZodType\r\nserver: {\r\n DATABASE_URL: z.string().url(),\r\n OPEN_AI_API_KEY: z.string().min(1),\r\n},\r\n// client type is TClient that is a Record with key being string \r\n// and value being ZodType\r\nclient: {\r\n NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: z.string().min(1),\r\n},\r\n```\r\n\r\nI barely scratched the surface here, this feels like an advanced Typescript usecase as this EnvOptions type returns:\r\n\r\n```plaintext\r\n| (LooseOptions<TShared, TExtends> &\r\n ServerClientOptions<TPrefix, TServer, TClient>)\r\n| (StrictOptions<TPrefix, TServer, TClient, TShared, TExtends> &\r\n ServerClientOptions<TPrefix, TServer, TClient>);\r\n```\r\n\r\nCheck out the [LooseOptions](https://github.com/t3-oss/t3-env/blob/main/packages/core/src/index.ts#L82) and [ServerClientOptions](https://github.com/t3-oss/t3-env/blob/main/packages/core/src/index.ts#L96) in t3-env source code.\r\n\r\n# **About me:**\r\n\r\nHey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\r\n\r\nI am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com\r\n\r\nMy Github â€” [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\r\n\r\nMy website â€” [https://ramunarasinga.com](https://ramunarasinga.com/)\r\n\r\nMy Youtube channel â€” [https://www.youtube.com/@thinkthroo](https://www.youtube.com/@thinkthroo)\r\n\r\nLearning platform â€” [https://thinkthroo.com](https://thinkthroo.com/)\r\n\r\nCodebase Architecture â€” [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\r\n\r\nBest practices â€” [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\r\n\r\nProduction-grade projects â€” [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\r\n\r\n### References:\r\n\r\n1\\. [https://github.com/t3-oss/t3-env/blob/main/packages/core/src/index.ts#L222](https://github.com/t3-oss/t3-env/blob/main/packages/core/src/index.ts#L222)  \r\n2\\. [https://github.com/t3-oss/t3-env/blob/main/packages/core/src/index.ts#L183](https://github.com/t3-oss/t3-env/blob/main/packages/core/src/index.ts#L183)  \r\n3\\. [https://env.t3.gg/](https://env.t3.gg/)",
    "code": "var Component=(()=>{var o=Object.create;var i=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,v=Object.prototype.hasOwnProperty;var N=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),T=(a,e)=>{for(var s in e)i(a,s,{get:e[s],enumerable:!0})},t=(a,e,s,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of u(e))!v.call(a,r)&&r!==s&&i(a,r,{get:()=>e[r],enumerable:!(l=m(e,r))||l.enumerable});return a};var x=(a,e,s)=>(s=a!=null?o(g(a)):{},t(e||!a||!a.__esModule?i(s,\"default\",{value:a,enumerable:!0}):s,a)),f=a=>t(i({},\"__esModule\",{value:!0}),a);var d=N((S,c)=>{c.exports=_jsx_runtime});var b={};T(b,{default:()=>p,frontmatter:()=>E});var n=x(d()),E={title:\"EnvOptions type in T3 Env source code explained\"};function h(a){let e={a:\"a\",br:\"br\",code:\"code\",div:\"div\",h1:\"h1\",h3:\"h3\",img:\"img\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"In this article, we are going to examine the EnvOptions type in T3 Env source code. In case you are wondering what\\u2019s T3 Env or EnvOptions,\",(0,n.jsx)(e.br,{}),`\n`,(0,n.jsx)(e.a,{href:\"https://env.t3.gg/\",children:\"T3 Env\"}),\" provides validation for type-safe environment variables using zod. you use createEnv function and provide zod validation for your server and client env variables as shown in \",(0,n.jsx)(e.a,{href:\"https://github.com/t3-oss/t3-env/tree/main?tab=readme-ov-file#define-your-schema\",children:\"below example\"}),\".\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"// src/env.mjs\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'import { createEnv } from \"@t3-oss/env-nextjs\";'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'import { z } from \"zod\";'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"export const env = createEnv({\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" /*\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * Serverside Environment variables, not available on the client.\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * Will throw if you access these variables on the client.\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" */\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" server: {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" DATABASE_URL: z.string().url(),\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" OPEN_AI_API_KEY: z.string().min(1),\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" },\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" /*\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * Environment variables available on the client (and server).\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" *\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * \\u{1F4A1} You'll get type errors if these are not prefixed with NEXT_PUBLIC_.\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" */\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" client: {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: z.string().min(1),\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" },\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" /*\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * Due to how Next.js bundles environment variables on Edge and Client,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * we need to manually destructure them to make sure all are included in bundle.\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" *\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * \\u{1F4A1} You'll get type errors if not all variables from `server` & `client` are included here.\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" */\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" runtimeEnv: {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" DATABASE_URL: process.env.DATABASE_URL,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" OPEN_AI_API_KEY: process.env.OPEN_AI_API_KEY,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY:\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" },\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"});\"})})]})})}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://cdn-images-1.medium.com/max/1600/1*BI5Clc06_rBCUHB7ePscyQ.png\",alt:\"\"})}),`\n`,(0,n.jsx)(e.p,{children:\"This createEnv has the below type shown defined in T3 Env source code:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"export function createEnv<\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" TPrefix extends TPrefixFormat,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" TServer extends TServerFormat = NonNullable<unknown>,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" TClient extends TClientFormat = NonNullable<unknown>,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" TShared extends TSharedFormat = NonNullable<unknown>,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" const TExtends extends TExtendsFormat = [],\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\">(\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" opts: EnvOptions<TPrefix, TServer, TClient, TShared, TExtends>,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"): CreateEnv<TServer, TClient, TShared, TExtends> {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" const runtimeEnv = opts.runtimeEnvStrict ?? opts.runtimeEnv ?? process.env;\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Function parameter here is opts with type \",(0,n.jsx)(e.code,{children:\"EnvOptions<TPrefix, TServer, TClient, TShared, TExtends>\"})]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://cdn-images-1.medium.com/max/1600/1*DSCX5g68ONas_tAXK_cP6A.png\",alt:\"\"})}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"export type EnvOptions<\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" TPrefix extends string | undefined,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" TServer extends Record<string, ZodType>,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" TClient extends Record<string, ZodType>,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" TShared extends Record<string, ZodType>,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" TExtends extends Array<Record<string, unknown>>,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"> =\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" | (LooseOptions<TShared, TExtends> &\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" ServerClientOptions<TPrefix, TServer, TClient>)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" | (StrictOptions<TPrefix, TServer, TClient, TShared, TExtends> &\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" ServerClientOptions<TPrefix, TServer, TClient>);\"})})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"EnvOptions is a generic type. Server object in opts passed has the generic type\\u200A\\u2014\\u200ATServer extends Record<string, ZodType>\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"// server type is TServer that is a Record with key being string \"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"// and value being ZodType\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"server: {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" DATABASE_URL: z.string().url(),\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" OPEN_AI_API_KEY: z.string().min(1),\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"},\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"// client type is TClient that is a Record with key being string \"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"// and value being ZodType\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"client: {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: z.string().min(1),\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"},\"})})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"I barely scratched the surface here, this feels like an advanced Typescript usecase as this EnvOptions type returns:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"| (LooseOptions<TShared, TExtends> &\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" ServerClientOptions<TPrefix, TServer, TClient>)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"| (StrictOptions<TPrefix, TServer, TClient, TShared, TExtends> &\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" ServerClientOptions<TPrefix, TServer, TClient>);\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Check out the \",(0,n.jsx)(e.a,{href:\"https://github.com/t3-oss/t3-env/blob/main/packages/core/src/index.ts#L82\",children:\"LooseOptions\"}),\" and \",(0,n.jsx)(e.a,{href:\"https://github.com/t3-oss/t3-env/blob/main/packages/core/src/index.ts#L96\",children:\"ServerClientOptions\"}),\" in t3-env source code.\"]}),`\n`,(0,n.jsx)(e.h1,{id:\"about-me\",children:(0,n.jsx)(e.strong,{children:\"About me:\"})}),`\n`,(0,n.jsx)(e.p,{children:\"Hey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"I am open to work on interesting projects. Send me an email at \",(0,n.jsx)(e.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:\"ramu.narasinga@gmail.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Github \\u2014 \",(0,n.jsx)(e.a,{href:\"https://github.com/ramu-narasinga\",children:\"https://github.com/ramu-narasinga\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My website \\u2014 \",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:\"https://ramunarasinga.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Youtube channel \\u2014 \",(0,n.jsx)(e.a,{href:\"https://www.youtube.com/@thinkthroo\",children:\"https://www.youtube.com/@thinkthroo\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Learning platform \\u2014 \",(0,n.jsx)(e.a,{href:\"https://thinkthroo.com/\",children:\"https://thinkthroo.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Codebase Architecture \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/architecture\",children:\"https://app.thinkthroo.com/architecture\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Best practices \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/best-practices\",children:\"https://app.thinkthroo.com/best-practices\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Production-grade projects \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:\"https://app.thinkthroo.com/production-grade-projects\"})]}),`\n`,(0,n.jsx)(e.h3,{id:\"references\",children:\"References:\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"1. \",(0,n.jsx)(e.a,{href:\"https://github.com/t3-oss/t3-env/blob/main/packages/core/src/index.ts#L222\",children:\"https://github.com/t3-oss/t3-env/blob/main/packages/core/src/index.ts#L222\"}),(0,n.jsx)(e.br,{}),`\n`,\"2. \",(0,n.jsx)(e.a,{href:\"https://github.com/t3-oss/t3-env/blob/main/packages/core/src/index.ts#L183\",children:\"https://github.com/t3-oss/t3-env/blob/main/packages/core/src/index.ts#L183\"}),(0,n.jsx)(e.br,{}),`\n`,\"3. \",(0,n.jsx)(e.a,{href:\"https://env.t3.gg/\",children:\"https://env.t3.gg/\"})]})]})}function p(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(h,{...a})}):h(a)}return f(b);})();\n;return Component;"
  },
  "_id": "blog/envoptions-type.mdx",
  "_raw": {
    "sourceFilePath": "blog/envoptions-type.mdx",
    "sourceFileName": "envoptions-type.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/envoptions-type"
  },
  "type": "Doc",
  "slug": "/blog/envoptions-type",
  "slugAsParams": "envoptions-type"
}