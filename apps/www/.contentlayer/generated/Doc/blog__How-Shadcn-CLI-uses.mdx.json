{
  "title": "How Shadcn CLI uses error constants to improve code readability\r",
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\r\nIn this article, we analyze how a file named [error.ts](https://github.com/shadcn-ui/ui/blob/main/packages/shadcn/src/utils/errors.ts) is used across the shadcn/ui code base.\r\n\r\n![](https://miro.medium.com/v2/resize:fit:875/1*O1GAhUUbgxAOetFrCt9yTQ.png)\r\n\r\n# **utils/errors.ts**\r\n\r\n`error.ts` contains 12 variables:\r\n\r\n```plaintext\r\nexport const MISSING_DIR_OR_EMPTY_PROJECT = \"1\"\r\nexport const EXISTING_CONFIG = \"2\"\r\nexport const MISSING_CONFIG = \"3\"\r\nexport const FAILED_CONFIG_READ = \"4\"\r\nexport const TAILWIND_NOT_CONFIGURED = \"5\"\r\nexport const IMPORT_ALIAS_MISSING = \"6\"\r\nexport const UNSUPPORTED_FRAMEWORK = \"7\"\r\nexport const COMPONENT_URL_NOT_FOUND = \"8\"\r\nexport const COMPONENT_URL_UNAUTHORIZED = \"9\"\r\nexport const COMPONENT_URL_FORBIDDEN = \"10\"\r\nexport const COMPONENT_URL_BAD_REQUEST = \"11\"\r\nexport const COMPONENT_URL_INTERNAL_SERVER_ERROR = \"12\"\r\n```\r\n\r\nThese are descriptive and explain the kind of error being handled, for example, MISSING\\_DIR\\_OR\\_EMPTY\\_PROJECT is likely used in a scenario where there is missing directory or empty project.\r\n\r\nIs there any special meaning to these variable values? they are just numbers assigned as strings. It makes more sense once we understand how these variables are used.\r\n\r\n# **Usage in preflight-init.ts:**\r\n\r\nIf you open this [preflight-init.ts](https://github.com/shadcn-ui/ui/blob/main/packages/shadcn/src/preflights/preflight-init.ts#L22), you will find the below code snippet in there.\r\n\r\n```plaintext\r\n// Ensure target directory exists.\r\n // Check for empty project. We assume if no package.json exists, the project is empty.\r\n if (\r\n   !fs.existsSync(options.cwd) ||\r\n   !fs.existsSync(path.resolve(options.cwd, \"package.json\"))\r\n ) {\r\n   errors[ERRORS.MISSING_DIR_OR_EMPTY_PROJECT] = true\r\n   return {\r\n     errors,\r\n     projectInfo: null,\r\n   }\r\n }\r\n```\r\n\r\nPay attention to this `errors[ERRORS.MISSING_DIR_OR_EMPTY_PROJECT]=true`, here errors is an object. What’s the value of MISSING\\_DIR\\_OR\\_EMPTY\\_PROJECT? it was “1” as explained earlier.\r\n\r\nThis mean errors object would look like below:\r\n\r\n```plaintext\r\n{\r\n \"1\": true\r\n}\r\n```\r\n\r\nThis is fine, but how’s this error object used and where? The answer is in [init.ts](https://github.com/shadcn-ui/ui/blob/1297abc8820480681ccec1bb026b29b30d9c858d/packages/shadcn/src/commands/init.ts#L91).\r\n\r\n# **errors object in init.ts**\r\n\r\nAt line 91, in [init.ts](https://github.com/shadcn-ui/ui/blob/1297abc8820480681ccec1bb026b29b30d9c858d/packages/shadcn/src/commands/init.ts#L91), you will find the below `if` block.\r\n\r\n```plaintext\r\nif (preflight.errors[ERRORS.MISSING_DIR_OR_EMPTY_PROJECT]) {\r\n \r\n const { projectPath } = await createProject(options)\r\n \r\n if (!projectPath) {\r\n   process.exit(1)\r\n }\r\n \r\n  options.cwd = projectPath\r\n options.isNewProject = true\r\n}\r\n```\r\n\r\nif this check was something like preflight.error\\[“1”\\], your next thought immediately is what’s this mysterious value here. This means, these constants in error.ts are used to improve code readability\r\n\r\n# **About me:**\r\n\r\nHey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\r\n\r\nI am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com\r\n\r\nMy Github — [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\r\n\r\nMy website — [https://ramunarasinga.com](https://ramunarasinga.com/)\r\n\r\nMy Youtube channel — [https://www.youtube.com/@thinkthroo](https://www.youtube.com/@thinkthroo)\r\n\r\nLearning platform — [https://thinkthroo.com](https://thinkthroo.com/)\r\n\r\nCodebase Architecture — [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\r\n\r\nBest practices — [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\r\n\r\nProduction-grade projects — [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\r\n\r\n# **References:**\r\n\r\n1. [https://github.com/shadcn-ui/ui/blob/main/packages/shadcn/src/preflights/preflight-init.ts#L22](https://github.com/shadcn-ui/ui/blob/main/packages/shadcn/src/preflights/preflight-init.ts#L22)\r\n    \r\n2. [https://github.com/shadcn-ui/ui/blob/main/packages/shadcn/src/utils/errors.ts](https://github.com/shadcn-ui/ui/blob/main/packages/shadcn/src/utils/errors.ts)\r\n    \r\n3. [https://github.com/search?q=repo%3Ashadcn-ui%2Fui%20ERRORS&type=code](https://github.com/search?q=repo%3Ashadcn-ui%2Fui+ERRORS&type=code)\r\n    \r\n4. https://github.com/shadcn-ui/ui/blob/1297abc8820480681ccec1bb026b29b30d9c858d/packages/shadcn/src/commands/init.ts#L91\r\n",
    "code": "var Component=(()=>{var p=Object.create;var r=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var N=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),f=(a,e)=>{for(var i in e)r(a,i,{get:e[i],enumerable:!0})},c=(a,e,i,t)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of u(e))!b.call(a,s)&&s!==i&&r(a,s,{get:()=>e[s],enumerable:!(t=m(e,s))||t.enumerable});return a};var R=(a,e,i)=>(i=a!=null?p(g(a)):{},c(e||!a||!a.__esModule?r(i,\"default\",{value:a,enumerable:!0}):i,a)),_=a=>c(r({},\"__esModule\",{value:!0}),a);var l=N((x,h)=>{h.exports=_jsx_runtime});var O={};f(O,{default:()=>o,frontmatter:()=>I});var n=R(l()),I={title:\"How Shadcn CLI uses error constants to improve code readability\"};function d(a){let e={a:\"a\",code:\"code\",div:\"div\",h1:\"h1\",img:\"img\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"In this article, we analyze how a file named \",(0,n.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/shadcn/src/utils/errors.ts\",children:\"error.ts\"}),\" is used across the shadcn/ui code base.\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://miro.medium.com/v2/resize:fit:875/1*O1GAhUUbgxAOetFrCt9yTQ.png\",alt:\"\"})}),`\n`,(0,n.jsx)(e.h1,{id:\"utilserrorsts\",children:(0,n.jsx)(e.strong,{children:\"utils/errors.ts\"})}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:\"error.ts\"}),\" contains 12 variables:\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'export const MISSING_DIR_OR_EMPTY_PROJECT = \"1\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'export const EXISTING_CONFIG = \"2\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'export const MISSING_CONFIG = \"3\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'export const FAILED_CONFIG_READ = \"4\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'export const TAILWIND_NOT_CONFIGURED = \"5\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'export const IMPORT_ALIAS_MISSING = \"6\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'export const UNSUPPORTED_FRAMEWORK = \"7\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'export const COMPONENT_URL_NOT_FOUND = \"8\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'export const COMPONENT_URL_UNAUTHORIZED = \"9\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'export const COMPONENT_URL_FORBIDDEN = \"10\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'export const COMPONENT_URL_BAD_REQUEST = \"11\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'export const COMPONENT_URL_INTERNAL_SERVER_ERROR = \"12\"'})})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"These are descriptive and explain the kind of error being handled, for example, MISSING_DIR_OR_EMPTY_PROJECT is likely used in a scenario where there is missing directory or empty project.\"}),`\n`,(0,n.jsx)(e.p,{children:\"Is there any special meaning to these variable values? they are just numbers assigned as strings. It makes more sense once we understand how these variables are used.\"}),`\n`,(0,n.jsx)(e.h1,{id:\"usage-in-preflight-initts\",children:(0,n.jsx)(e.strong,{children:\"Usage in preflight-init.ts:\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"If you open this \",(0,n.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/shadcn/src/preflights/preflight-init.ts#L22\",children:\"preflight-init.ts\"}),\", you will find the below code snippet in there.\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"// Ensure target directory exists.\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" // Check for empty project. We assume if no package.json exists, the project is empty.\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" if (\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"   !fs.existsSync(options.cwd) ||\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'   !fs.existsSync(path.resolve(options.cwd, \"package.json\"))'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" ) {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"   errors[ERRORS.MISSING_DIR_OR_EMPTY_PROJECT] = true\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"   return {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"     errors,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"     projectInfo: null,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"   }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" }\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Pay attention to this \",(0,n.jsx)(e.code,{children:\"errors[ERRORS.MISSING_DIR_OR_EMPTY_PROJECT]=true\"}),\", here errors is an object. What\\u2019s the value of MISSING_DIR_OR_EMPTY_PROJECT? it was \\u201C1\\u201D as explained earlier.\"]}),`\n`,(0,n.jsx)(e.p,{children:\"This mean errors object would look like below:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"{\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"1\": true'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"This is fine, but how\\u2019s this error object used and where? The answer is in \",(0,n.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/blob/1297abc8820480681ccec1bb026b29b30d9c858d/packages/shadcn/src/commands/init.ts#L91\",children:\"init.ts\"}),\".\"]}),`\n`,(0,n.jsx)(e.h1,{id:\"errors-object-in-initts\",children:(0,n.jsx)(e.strong,{children:\"errors object in init.ts\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"At line 91, in \",(0,n.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/blob/1297abc8820480681ccec1bb026b29b30d9c858d/packages/shadcn/src/commands/init.ts#L91\",children:\"init.ts\"}),\", you will find the below \",(0,n.jsx)(e.code,{children:\"if\"}),\" block.\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"if (preflight.errors[ERRORS.MISSING_DIR_OR_EMPTY_PROJECT]) {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" \"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" const { projectPath } = await createProject(options)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" \"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" if (!projectPath) {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"   process.exit(1)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" \"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  options.cwd = projectPath\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" options.isNewProject = true\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}\"})})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"if this check was something like preflight.error[\\u201C1\\u201D], your next thought immediately is what\\u2019s this mysterious value here. This means, these constants in error.ts are used to improve code readability\"}),`\n`,(0,n.jsx)(e.h1,{id:\"about-me\",children:(0,n.jsx)(e.strong,{children:\"About me:\"})}),`\n`,(0,n.jsx)(e.p,{children:\"Hey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"I am open to work on interesting projects. Send me an email at \",(0,n.jsx)(e.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:\"ramu.narasinga@gmail.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Github \\u2014 \",(0,n.jsx)(e.a,{href:\"https://github.com/ramu-narasinga\",children:\"https://github.com/ramu-narasinga\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My website \\u2014 \",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:\"https://ramunarasinga.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Youtube channel \\u2014 \",(0,n.jsx)(e.a,{href:\"https://www.youtube.com/@thinkthroo\",children:\"https://www.youtube.com/@thinkthroo\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Learning platform \\u2014 \",(0,n.jsx)(e.a,{href:\"https://thinkthroo.com/\",children:\"https://thinkthroo.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Codebase Architecture \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/architecture\",children:\"https://app.thinkthroo.com/architecture\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Best practices \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/best-practices\",children:\"https://app.thinkthroo.com/best-practices\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Production-grade projects \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:\"https://app.thinkthroo.com/production-grade-projects\"})]}),`\n`,(0,n.jsx)(e.h1,{id:\"references\",children:(0,n.jsx)(e.strong,{children:\"References:\"})}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/shadcn/src/preflights/preflight-init.ts#L22\",children:\"https://github.com/shadcn-ui/ui/blob/main/packages/shadcn/src/preflights/preflight-init.ts#L22\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/shadcn/src/utils/errors.ts\",children:\"https://github.com/shadcn-ui/ui/blob/main/packages/shadcn/src/utils/errors.ts\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/search?q=repo%3Ashadcn-ui%2Fui+ERRORS&type=code\",children:\"https://github.com/search?q=repo%3Ashadcn-ui%2Fui%20ERRORS&type=code\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/blob/1297abc8820480681ccec1bb026b29b30d9c858d/packages/shadcn/src/commands/init.ts#L91\",children:\"https://github.com/shadcn-ui/ui/blob/1297abc8820480681ccec1bb026b29b30d9c858d/packages/shadcn/src/commands/init.ts#L91\"})}),`\n`]}),`\n`]})]})}function o(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(d,{...a})}):d(a)}return _(O);})();\n;return Component;"
  },
  "_id": "blog/How-Shadcn-CLI-uses.mdx",
  "_raw": {
    "sourceFilePath": "blog/How-Shadcn-CLI-uses.mdx",
    "sourceFileName": "How-Shadcn-CLI-uses.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/How-Shadcn-CLI-uses"
  },
  "type": "Doc",
  "slug": "/blog/How-Shadcn-CLI-uses",
  "slugAsParams": "How-Shadcn-CLI-uses"
}