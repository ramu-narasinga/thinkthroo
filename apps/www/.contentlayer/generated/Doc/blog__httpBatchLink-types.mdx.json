{
  "title": "httpBatchLink types in tRPC source code explained\r",
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\r\nIn this article, we analyze the httpBatchLink types found in the tRPC source code. But first, you would want to know  \r\nwhat is httpBatchLink.\r\n\r\n# **httpBatchLink:**\r\n\r\nBelow is an example picked from the [tRPC vanilla setup guide](https://trpc.io/docs/client/vanilla/setup).\r\n\r\n```javascript\r\nimport { createTRPCClient, httpBatchLink } from '@trpc/client';\r\nimport type { AppRouter } from '../path/to/server/trpc';\r\nconst client = createTRPCClient<AppRouter>({\r\n links: [\r\n httpBatchLink({\r\n url: 'http://localhost:3000/trpc',\r\n // You can pass any HTTP headers you wish here\r\n async headers() {\r\n return {\r\n authorization: getAuthCookie(),\r\n };\r\n },\r\n }),\r\n ],\r\n});\r\n```\r\n\r\nhttpBatchLink is used in configuring tRPC. I was curious about its types, so I started looking at its source code. There is a filed named httpBatchLink.ts found in [packages/client/src/links/httpBatchLinks.ts](https://github.com/trpc/trpc/blob/next/packages/client/src/links/httpBatchLink.ts#L22) and has about 137 lines of code at the time of writing this article.\r\n\r\n## **httpBatchLink function definition:**\r\n\r\n```javascript\r\nexport function httpBatchLink<TRouter extends AnyRouter>(\r\n opts: HTTPBatchLinkOptions<TRouter['_def']['_config']['$types']>,\r\n): TRPCLink<TRouter> {\r\n```\r\n\r\nopts are of type `HTTPBatchLinkOptions<TRouter[‘_def’][‘_config’][‘$types’]>,`. Let’s follow along the unknowns. I would look at the type definitions for:  \r\n\\- HTTPBatchLinkOptions  \r\n\\- TRouter\r\n\r\n## **HTTPBatchLinkOptions type**\r\n\r\nYou will find HTTPBatchLinkOptions type defined in [packages/client/src/links/HTTPBatchLinkOptions.ts](https://github.com/trpc/trpc/blob/next/packages/client/src/links/HTTPBatchLinkOptions.ts#L6)\r\n\r\n```javascript\r\nexport type HTTPBatchLinkOptions<TRoot extends AnyClientTypes> =\r\n HTTPLinkBaseOptions<TRoot> & {\r\n maxURLLength?: number;\r\n /**\r\n * Headers to be set on outgoing requests or a callback that of said headers\r\n * @see http://trpc.io/docs/client/headers\r\n */\r\n headers?:\r\n | HTTPHeaders\r\n | ((opts: {\r\n opList: NonEmptyArray<Operation>;\r\n }) => HTTPHeaders | Promise<HTTPHeaders>);\r\n };\r\n```\r\n\r\n`<TRoot extends AnyClientTypes>` is a generic type that extends AnyClientTypes, This means that the generic type must at least have the properties and structure of the type it extends.\r\n\r\n# **AnyClientTypes:**\r\n\r\n[AnyClientTypes](https://github.com/trpc/trpc/blob/next/packages/server/src/unstable-core-do-not-import/clientish/inferrable.ts#L3)\r\n\r\n```javascript\r\nexport type AnyClientTypes = Pick<AnyRootTypes, 'errorShape' | 'transformer'>;\r\n```\r\n\r\nWhat is Pick here? I searched for Pick in TS docs and [found this](https://www.typescriptlang.org/docs/handbook/utility-types.html#picktype-keys):  \r\nConstructs a type by picking the set of properties Keys (string literal or union of string literals) from Type.\r\n\r\nExample:\r\n\r\n```javascript\r\ninterface Todo {\r\n title: string;\r\n description: string;\r\n completed: boolean;\r\n}\r\n \r\ntype TodoPreview = Pick<Todo, \"title\" | \"completed\">;\r\n \r\nconst todo: TodoPreview = {\r\n title: \"Clean room\",\r\n completed: false,\r\n};\r\n```\r\n\r\n# **AnyRootTypes:**\r\n\r\n[AnyRootTypes](https://github.com/trpc/trpc/blob/next/packages/server/src/unstable-core-do-not-import/rootConfig.ts#L95)\r\n\r\n```javascript\r\nexport type AnyRootTypes = CreateRootTypes<{\r\n ctx: any;\r\n meta: any;\r\n errorShape: any;\r\n transformer: any;\r\n}>;\r\n```\r\n\r\nIt could be confusing but important rule here is that types are defined in files, making them colocated with the functions that use these types but also export these types so they can be used across the codebase where required.\r\n\r\nBest example here is, HTTPLinkBaseOptions defined in [httpUtils.ts](https://github.com/trpc/trpc/blob/next/packages/client/src/links/internals/httpUtils.ts#L22) is used in the same file and also used in [packages/client/src/links/HTTPBatchLinkOptions.ts](https://github.com/trpc/trpc/blob/next/packages/client/src/links/HTTPBatchLinkOptions.ts#L6)\r\n\r\nIn some cases like:\r\n\r\n* [packages/client/src/links/HTTPBatchLinkOptions.ts](https://github.com/trpc/trpc/blob/next/packages/client/src/links/HTTPBatchLinkOptions.ts#L6)\r\n    \r\n* [packages/server/src/unstable-core-do-not-import/clientish/inferrable.ts](https://github.com/trpc/trpc/blob/next/packages/server/src/unstable-core-do-not-import/clientish/inferrable.ts#L3)\r\n    \r\n\r\nOnly types are defined in these files, there are no other functions found here.\r\n\r\n# **About me:**\r\n\r\nHey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\r\n\r\nI am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com\r\n\r\nMy Github — [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\r\n\r\nMy website — [https://ramunarasinga.com](https://ramunarasinga.com/)\r\n\r\nMy Youtube channel — [https://www.youtube.com/@thinkthroo](https://www.youtube.com/@thinkthroo)\r\n\r\nLearning platform — [https://thinkthroo.com](https://thinkthroo.com/)\r\n\r\nCodebase Architecture — [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\r\n\r\nBest practices — [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\r\n\r\nProduction-grade projects — [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\r\n\r\n# **References:**\r\n\r\n1. [https://trpc.io/docs/client/vanilla/setup](https://trpc.io/docs/client/vanilla/setup)\r\n    \r\n2. [https://github.com/trpc/trpc/blob/next/packages/client/src/links/httpBatchLink.ts#L22](https://github.com/trpc/trpc/blob/next/packages/client/src/links/httpBatchLink.ts#L22)\r\n    \r\n3. [https://github.com/trpc/trpc/blob/next/packages/client/src/links/HTTPBatchLinkOptions.ts#L6](https://github.com/trpc/trpc/blob/next/packages/client/src/links/HTTPBatchLinkOptions.ts#L6)\r\n    \r\n4. https://github.com/trpc/trpc/blob/next/packages/client/src/links/internals/httpUtils.ts#L22\r\n",
    "code": "var Component=(()=>{var p=Object.create;var c=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var u=(l,e)=>()=>(e||l((e={exports:{}}).exports,e),e.exports),f=(l,e)=>{for(var t in e)c(l,t,{get:e[t],enumerable:!0})},o=(l,e,t,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of y(e))!g.call(l,s)&&s!==t&&c(l,s,{get:()=>e[s],enumerable:!(r=d(e,s))||r.enumerable});return l};var b=(l,e,t)=>(t=l!=null?p(m(l)):{},o(e||!l||!l.__esModule?c(t,\"default\",{value:l,enumerable:!0}):t,l)),k=l=>o(c({},\"__esModule\",{value:!0}),l);var i=u((x,a)=>{a.exports=_jsx_runtime});var N={};f(N,{default:()=>F,frontmatter:()=>T});var n=b(i()),T={title:\"httpBatchLink types in tRPC source code explained\"};function h(l){let e={a:\"a\",br:\"br\",code:\"code\",div:\"div\",h1:\"h1\",h2:\"h2\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",ul:\"ul\",...l.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"In this article, we analyze the httpBatchLink types found in the tRPC source code. But first, you would want to know\",(0,n.jsx)(e.br,{}),`\n`,\"what is httpBatchLink.\"]}),`\n`,(0,n.jsx)(e.h1,{id:\"httpbatchlink\",children:(0,n.jsx)(e.strong,{children:\"httpBatchLink:\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Below is an example picked from the \",(0,n.jsx)(e.a,{href:\"https://trpc.io/docs/client/vanilla/setup\",children:\"tRPC vanilla setup guide\"}),\".\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"javascript\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"javascript\",\"data-theme\":\"default\",children:[(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" createTRPCClient\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\",\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" httpBatchLink \"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" '@trpc/client'\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\";\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" type\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" AppRouter \"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" '../path/to/server/trpc'\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\";\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"const\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" client \"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"=\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" createTRPCClient\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"<\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\"AppRouter\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\">({\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" links\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" [\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" httpBatchLink\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"({\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" url\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" 'http://localhost:3000/trpc'\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\",\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" //\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF4\"},children:\" You can pass any HTTP headers you wish here\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" async\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" headers\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"()\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" return\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" authorization\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" getAuthCookie\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"(),\"})]}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" };\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" },\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" }),\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" ],\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"});\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"httpBatchLink is used in configuring tRPC. I was curious about its types, so I started looking at its source code. There is a filed named httpBatchLink.ts found in \",(0,n.jsx)(e.a,{href:\"https://github.com/trpc/trpc/blob/next/packages/client/src/links/httpBatchLink.ts#L22\",children:\"packages/client/src/links/httpBatchLinks.ts\"}),\" and has about 137 lines of code at the time of writing this article.\"]}),`\n`,(0,n.jsx)(e.h2,{id:\"httpbatchlink-function-definition\",children:(0,n.jsx)(e.strong,{children:\"httpBatchLink function definition:\"})}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"javascript\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"javascript\",\"data-theme\":\"default\",children:[(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"export\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" function\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" httpBatchLink\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"<\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\"TRouter\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" extends\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" AnyRouter\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\">(\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" opts\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" HTTPBatchLinkOptions\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"<\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\"TRouter\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"[\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"'_def'\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"][\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"'_config'\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"][\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"'$types'\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"]>,\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"):\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" TRPCLink\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"<\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\"TRouter\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\">\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"})]})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"opts are of type \",(0,n.jsx)(e.code,{children:\"HTTPBatchLinkOptions<TRouter[\\u2018_def\\u2019][\\u2018_config\\u2019][\\u2018$types\\u2019]>,\"}),\". Let\\u2019s follow along the unknowns. I would look at the type definitions for:\",(0,n.jsx)(e.br,{}),`\n`,\"- HTTPBatchLinkOptions\",(0,n.jsx)(e.br,{}),`\n`,\"- TRouter\"]}),`\n`,(0,n.jsx)(e.h2,{id:\"httpbatchlinkoptions-type\",children:(0,n.jsx)(e.strong,{children:\"HTTPBatchLinkOptions type\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"You will find HTTPBatchLinkOptions type defined in \",(0,n.jsx)(e.a,{href:\"https://github.com/trpc/trpc/blob/next/packages/client/src/links/HTTPBatchLinkOptions.ts#L6\",children:\"packages/client/src/links/HTTPBatchLinkOptions.ts\"})]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"javascript\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"javascript\",\"data-theme\":\"default\",children:[(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"export\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" type\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" HTTPBatchLinkOptions\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"<\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\"TRoot\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" extends\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" AnyClientTypes\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\">\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" =\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" HTTPLinkBaseOptions\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"<\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\"TRoot\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\">\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" &\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" maxURLLength\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"?:\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" number\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\";\"})]}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" /**\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#FFF4\"},children:\" * Headers to be set on outgoing requests or a callback that of said headers\"})}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF4\"},children:\" * \"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"@see\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF4\"},children:\" http://trpc.io/docs/client/headers\"})]}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" */\"})}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" headers\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"?:\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" |\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" HTTPHeaders\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" |\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" ((\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\"opts\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" opList\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" NonEmptyArray\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"<\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\"Operation\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\">;\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" })\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" =>\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" HTTPHeaders\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" |\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" Promise\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"<\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\"HTTPHeaders\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\">);\"})]}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" };\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:\"<TRoot extends AnyClientTypes>\"}),\" is a generic type that extends AnyClientTypes, This means that the generic type must at least have the properties and structure of the type it extends.\"]}),`\n`,(0,n.jsx)(e.h1,{id:\"anyclienttypes\",children:(0,n.jsx)(e.strong,{children:\"AnyClientTypes:\"})}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/trpc/trpc/blob/next/packages/server/src/unstable-core-do-not-import/clientish/inferrable.ts#L3\",children:\"AnyClientTypes\"})}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"javascript\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"javascript\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"export\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" type\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" AnyClientTypes\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" =\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" Pick\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"<\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\"AnyRootTypes\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\",\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" 'errorShape'\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" |\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" 'transformer'\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\">;\"})]})})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"What is Pick here? I searched for Pick in TS docs and \",(0,n.jsx)(e.a,{href:\"https://www.typescriptlang.org/docs/handbook/utility-types.html#picktype-keys\",children:\"found this\"}),\":\",(0,n.jsx)(e.br,{}),`\n`,\"Constructs a type by picking the set of properties Keys (string literal or union of string literals) from Type.\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Example:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"javascript\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"javascript\",\"data-theme\":\"default\",children:[(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"interface\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" Todo\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" title\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" string\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\";\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" description\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" string\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\";\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" completed\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" boolean\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\";\"})]}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" \"})}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"type\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" TodoPreview\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" =\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" Pick\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"<\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\"Todo\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\",\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"title\"'}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" |\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"completed\"'}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\">;\"})]}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" \"})}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"const\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" todo\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" TodoPreview\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" =\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" title\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"Clean room\"'}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\",\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" completed\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" false,\"})]}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"};\"})})]})})}),`\n`,(0,n.jsx)(e.h1,{id:\"anyroottypes\",children:(0,n.jsx)(e.strong,{children:\"AnyRootTypes:\"})}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/trpc/trpc/blob/next/packages/server/src/unstable-core-do-not-import/rootConfig.ts#L95\",children:\"AnyRootTypes\"})}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"javascript\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"javascript\",\"data-theme\":\"default\",children:[(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"export\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" type\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" AnyRootTypes\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" =\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" CreateRootTypes\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"<{\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" ctx\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" any\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\";\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" meta\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" any\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\";\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" errorShape\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" any\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\";\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" transformer\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" any\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\";\"})]}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}>;\"})})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"It could be confusing but important rule here is that types are defined in files, making them colocated with the functions that use these types but also export these types so they can be used across the codebase where required.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Best example here is, HTTPLinkBaseOptions defined in \",(0,n.jsx)(e.a,{href:\"https://github.com/trpc/trpc/blob/next/packages/client/src/links/internals/httpUtils.ts#L22\",children:\"httpUtils.ts\"}),\" is used in the same file and also used in \",(0,n.jsx)(e.a,{href:\"https://github.com/trpc/trpc/blob/next/packages/client/src/links/HTTPBatchLinkOptions.ts#L6\",children:\"packages/client/src/links/HTTPBatchLinkOptions.ts\"})]}),`\n`,(0,n.jsx)(e.p,{children:\"In some cases like:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/trpc/trpc/blob/next/packages/client/src/links/HTTPBatchLinkOptions.ts#L6\",children:\"packages/client/src/links/HTTPBatchLinkOptions.ts\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/trpc/trpc/blob/next/packages/server/src/unstable-core-do-not-import/clientish/inferrable.ts#L3\",children:\"packages/server/src/unstable-core-do-not-import/clientish/inferrable.ts\"})}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"Only types are defined in these files, there are no other functions found here.\"}),`\n`,(0,n.jsx)(e.h1,{id:\"about-me\",children:(0,n.jsx)(e.strong,{children:\"About me:\"})}),`\n`,(0,n.jsx)(e.p,{children:\"Hey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"I am open to work on interesting projects. Send me an email at \",(0,n.jsx)(e.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:\"ramu.narasinga@gmail.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Github \\u2014 \",(0,n.jsx)(e.a,{href:\"https://github.com/ramu-narasinga\",children:\"https://github.com/ramu-narasinga\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My website \\u2014 \",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:\"https://ramunarasinga.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Youtube channel \\u2014 \",(0,n.jsx)(e.a,{href:\"https://www.youtube.com/@thinkthroo\",children:\"https://www.youtube.com/@thinkthroo\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Learning platform \\u2014 \",(0,n.jsx)(e.a,{href:\"https://thinkthroo.com/\",children:\"https://thinkthroo.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Codebase Architecture \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/architecture\",children:\"https://app.thinkthroo.com/architecture\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Best practices \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/best-practices\",children:\"https://app.thinkthroo.com/best-practices\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Production-grade projects \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:\"https://app.thinkthroo.com/production-grade-projects\"})]}),`\n`,(0,n.jsx)(e.h1,{id:\"references\",children:(0,n.jsx)(e.strong,{children:\"References:\"})}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://trpc.io/docs/client/vanilla/setup\",children:\"https://trpc.io/docs/client/vanilla/setup\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/trpc/trpc/blob/next/packages/client/src/links/httpBatchLink.ts#L22\",children:\"https://github.com/trpc/trpc/blob/next/packages/client/src/links/httpBatchLink.ts#L22\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/trpc/trpc/blob/next/packages/client/src/links/HTTPBatchLinkOptions.ts#L6\",children:\"https://github.com/trpc/trpc/blob/next/packages/client/src/links/HTTPBatchLinkOptions.ts#L6\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/trpc/trpc/blob/next/packages/client/src/links/internals/httpUtils.ts#L22\",children:\"https://github.com/trpc/trpc/blob/next/packages/client/src/links/internals/httpUtils.ts#L22\"})}),`\n`]}),`\n`]})]})}function F(l={}){let{wrapper:e}=l.components||{};return e?(0,n.jsx)(e,{...l,children:(0,n.jsx)(h,{...l})}):h(l)}return k(N);})();\n;return Component;"
  },
  "_id": "blog/httpBatchLink-types.mdx",
  "_raw": {
    "sourceFilePath": "blog/httpBatchLink-types.mdx",
    "sourceFileName": "httpBatchLink-types.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/httpBatchLink-types"
  },
  "type": "Doc",
  "slug": "/blog/httpBatchLink-types",
  "slugAsParams": "httpBatchLink-types"
}