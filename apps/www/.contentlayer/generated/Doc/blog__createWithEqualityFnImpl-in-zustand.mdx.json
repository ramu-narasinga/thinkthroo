{
  "title": "createWithEqualityFnImpl in Zustand source code explained.\r",
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\r\nIn this article, we will analyse how the [createWithEqualityFnImpl](https://github.com/pmndrs/zustand/blob/main/src/traditional.ts#L74) is implemented by logging some of its value to get a better understanding.\r\n\r\n![](https://miro.medium.com/v2/resize:fit:875/1*t2aYkuCeF0AGVfR0vRG1pA.png)\r\n\r\nAs you can tell from the above image, createWithEqualityFn calls the function createWithEqualityFnImpl. This pattern is used in [vanilla.ts](https://github.com/pmndrs/zustand/blob/main/src/vanilla.ts) as well as demonstrated below:\r\n\r\n```plaintext\r\nexport const createStore = ((createState) =>\r\n  createState ? createStoreImpl(createState) : createStoreImpl) as CreateStore\r\n```\r\n\r\ncreateStore calls createStoreImpl and createWithEqualityFn calls createWithhEqualityFnImpl.\r\n\r\nBefore we jump into the execution of createWithEqualityFn, let’s first understand the purpose of using createWithEqualityFn.\r\n\r\n![](https://miro.medium.com/v2/resize:fit:875/1*nHutJ49cqYhbqHX2GVVF_A.png)\r\n\r\nThe above screenshot is from [https://github.com/pmndrs/zustand/tree/main](https://github.com/pmndrs/zustand/tree/main)\r\n\r\nYou can use createWithEqualityFn to have more control over re-rendering.\r\n\r\n## **createWithEqualityFn**\r\n\r\n```plaintext\r\nconst createWithEqualityFnImpl = <T>(\r\n  createState: StateCreator<T, [], []>,\r\n  defaultEqualityFn?: <U>(a: U, b: U) => boolean,\r\n) => {\r\n  const api = createStore(createState)\r\n\r\n  const useBoundStoreWithEqualityFn: any = (\r\n    selector?: any,\r\n    equalityFn = defaultEqualityFn,\r\n  ) => useStoreWithEqualityFn(api, selector, equalityFn)\r\n\r\n  Object.assign(useBoundStoreWithEqualityFn, api)\r\n\r\n  return useBoundStoreWithEqualityFn\r\n}\r\n```\r\n\r\n## **useStoreWithEqualityFn**\r\n\r\n```plaintext\r\nexport function useStoreWithEqualityFn<S extends ReadonlyStoreApi<unknown>>(\r\n  api: S,\r\n): ExtractState<S>\r\n\r\nexport function useStoreWithEqualityFn<S extends ReadonlyStoreApi<unknown>, U>(\r\n  api: S,\r\n  selector: (state: ExtractState<S>) => U,\r\n  equalityFn?: (a: U, b: U) => boolean,\r\n): U\r\n\r\nexport function useStoreWithEqualityFn<TState, StateSlice>(\r\n  api: ReadonlyStoreApi<TState>,\r\n  selector: (state: TState) => StateSlice = identity as any,\r\n  equalityFn?: (a: StateSlice, b: StateSlice) => boolean,\r\n) {\r\n  const slice = useSyncExternalStoreWithSelector(\r\n    api.subscribe,\r\n    api.getState,\r\n    api.getInitialState,\r\n    selector,\r\n    equalityFn,\r\n  )\r\n  useDebugValue(slice)\r\n  return slice\r\n}\r\n```\r\n\r\nThis is an overloading function. useStoreWithEqualityFn has 3 definitions:\r\n\r\n```plaintext\r\nexport function useStoreWithEqualityFn<S extends ReadonlyStoreApi<unknown>>(\r\n  api: S,\r\n): ExtractState<S>\r\n\r\nexport function useStoreWithEqualityFn<S extends ReadonlyStoreApi<unknown>, U>(\r\n  api: S,\r\n  selector: (state: ExtractState<S>) => U,\r\n  equalityFn?: (a: U, b: U) => boolean,\r\n): U\r\n\r\nexport function useStoreWithEqualityFn<TState, StateSlice>(\r\n  api: ReadonlyStoreApi<TState>,\r\n  selector: (state: TState) => StateSlice = identity as any,\r\n  equalityFn?: (a: StateSlice, b: StateSlice) => boolean,\r\n) {\r\n```\r\n\r\n![](https://miro.medium.com/v2/resize:fit:875/1*svt_ucTCpyNOGTCnKmMoPw.png)\r\n\r\nLet’s see how the slice value looks like:\r\n\r\n![](https://miro.medium.com/v2/resize:fit:875/1*GrB9UBQDkm3c_hBzkmq8iQ.png)\r\n\r\nvalue: 1 is skipped because we set the code to avoid re-render when the value is 1 as shown below:\r\n\r\n![](https://miro.medium.com/v2/resize:fit:875/1*jyi-JX5AZmFx9KhplHD6hw.png)\r\n\r\n# **About me:**\r\n\r\nHey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\r\n\r\nI am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com\r\n\r\nMy Github — [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\r\n\r\nMy website — [https://ramunarasinga.com](https://ramunarasinga.com/)\r\n\r\nMy Youtube channel — [https://www.youtube.com/@thinkthroo](https://www.youtube.com/@thinkthroo)\r\n\r\nLearning platform — [https://thinkthroo.com](https://thinkthroo.com/)\r\n\r\nCodebase Architecture — [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\r\n\r\nBest practices — [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\r\n\r\nProduction-grade projects — [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\r\n\r\n# **References:**\r\n\r\n1. [https://github.com/pmndrs/zustand/blob/main/src/traditional.ts#L74](https://github.com/pmndrs/zustand/blob/main/src/traditional.ts#L74)\r\n    \r\n2. [https://github.com/pmndrs/zustand/blob/main/src/traditional.ts#L39](https://github.com/pmndrs/zustand/blob/main/src/traditional.ts#L39)\r\n    \r\n\r\n[  \r\n](https://medium.com/tag/javascript?source=post_page-----2bd444f4ea88--------------------------------)\r\n",
    "code": "var Component=(()=>{var o=Object.create;var l=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,S=Object.prototype.hasOwnProperty;var y=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),b=(a,e)=>{for(var t in e)l(a,t,{get:e[t],enumerable:!0})},r=(a,e,t,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of u(e))!S.call(a,i)&&i!==t&&l(a,i,{get:()=>e[i],enumerable:!(s=m(e,i))||s.enumerable});return a};var f=(a,e,t)=>(t=a!=null?o(g(a)):{},r(e||!a||!a.__esModule?l(t,\"default\",{value:a,enumerable:!0}):t,a)),N=a=>r(l({},\"__esModule\",{value:!0}),a);var h=y((E,c)=>{c.exports=_jsx_runtime});var F={};b(F,{default:()=>p,frontmatter:()=>q});var n=f(h()),q={title:\"createWithEqualityFnImpl in Zustand source code explained.\"};function d(a){let e={a:\"a\",br:\"br\",code:\"code\",div:\"div\",h1:\"h1\",h2:\"h2\",img:\"img\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"In this article, we will analyse how the \",(0,n.jsx)(e.a,{href:\"https://github.com/pmndrs/zustand/blob/main/src/traditional.ts#L74\",children:\"createWithEqualityFnImpl\"}),\" is implemented by logging some of its value to get a better understanding.\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://miro.medium.com/v2/resize:fit:875/1*t2aYkuCeF0AGVfR0vRG1pA.png\",alt:\"\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"As you can tell from the above image, createWithEqualityFn calls the function createWithEqualityFnImpl. This pattern is used in \",(0,n.jsx)(e.a,{href:\"https://github.com/pmndrs/zustand/blob/main/src/vanilla.ts\",children:\"vanilla.ts\"}),\" as well as demonstrated below:\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"export const createStore = ((createState) =>\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  createState ? createStoreImpl(createState) : createStoreImpl) as CreateStore\"})})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"createStore calls createStoreImpl and createWithEqualityFn calls createWithhEqualityFnImpl.\"}),`\n`,(0,n.jsx)(e.p,{children:\"Before we jump into the execution of createWithEqualityFn, let\\u2019s first understand the purpose of using createWithEqualityFn.\"}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://miro.medium.com/v2/resize:fit:875/1*nHutJ49cqYhbqHX2GVVF_A.png\",alt:\"\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"The above screenshot is from \",(0,n.jsx)(e.a,{href:\"https://github.com/pmndrs/zustand/tree/main\",children:\"https://github.com/pmndrs/zustand/tree/main\"})]}),`\n`,(0,n.jsx)(e.p,{children:\"You can use createWithEqualityFn to have more control over re-rendering.\"}),`\n`,(0,n.jsx)(e.h2,{id:\"createwithequalityfn\",children:(0,n.jsx)(e.strong,{children:\"createWithEqualityFn\"})}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"const createWithEqualityFnImpl = <T>(\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  createState: StateCreator<T, [], []>,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  defaultEqualityFn?: <U>(a: U, b: U) => boolean,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\") => {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  const api = createStore(createState)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  const useBoundStoreWithEqualityFn: any = (\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    selector?: any,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    equalityFn = defaultEqualityFn,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  ) => useStoreWithEqualityFn(api, selector, equalityFn)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  Object.assign(useBoundStoreWithEqualityFn, api)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  return useBoundStoreWithEqualityFn\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}\"})})]})})}),`\n`,(0,n.jsx)(e.h2,{id:\"usestorewithequalityfn\",children:(0,n.jsx)(e.strong,{children:\"useStoreWithEqualityFn\"})}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"export function useStoreWithEqualityFn<S extends ReadonlyStoreApi<unknown>>(\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  api: S,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"): ExtractState<S>\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"export function useStoreWithEqualityFn<S extends ReadonlyStoreApi<unknown>, U>(\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  api: S,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  selector: (state: ExtractState<S>) => U,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  equalityFn?: (a: U, b: U) => boolean,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"): U\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"export function useStoreWithEqualityFn<TState, StateSlice>(\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  api: ReadonlyStoreApi<TState>,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  selector: (state: TState) => StateSlice = identity as any,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  equalityFn?: (a: StateSlice, b: StateSlice) => boolean,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\") {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  const slice = useSyncExternalStoreWithSelector(\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    api.subscribe,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    api.getState,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    api.getInitialState,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    selector,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    equalityFn,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  )\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  useDebugValue(slice)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  return slice\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}\"})})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"This is an overloading function. useStoreWithEqualityFn has 3 definitions:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"export function useStoreWithEqualityFn<S extends ReadonlyStoreApi<unknown>>(\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  api: S,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"): ExtractState<S>\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"export function useStoreWithEqualityFn<S extends ReadonlyStoreApi<unknown>, U>(\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  api: S,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  selector: (state: ExtractState<S>) => U,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  equalityFn?: (a: U, b: U) => boolean,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"): U\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"export function useStoreWithEqualityFn<TState, StateSlice>(\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  api: ReadonlyStoreApi<TState>,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  selector: (state: TState) => StateSlice = identity as any,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  equalityFn?: (a: StateSlice, b: StateSlice) => boolean,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\") {\"})})]})})}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://miro.medium.com/v2/resize:fit:875/1*svt_ucTCpyNOGTCnKmMoPw.png\",alt:\"\"})}),`\n`,(0,n.jsx)(e.p,{children:\"Let\\u2019s see how the slice value looks like:\"}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://miro.medium.com/v2/resize:fit:875/1*GrB9UBQDkm3c_hBzkmq8iQ.png\",alt:\"\"})}),`\n`,(0,n.jsx)(e.p,{children:\"value: 1 is skipped because we set the code to avoid re-render when the value is 1 as shown below:\"}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://miro.medium.com/v2/resize:fit:875/1*jyi-JX5AZmFx9KhplHD6hw.png\",alt:\"\"})}),`\n`,(0,n.jsx)(e.h1,{id:\"about-me\",children:(0,n.jsx)(e.strong,{children:\"About me:\"})}),`\n`,(0,n.jsx)(e.p,{children:\"Hey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"I am open to work on interesting projects. Send me an email at \",(0,n.jsx)(e.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:\"ramu.narasinga@gmail.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Github \\u2014 \",(0,n.jsx)(e.a,{href:\"https://github.com/ramu-narasinga\",children:\"https://github.com/ramu-narasinga\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My website \\u2014 \",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:\"https://ramunarasinga.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Youtube channel \\u2014 \",(0,n.jsx)(e.a,{href:\"https://www.youtube.com/@thinkthroo\",children:\"https://www.youtube.com/@thinkthroo\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Learning platform \\u2014 \",(0,n.jsx)(e.a,{href:\"https://thinkthroo.com/\",children:\"https://thinkthroo.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Codebase Architecture \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/architecture\",children:\"https://app.thinkthroo.com/architecture\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Best practices \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/best-practices\",children:\"https://app.thinkthroo.com/best-practices\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Production-grade projects \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:\"https://app.thinkthroo.com/production-grade-projects\"})]}),`\n`,(0,n.jsx)(e.h1,{id:\"references\",children:(0,n.jsx)(e.strong,{children:\"References:\"})}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/pmndrs/zustand/blob/main/src/traditional.ts#L74\",children:\"https://github.com/pmndrs/zustand/blob/main/src/traditional.ts#L74\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/pmndrs/zustand/blob/main/src/traditional.ts#L39\",children:\"https://github.com/pmndrs/zustand/blob/main/src/traditional.ts#L39\"})}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsxs)(e.a,{href:\"https://medium.com/tag/javascript?source=post_page-----2bd444f4ea88--------------------------------\",children:[(0,n.jsx)(e.br,{}),`\n`]})})]})}function p(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(d,{...a})}):d(a)}return N(F);})();\n;return Component;"
  },
  "_id": "blog/createWithEqualityFnImpl-in-zustand.mdx",
  "_raw": {
    "sourceFilePath": "blog/createWithEqualityFnImpl-in-zustand.mdx",
    "sourceFileName": "createWithEqualityFnImpl-in-zustand.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/createWithEqualityFnImpl-in-zustand"
  },
  "type": "Doc",
  "slug": "/blog/createWithEqualityFnImpl-in-zustand",
  "slugAsParams": "createWithEqualityFnImpl-in-zustand"
}