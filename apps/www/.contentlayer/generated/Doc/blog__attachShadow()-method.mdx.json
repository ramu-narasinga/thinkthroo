{
<<<<<<< HEAD
  "title": "attachShadow() method in react-scan source code.\r",
=======
  "title": "attachShadow() method in react-scan source code.",
>>>>>>> 442b740f3cf43317109944c6cf4b7ca543a8cddf
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
<<<<<<< HEAD
    "raw": "\r\nIn this article, we will review the below code snippet from [react-scan source code](https://github.com/aidenybai/react-scan/blob/main/packages/scan/src/core/index.ts#L49).\r\n\r\n```plaintext\r\nconst initRootContainer = (): RootContainer => {\r\n  if (rootContainer && shadowRoot) {\r\n    return { rootContainer, shadowRoot };\r\n  }\r\n\r\n  rootContainer = document.createElement('div');\r\n  rootContainer.id = 'react-scan-root';\r\n\r\n  // Notice the attachShadow here?\r\n  shadowRoot = rootContainer.attachShadow({ mode: 'open' });\r\n\r\n  const cssStyles = document.createElement('style');\r\n  cssStyles.textContent = styles;\r\n```\r\n\r\nWhat’s so interesting about this code snippet? well, it is the `attachShadow` method used.\r\n\r\n![](https://miro.medium.com/v2/resize:fit:875/1*52t_KqtFwTjPITgDbNscmw.png)\r\n\r\n# **attachShadow**\r\n\r\nThe `Element.attachShadow()` method attaches a shadow DOM tree to the specified element and returns a reference to its [`ShadowRoot`](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot).\r\n\r\nI have seen [ShadowDOM usage in Next.js source code](https://dev.to/ramunarasinga/tips-from-open-source-use-shadow-dom-to-avoid-potential-css-breaks-41dd).\r\n\r\nIt looks like you can’t attach shadowDOM to every type of element. Read more about [elements you can attach shadowDOM to](https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow#elements_you_can_attach_a_shadow_to).\r\n\r\nComing back to the code snippet in consideration above:\r\n\r\n```plaintext\r\nattachShadow({ mode: 'open' })\r\n```\r\n\r\nThere is a parameter here, mode.\r\n\r\nMDN documentation tells us that mode is a string specifying the *encapsulation mode* for the shadow DOM tree. This can be one of:\r\n\r\n* open\r\n    \r\n\r\nElements of the shadow root are accessible from JavaScript outside the root, for example using [`Element.shadowRoot`](https://developer.mozilla.org/en-US/docs/Web/API/Element/shadowRoot):\r\n\r\n```plaintext\r\nelement.attachShadow({ mode: \"open\" });\r\nelement.shadowRoot; // Returns a ShadowRoot obj\r\n```\r\n\r\n* closed\r\n    \r\n\r\nDenies access to the node(s) of a closed shadow root from JavaScript outside it:\r\n\r\n```plaintext\r\nelement.attachShadow({ mode: \"closed\" });\r\nelement.shadowRoot; // Returns null\r\n```\r\n\r\nRead more about the [parameters you can pass into attachShadow method](https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow#parameters).\r\n\r\n# **About me:**\r\n\r\nHey, my name is [Ramu Narasinga](https://ramunarasinga.com/). I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\r\n\r\n***I am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com***\r\n\r\nMy Github — [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\r\n\r\nMy website — [https://ramunarasinga.com](https://ramunarasinga.com/)\r\n\r\nMy Youtube channel — [https://www.youtube.com/@thinkthroo](https://www.youtube.com/@thinkthroo)\r\n\r\nLearning platform — [https://thinkthroo.com](https://thinkthroo.com/)\r\n\r\nCodebase Architecture — [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\r\n\r\nBest practices — [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\r\n\r\nProduction-grade projects — [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\r\n\r\n# **References:**\r\n\r\n1. [https://github.com/aidenybai/react-scan/blob/main/packages/scan/src/core/index.ts#L49](https://github.com/aidenybai/react-scan/blob/main/packages/scan/src/core/index.ts#L49)\r\n    \r\n2. [https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow](https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow)\r\n    \r\n3. [https://dev.to/ramunarasinga/tips-from-open-source-use-shadow-dom-to-avoid-potential-css-breaks-41dd](https://dev.to/ramunarasinga/tips-from-open-source-use-shadow-dom-to-avoid-potential-css-breaks-41dd)",
=======
    "raw": "\nIn this article, we will review the below code snippet from [react-scan source code](https://github.com/aidenybai/react-scan/blob/main/packages/scan/src/core/index.ts#L49).\n\n```plaintext\nconst initRootContainer = (): RootContainer => {\n  if (rootContainer && shadowRoot) {\n    return { rootContainer, shadowRoot };\n  }\n\n  rootContainer = document.createElement('div');\n  rootContainer.id = 'react-scan-root';\n\n  // Notice the attachShadow here?\n  shadowRoot = rootContainer.attachShadow({ mode: 'open' });\n\n  const cssStyles = document.createElement('style');\n  cssStyles.textContent = styles;\n```\n\nWhat’s so interesting about this code snippet? well, it is the `attachShadow` method used.\n\n![](https://miro.medium.com/v2/resize:fit:875/1*52t_KqtFwTjPITgDbNscmw.png)\n\n# **attachShadow**\n\nThe `Element.attachShadow()` method attaches a shadow DOM tree to the specified element and returns a reference to its [`ShadowRoot`](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot).\n\nI have seen [ShadowDOM usage in Next.js source code](https://dev.to/ramunarasinga/tips-from-open-source-use-shadow-dom-to-avoid-potential-css-breaks-41dd).\n\nIt looks like you can’t attach shadowDOM to every type of element. Read more about [elements you can attach shadowDOM to](https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow#elements_you_can_attach_a_shadow_to).\n\nComing back to the code snippet in consideration above:\n\n```plaintext\nattachShadow({ mode: 'open' })\n```\n\nThere is a parameter here, mode.\n\nMDN documentation tells us that mode is a string specifying the *encapsulation mode* for the shadow DOM tree. This can be one of:\n\n* open\n    \n\nElements of the shadow root are accessible from JavaScript outside the root, for example using [`Element.shadowRoot`](https://developer.mozilla.org/en-US/docs/Web/API/Element/shadowRoot):\n\n```plaintext\nelement.attachShadow({ mode: \"open\" });\nelement.shadowRoot; // Returns a ShadowRoot obj\n```\n\n* closed\n    \n\nDenies access to the node(s) of a closed shadow root from JavaScript outside it:\n\n```plaintext\nelement.attachShadow({ mode: \"closed\" });\nelement.shadowRoot; // Returns null\n```\n\nRead more about the [parameters you can pass into attachShadow method](https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow#parameters).\n\n# **About me:**\n\nHey, my name is [Ramu Narasinga](https://ramunarasinga.com/). I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\n\n***I am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com***\n\nMy Github — [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\n\nMy website — [https://ramunarasinga.com](https://ramunarasinga.com/)\n\nMy Youtube channel — [https://www.youtube.com/@thinkthroo](https://www.youtube.com/@thinkthroo)\n\nLearning platform — [https://thinkthroo.com](https://thinkthroo.com/)\n\nCodebase Architecture — [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\n\nBest practices — [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\n\nProduction-grade projects — [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\n\n# **References:**\n\n1. [https://github.com/aidenybai/react-scan/blob/main/packages/scan/src/core/index.ts#L49](https://github.com/aidenybai/react-scan/blob/main/packages/scan/src/core/index.ts#L49)\n    \n2. [https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow](https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow)\n    \n3. [https://dev.to/ramunarasinga/tips-from-open-source-use-shadow-dom-to-avoid-potential-css-breaks-41dd](https://dev.to/ramunarasinga/tips-from-open-source-use-shadow-dom-to-avoid-potential-css-breaks-41dd)",
>>>>>>> 442b740f3cf43317109944c6cf4b7ca543a8cddf
    "code": "var Component=(()=>{var p=Object.create;var r=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var w=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),b=(a,e)=>{for(var t in e)r(a,t,{get:e[t],enumerable:!0})},i=(a,e,t,c)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of u(e))!f.call(a,o)&&o!==t&&r(a,o,{get:()=>e[o],enumerable:!(c=m(e,o))||c.enumerable});return a};var y=(a,e,t)=>(t=a!=null?p(g(a)):{},i(e||!a||!a.__esModule?r(t,\"default\",{value:a,enumerable:!0}):t,a)),S=a=>i(r({},\"__esModule\",{value:!0}),a);var s=w((k,h)=>{h.exports=_jsx_runtime});var x={};b(x,{default:()=>l,frontmatter:()=>v});var n=y(s()),v={title:\"attachShadow() method in react-scan source code.\"};function d(a){let e={a:\"a\",code:\"code\",div:\"div\",em:\"em\",h1:\"h1\",img:\"img\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",ul:\"ul\",...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"In this article, we will review the below code snippet from \",(0,n.jsx)(e.a,{href:\"https://github.com/aidenybai/react-scan/blob/main/packages/scan/src/core/index.ts#L49\",children:\"react-scan source code\"}),\".\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"const initRootContainer = (): RootContainer => {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  if (rootContainer && shadowRoot) {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    return { rootContainer, shadowRoot };\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  rootContainer = document.createElement('div');\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  rootContainer.id = 'react-scan-root';\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  // Notice the attachShadow here?\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  shadowRoot = rootContainer.attachShadow({ mode: 'open' });\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  const cssStyles = document.createElement('style');\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  cssStyles.textContent = styles;\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"What\\u2019s so interesting about this code snippet? well, it is the \",(0,n.jsx)(e.code,{children:\"attachShadow\"}),\" method used.\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://miro.medium.com/v2/resize:fit:875/1*52t_KqtFwTjPITgDbNscmw.png\",alt:\"\"})}),`\n`,(0,n.jsx)(e.h1,{id:\"attachshadow\",children:(0,n.jsx)(e.strong,{children:\"attachShadow\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"The \",(0,n.jsx)(e.code,{children:\"Element.attachShadow()\"}),\" method attaches a shadow DOM tree to the specified element and returns a reference to its \",(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot\",children:(0,n.jsx)(e.code,{children:\"ShadowRoot\"})}),\".\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"I have seen \",(0,n.jsx)(e.a,{href:\"https://dev.to/ramunarasinga/tips-from-open-source-use-shadow-dom-to-avoid-potential-css-breaks-41dd\",children:\"ShadowDOM usage in Next.js source code\"}),\".\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"It looks like you can\\u2019t attach shadowDOM to every type of element. Read more about \",(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow#elements_you_can_attach_a_shadow_to\",children:\"elements you can attach shadowDOM to\"}),\".\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Coming back to the code snippet in consideration above:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"attachShadow({ mode: 'open' })\"})})})})}),`\n`,(0,n.jsx)(e.p,{children:\"There is a parameter here, mode.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"MDN documentation tells us that mode is a string specifying the \",(0,n.jsx)(e.em,{children:\"encapsulation mode\"}),\" for the shadow DOM tree. This can be one of:\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"open\"}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Elements of the shadow root are accessible from JavaScript outside the root, for example using \",(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/Element/shadowRoot\",children:(0,n.jsx)(e.code,{children:\"Element.shadowRoot\"})}),\":\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'element.attachShadow({ mode: \"open\" });'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"element.shadowRoot; // Returns a ShadowRoot obj\"})})]})})}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"closed\"}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"Denies access to the node(s) of a closed shadow root from JavaScript outside it:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'element.attachShadow({ mode: \"closed\" });'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"element.shadowRoot; // Returns null\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Read more about the \",(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow#parameters\",children:\"parameters you can pass into attachShadow method\"}),\".\"]}),`\n`,(0,n.jsx)(e.h1,{id:\"about-me\",children:(0,n.jsx)(e.strong,{children:\"About me:\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Hey, my name is \",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:\"Ramu Narasinga\"}),\". I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.em,{children:(0,n.jsxs)(e.strong,{children:[\"I am open to work on interesting projects. Send me an email at \",(0,n.jsx)(e.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:\"ramu.narasinga@gmail.com\"})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Github \\u2014 \",(0,n.jsx)(e.a,{href:\"https://github.com/ramu-narasinga\",children:\"https://github.com/ramu-narasinga\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My website \\u2014 \",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:\"https://ramunarasinga.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Youtube channel \\u2014 \",(0,n.jsx)(e.a,{href:\"https://www.youtube.com/@thinkthroo\",children:\"https://www.youtube.com/@thinkthroo\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Learning platform \\u2014 \",(0,n.jsx)(e.a,{href:\"https://thinkthroo.com/\",children:\"https://thinkthroo.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Codebase Architecture \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/architecture\",children:\"https://app.thinkthroo.com/architecture\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Best practices \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/best-practices\",children:\"https://app.thinkthroo.com/best-practices\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Production-grade projects \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:\"https://app.thinkthroo.com/production-grade-projects\"})]}),`\n`,(0,n.jsx)(e.h1,{id:\"references\",children:(0,n.jsx)(e.strong,{children:\"References:\"})}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/aidenybai/react-scan/blob/main/packages/scan/src/core/index.ts#L49\",children:\"https://github.com/aidenybai/react-scan/blob/main/packages/scan/src/core/index.ts#L49\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow\",children:\"https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://dev.to/ramunarasinga/tips-from-open-source-use-shadow-dom-to-avoid-potential-css-breaks-41dd\",children:\"https://dev.to/ramunarasinga/tips-from-open-source-use-shadow-dom-to-avoid-potential-css-breaks-41dd\"})}),`\n`]}),`\n`]})]})}function l(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(d,{...a})}):d(a)}return S(x);})();\n;return Component;"
  },
  "_id": "blog/attachShadow()-method.mdx",
  "_raw": {
    "sourceFilePath": "blog/attachShadow()-method.mdx",
    "sourceFileName": "attachShadow()-method.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/attachShadow()-method"
  },
  "type": "Doc",
  "slug": "/blog/attachShadow()-method",
  "slugAsParams": "attachShadow()-method"
}