{
  "title": "How Changsets reads config.json internally\r",
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\r\nWhen you initialise Changesets via the CLI using init command, this command sets up the .changeset folder. It generates a readme and a config file. The config file includes the default options, as well as comments   \r\non what these options represent.\r\n\r\nThe default config.json generated by init command looks like below:\r\n\r\n```plaintext\r\n{\r\n \"commit\": false,\r\n \"updateInternalDependencies\": \"patch\",\r\n \"linked\": [],\r\n \"access\": \"restricted\",\r\n \"baseBranch\": \"master\",\r\n \"ignore\": [],\r\n \"changelog\": \"@changesets/cli/changelog\"\r\n}\r\n```\r\n\r\nRead more about config.json [here](https://github.com/changesets/changesets/blob/main/docs/config-file-options.md).\r\n\r\nNow that we understand what a config.json is for in using Changesets, let’s look at how CLI package reads this config.json.\r\n\r\nIn the run function, this try catch block is found:\r\n\r\n```plaintext\r\ntry {\r\n config = await read(cwd, packages);\r\n} catch (e) {\r\n let oldConfigExists = await fs.pathExists(\r\n path.resolve(cwd, \".changeset/config.js\")\r\n );\r\n```\r\n\r\n`read` function is part of another package named [config](https://github.com/changesets/changesets/blob/main/packages/config/src/index.ts#L94).\r\n\r\n![](https://cdn-images-1.medium.com/max/1600/1*myvRzlYdDrHtZBpyQzJX-Q.png)\r\n\r\nAs you can see from the above image, `fs.readJSON` is used in combination with path.join that combines cwd + .changesets + “config.json”\r\n\r\n![](https://cdn-images-1.medium.com/max/1600/1*_E9sStHNLd5Xb3NwSaKIWQ.png)\r\n\r\nparse accepts this config.json read as its first argument and this parse function is a really long function that performs additional operations using this json and packages (second argument).\r\n\r\n# **About me:**\r\n\r\nHey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\r\n\r\nI am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com\r\n\r\nMy Github — [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\r\n\r\nMy website — [https://ramunarasinga.com](https://ramunarasinga.com/)\r\n\r\nMy Youtube channel — [https://www.youtube.com/@thinkthroo](https://www.youtube.com/@thinkthroo)\r\n\r\nLearning platform — [https://thinkthroo.com](https://thinkthroo.com/)\r\n\r\nCodebase Architecture — [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\r\n\r\nBest practices — [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\r\n\r\nProduction-grade projects — [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\r\n\r\n### References:\r\n\r\n1. [https://github.com/changesets/changesets/blob/main/packages/cli/src/run.ts#L29](https://github.com/changesets/changesets/blob/main/packages/cli/src/run.ts#L29)\r\n    \r\n2. [https://github.com/changesets/changesets/blob/main/packages/cli/src/run.ts#L44](https://github.com/changesets/changesets/blob/main/packages/cli/src/run.ts#L44)\r\n    \r\n3. [https://github.com/changesets/changesets/blob/main/packages/config/src/index.ts#L94](https://github.com/changesets/changesets/blob/main/packages/config/src/index.ts#L94)\r\n    \r\n4. [https://github.com/changesets/changesets/blob/main/docs/config-file-options.md](https://github.com/changesets/changesets/blob/main/docs/config-file-options.md)\r\n    \r\n5. [https://github.com/changesets/changesets/blob/main/packages/cli/README.md](https://github.com/changesets/changesets/blob/main/packages/cli/README.md)",
    "code": "var Component=(()=>{var p=Object.create;var c=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var b=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),k=(a,e)=>{for(var t in e)c(a,t,{get:e[t],enumerable:!0})},h=(a,e,t,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of m(e))!f.call(a,s)&&s!==t&&c(a,s,{get:()=>e[s],enumerable:!(i=g(e,s))||i.enumerable});return a};var w=(a,e,t)=>(t=a!=null?p(u(a)):{},h(e||!a||!a.__esModule?c(t,\"default\",{value:a,enumerable:!0}):t,a)),y=a=>h(c({},\"__esModule\",{value:!0}),a);var o=b((L,r)=>{r.exports=_jsx_runtime});var x={};k(x,{default:()=>d,frontmatter:()=>j});var n=w(o()),j={title:\"How Changsets reads config.json internally\"};function l(a){let e={a:\"a\",br:\"br\",code:\"code\",div:\"div\",h1:\"h1\",h3:\"h3\",img:\"img\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"When you initialise Changesets via the CLI using init command, this command sets up the\\xA0.changeset folder. It generates a readme and a config file. The config file includes the default options, as well as comments\\xA0\",(0,n.jsx)(e.br,{}),`\n`,\"on what these options represent.\"]}),`\n`,(0,n.jsx)(e.p,{children:\"The default config.json generated by init command looks like below:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"{\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"commit\": false,'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"updateInternalDependencies\": \"patch\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"linked\": [],'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"access\": \"restricted\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"baseBranch\": \"master\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"ignore\": [],'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"changelog\": \"@changesets/cli/changelog\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Read more about config.json \",(0,n.jsx)(e.a,{href:\"https://github.com/changesets/changesets/blob/main/docs/config-file-options.md\",children:\"here\"}),\".\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Now that we understand what a config.json is for in using Changesets, let\\u2019s look at how CLI package reads this config.json.\"}),`\n`,(0,n.jsx)(e.p,{children:\"In the run function, this try catch block is found:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"try {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" config = await read(cwd, packages);\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"} catch (e) {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" let oldConfigExists = await fs.pathExists(\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' path.resolve(cwd, \".changeset/config.js\")'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" );\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:\"read\"}),\" function is part of another package named \",(0,n.jsx)(e.a,{href:\"https://github.com/changesets/changesets/blob/main/packages/config/src/index.ts#L94\",children:\"config\"}),\".\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://cdn-images-1.medium.com/max/1600/1*myvRzlYdDrHtZBpyQzJX-Q.png\",alt:\"\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"As you can see from the above image, \",(0,n.jsx)(e.code,{children:\"fs.readJSON\"}),\" is used in combination with path.join that combines cwd +\\xA0.changesets + \\u201Cconfig.json\\u201D\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://cdn-images-1.medium.com/max/1600/1*_E9sStHNLd5Xb3NwSaKIWQ.png\",alt:\"\"})}),`\n`,(0,n.jsx)(e.p,{children:\"parse accepts this config.json read as its first argument and this parse function is a really long function that performs additional operations using this json and packages (second argument).\"}),`\n`,(0,n.jsx)(e.h1,{id:\"about-me\",children:(0,n.jsx)(e.strong,{children:\"About me:\"})}),`\n`,(0,n.jsx)(e.p,{children:\"Hey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"I am open to work on interesting projects. Send me an email at \",(0,n.jsx)(e.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:\"ramu.narasinga@gmail.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Github \\u2014 \",(0,n.jsx)(e.a,{href:\"https://github.com/ramu-narasinga\",children:\"https://github.com/ramu-narasinga\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My website \\u2014 \",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:\"https://ramunarasinga.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Youtube channel \\u2014 \",(0,n.jsx)(e.a,{href:\"https://www.youtube.com/@thinkthroo\",children:\"https://www.youtube.com/@thinkthroo\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Learning platform \\u2014 \",(0,n.jsx)(e.a,{href:\"https://thinkthroo.com/\",children:\"https://thinkthroo.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Codebase Architecture \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/architecture\",children:\"https://app.thinkthroo.com/architecture\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Best practices \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/best-practices\",children:\"https://app.thinkthroo.com/best-practices\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Production-grade projects \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:\"https://app.thinkthroo.com/production-grade-projects\"})]}),`\n`,(0,n.jsx)(e.h3,{id:\"references\",children:\"References:\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/changesets/changesets/blob/main/packages/cli/src/run.ts#L29\",children:\"https://github.com/changesets/changesets/blob/main/packages/cli/src/run.ts#L29\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/changesets/changesets/blob/main/packages/cli/src/run.ts#L44\",children:\"https://github.com/changesets/changesets/blob/main/packages/cli/src/run.ts#L44\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/changesets/changesets/blob/main/packages/config/src/index.ts#L94\",children:\"https://github.com/changesets/changesets/blob/main/packages/config/src/index.ts#L94\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/changesets/changesets/blob/main/docs/config-file-options.md\",children:\"https://github.com/changesets/changesets/blob/main/docs/config-file-options.md\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/changesets/changesets/blob/main/packages/cli/README.md\",children:\"https://github.com/changesets/changesets/blob/main/packages/cli/README.md\"})}),`\n`]}),`\n`]})]})}function d(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(l,{...a})}):l(a)}return y(x);})();\n;return Component;"
  },
  "_id": "blog/changesets-reads-config.mdx",
  "_raw": {
    "sourceFilePath": "blog/changesets-reads-config.mdx",
    "sourceFileName": "changesets-reads-config.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/changesets-reads-config"
  },
  "type": "Doc",
  "slug": "/blog/changesets-reads-config",
  "slugAsParams": "changesets-reads-config"
}