{
  "title": "ExtendableError usage in changesets errors package\r",
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\r\nThere is this import found at line#2 in [Changesets CLI package source code](https://github.com/changesets/changesets/blob/main/packages/cli/src/index.ts#L2)\r\n\r\n```plaintext\r\nimport { ExitError, InternalError } from \"@changesets/errors\";\r\n```\r\n\r\nYou will learn the below concepts:\r\n\r\n1\\. ExtendableError package  \r\n2\\. ExitError  \r\n3\\. InternalError\r\n\r\n![](https://cdn-images-1.medium.com/max/1600/1*SA2xkYrnuswJA-fbxCrKCQ.png)\r\n\r\n### ExtendableError\r\n\r\nYou will find that [ExitError](https://github.com/changesets/changesets/blob/main/packages/errors/src/index.ts#L13) extends ExtendableError.\r\n\r\nI assumed ExtendableError is probably another class defined within the same file, that was not the case.\r\n\r\n![](https://cdn-images-1.medium.com/max/1600/1*em1h2IDQy5dD5SKF-wVVgw.png)\r\n\r\nIt is imported from [extendable-error](https://www.npmjs.com/package/extendable-error). What’s this?\r\n\r\nA simple abstract extendable error class that extends Error, which handles the error name, message and stack property.\r\n\r\n#### Install\r\n\r\n```plaintext\r\nnpm install extendable-error - save\r\n```\r\n\r\n#### Usage\r\n\r\nThis usage example from the docs.\r\n\r\n```plaintext\r\nimport ExtendableError from 'extendable-error';\r\n \r\nclass SomeError extends ExtendableError {\r\n constructor(\r\n message: string,\r\n public code: number\r\n ) {\r\n super(message);\r\n }\r\n}\r\n \r\nlet someError = new SomeError('Some error', 0x0001);\r\n```\r\n\r\nPurpose of ExtendableError is to create custom error classes in JavaScript   \r\nwith consistent behavior for error handling. ExtendableError preserves the error stack and name.\r\n\r\n### Extending ExtendableError vs Extending Error\r\n\r\nI asked ChatGPT to list the differences between extending ExtendableError and extending Error directly and below is picked from the ChatGPT answer:\r\n\r\n1. name Property Mismatch (In Some Environments):\r\n    \r\n\r\n* Direct Error Inheritance: In some older JavaScript environments (e.g., older versions of Node.js or some non-browser environments), if you extend Error directly, the name property might not always be correctly set to the name of the error class (e.g., ValidationError).\r\n    \r\n* ExtendableError: It explicitly sets this.name = this.constructor.name;, which ensures that the name property is set correctly across all environments, even if the environment doesn’t behave correctly  \r\n    with Error inheritance.\r\n    \r\n\r\n2\\. Stack Trace Reliability:\r\n\r\n* Direct Error Inheritance: In some environments, especially Node.js, using Error.captureStackTrace directly in your custom error class ensures the stack trace points to the custom error class. If you   \r\n    don’t use this, the stack trace might not behave as expected and could potentially show the wrong location in the call stack.\r\n    \r\n* ExtendableError: By using Error.captureStackTrace, ExtendableError ensures that the stack trace is correctly generated, pointing to the location where the error was thrown. This is critical in environments   \r\n    like Node.js where debugging is more reliant on stack traces.\r\n    \r\n\r\n### ExitError\r\n\r\nThe below code is picked from [Changesets errors package](https://github.com/changesets/changesets/blob/main/packages/errors/src/index.ts#L13)\r\n\r\n```plaintext\r\nexport class ExitError extends ExtendableError {\r\n code: number;\r\n constructor(code: number) {\r\n super(`The process exited with code: ${code}`);\r\n this.code = code;\r\n }\r\n}\r\n```\r\n\r\n### InternalError\r\n\r\nThe below code is picked from [Changets errors package](https://github.com/changesets/changesets/blob/main/packages/errors/src/index.ts#L13)\r\n\r\n```plaintext\r\nexport class InternalError extends ExtendableError {\r\n constructor(message: string) {\r\n super(message);\r\n }\r\n}\r\n```\r\n\r\n# **About me:**\r\n\r\nHey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\r\n\r\nI am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com\r\n\r\nMy Github — [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\r\n\r\nMy website — [https://ramunarasinga.com](https://ramunarasinga.com/)\r\n\r\nMy Youtube channel — [https://www.youtube.com/@thinkthroo](https://www.youtube.com/@thinkthroo)\r\n\r\nLearning platform — [https://thinkthroo.com](https://thinkthroo.com/)\r\n\r\nCodebase Architecture — [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\r\n\r\nBest practices — [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\r\n\r\nProduction-grade projects — [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\r\n\r\n### References:\r\n\r\n1. [https://github.com/changesets/changesets/blob/main/packages/cli/src/index.ts#L9](https://github.com/changesets/changesets/blob/main/packages/cli/src/index.ts#L9)\r\n    \r\n2. [https://github.com/changesets/changesets/blob/main/packages/errors/src/index.ts#L13](https://github.com/changesets/changesets/blob/main/packages/errors/src/index.ts#L13)\r\n    \r\n3. [https://www.npmjs.com/package/extendable-error](https://www.npmjs.com/package/extendable-error)",
    "code": "var Component=(()=>{var p=Object.create;var s=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var x=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),E=(r,e)=>{for(var a in e)s(r,a,{get:e[a],enumerable:!0})},c=(r,e,a,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let t of g(e))!b.call(r,t)&&t!==a&&s(r,t,{get:()=>e[t],enumerable:!(i=m(e,t))||i.enumerable});return r};var f=(r,e,a)=>(a=r!=null?p(u(r)):{},c(e||!r||!r.__esModule?s(a,\"default\",{value:r,enumerable:!0}):a,r)),w=r=>c(s({},\"__esModule\",{value:!0}),r);var h=x((v,l)=>{l.exports=_jsx_runtime});var y={};E(y,{default:()=>o,frontmatter:()=>k});var n=f(h()),k={title:\"ExtendableError usage in changesets errors\\xA0package\"};function d(r){let e={a:\"a\",br:\"br\",code:\"code\",div:\"div\",h1:\"h1\",h3:\"h3\",h4:\"h4\",img:\"img\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",ul:\"ul\",...r.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"There is this import found at line#2 in \",(0,n.jsx)(e.a,{href:\"https://github.com/changesets/changesets/blob/main/packages/cli/src/index.ts#L2\",children:\"Changesets CLI package source code\"})]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'import { ExitError, InternalError } from \"@changesets/errors\";'})})})})}),`\n`,(0,n.jsx)(e.p,{children:\"You will learn the below concepts:\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"1. ExtendableError package\",(0,n.jsx)(e.br,{}),`\n`,\"2. ExitError\",(0,n.jsx)(e.br,{}),`\n`,\"3. InternalError\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://cdn-images-1.medium.com/max/1600/1*SA2xkYrnuswJA-fbxCrKCQ.png\",alt:\"\"})}),`\n`,(0,n.jsx)(e.h3,{id:\"extendableerror\",children:\"ExtendableError\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"You will find that \",(0,n.jsx)(e.a,{href:\"https://github.com/changesets/changesets/blob/main/packages/errors/src/index.ts#L13\",children:\"ExitError\"}),\" extends ExtendableError.\"]}),`\n`,(0,n.jsx)(e.p,{children:\"I assumed ExtendableError is probably another class defined within the same file, that was not the case.\"}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://cdn-images-1.medium.com/max/1600/1*em1h2IDQy5dD5SKF-wVVgw.png\",alt:\"\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"It is imported from \",(0,n.jsx)(e.a,{href:\"https://www.npmjs.com/package/extendable-error\",children:\"extendable-error\"}),\". What\\u2019s this?\"]}),`\n`,(0,n.jsx)(e.p,{children:\"A simple abstract extendable error class that extends Error, which handles the error name, message and stack property.\"}),`\n`,(0,n.jsx)(e.h4,{id:\"install\",children:\"Install\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"npm install extendable-error - save\"})})})})}),`\n`,(0,n.jsx)(e.h4,{id:\"usage\",children:\"Usage\"}),`\n`,(0,n.jsx)(e.p,{children:\"This usage example from the docs.\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"import ExtendableError from 'extendable-error';\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" \"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"class SomeError extends ExtendableError {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" constructor(\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" message: string,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" public code: number\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" ) {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" super(message);\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" \"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"let someError = new SomeError('Some error', 0x0001);\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Purpose of ExtendableError is to create custom error classes in JavaScript\\xA0\",(0,n.jsx)(e.br,{}),`\n`,\"with consistent behavior for error handling. ExtendableError preserves the error stack and name.\"]}),`\n`,(0,n.jsx)(e.h3,{id:\"extending-extendableerror-vs-extending-error\",children:\"Extending ExtendableError vs Extending Error\"}),`\n`,(0,n.jsx)(e.p,{children:\"I asked ChatGPT to list the differences between extending ExtendableError and extending Error directly and below is picked from the ChatGPT answer:\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsx)(e.li,{children:\"name Property Mismatch (In Some Environments):\"}),`\n`]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:\"Direct Error Inheritance: In some older JavaScript environments (e.g., older versions of Node.js or some non-browser environments), if you extend Error directly, the name property might not always be correctly set to the name of the error class (e.g., ValidationError).\"}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[\"ExtendableError: It explicitly sets this.name = this.constructor.name;, which ensures that the name property is set correctly across all environments, even if the environment doesn\\u2019t behave correctly\",(0,n.jsx)(e.br,{}),`\n`,\"with Error inheritance.\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"2. Stack Trace Reliability:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[\"Direct Error Inheritance: In some environments, especially Node.js, using Error.captureStackTrace directly in your custom error class ensures the stack trace points to the custom error class. If you\\xA0\",(0,n.jsx)(e.br,{}),`\n`,\"don\\u2019t use this, the stack trace might not behave as expected and could potentially show the wrong location in the call stack.\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[\"ExtendableError: By using Error.captureStackTrace, ExtendableError ensures that the stack trace is correctly generated, pointing to the location where the error was thrown. This is critical in environments\\xA0\",(0,n.jsx)(e.br,{}),`\n`,\"like Node.js where debugging is more reliant on stack traces.\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{id:\"exiterror\",children:\"ExitError\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The below code is picked from \",(0,n.jsx)(e.a,{href:\"https://github.com/changesets/changesets/blob/main/packages/errors/src/index.ts#L13\",children:\"Changesets errors package\"})]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"export class ExitError extends ExtendableError {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" code: number;\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" constructor(code: number) {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" super(`The process exited with code: ${code}`);\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" this.code = code;\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}\"})})]})})}),`\n`,(0,n.jsx)(e.h3,{id:\"internalerror\",children:\"InternalError\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The below code is picked from \",(0,n.jsx)(e.a,{href:\"https://github.com/changesets/changesets/blob/main/packages/errors/src/index.ts#L13\",children:\"Changets errors package\"})]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"export class InternalError extends ExtendableError {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" constructor(message: string) {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" super(message);\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}\"})})]})})}),`\n`,(0,n.jsx)(e.h1,{id:\"about-me\",children:(0,n.jsx)(e.strong,{children:\"About me:\"})}),`\n`,(0,n.jsx)(e.p,{children:\"Hey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"I am open to work on interesting projects. Send me an email at \",(0,n.jsx)(e.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:\"ramu.narasinga@gmail.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Github \\u2014 \",(0,n.jsx)(e.a,{href:\"https://github.com/ramu-narasinga\",children:\"https://github.com/ramu-narasinga\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My website \\u2014 \",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:\"https://ramunarasinga.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Youtube channel \\u2014 \",(0,n.jsx)(e.a,{href:\"https://www.youtube.com/@thinkthroo\",children:\"https://www.youtube.com/@thinkthroo\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Learning platform \\u2014 \",(0,n.jsx)(e.a,{href:\"https://thinkthroo.com/\",children:\"https://thinkthroo.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Codebase Architecture \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/architecture\",children:\"https://app.thinkthroo.com/architecture\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Best practices \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/best-practices\",children:\"https://app.thinkthroo.com/best-practices\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Production-grade projects \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:\"https://app.thinkthroo.com/production-grade-projects\"})]}),`\n`,(0,n.jsx)(e.h3,{id:\"references\",children:\"References:\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/changesets/changesets/blob/main/packages/cli/src/index.ts#L9\",children:\"https://github.com/changesets/changesets/blob/main/packages/cli/src/index.ts#L9\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/changesets/changesets/blob/main/packages/errors/src/index.ts#L13\",children:\"https://github.com/changesets/changesets/blob/main/packages/errors/src/index.ts#L13\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://www.npmjs.com/package/extendable-error\",children:\"https://www.npmjs.com/package/extendable-error\"})}),`\n`]}),`\n`]})]})}function o(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,{...r,children:(0,n.jsx)(d,{...r})}):d(r)}return w(y);})();\n;return Component;"
  },
  "_id": "blog/extendable-error-changesets.mdx",
  "_raw": {
    "sourceFilePath": "blog/extendable-error-changesets.mdx",
    "sourceFileName": "extendable-error-changesets.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/extendable-error-changesets"
  },
  "type": "Doc",
  "slug": "/blog/extendable-error-changesets",
  "slugAsParams": "extendable-error-changesets"
}