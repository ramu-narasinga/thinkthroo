{
  "title": "ts-pattern usage in Documenso source code\r",
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\r\nIn this article, we analyse the ts-pattern usage in Documenso source code, but before that, let’s learn what a `ts-pattern` library is.\r\n\r\n### ts-pattern\r\n\r\n`ts-pattern` is an exhaustive Pattern Matching library for TypeScript with smart type inference. Write better and safer conditions. Pattern matching lets you express complex conditions in a single, compact expression. Your code becomes shorter and more readable. Exhaustiveness checking ensures you haven’t forgotten any possible case.\r\n\r\n```js\r\nimport { match, P } from 'ts-pattern';\r\ntype Data =\r\n | { type: 'text'; content: string }\r\n | { type: 'img'; src: string };\r\ntype Result =\r\n | { type: 'ok'; data: Data }\r\n | { type: 'error'; error: Error };\r\nconst result: Result = …;\r\nconst html = match(result)\r\n .with({ type: 'error' }, () => <p>Oups! An error occured</p>)\r\n .with({ type: 'ok', data: { type: 'text' } }, (res) => <p>{res.data.content}</p>)\r\n .with({ type: 'ok', data: { type: 'img', src: P.select() } }, (src) => <img src={src} />)\r\n .exhaustive();\r\n```\r\n\r\nThis example is pretty self-explanatory. Now that we understand a basic example of how ts-pattern works. Let’s apply this to the code found in [Documenso](https://github.com/documenso/documenso/blob/main/packages/lib/universal/upload/put-file.ts#L51).\r\n\r\n### match usage in Documenso source code.\r\n\r\nIn Documenso source code, there is a file named [upload/put-file.ts](https://github.com/documenso/documenso/blob/main/packages/lib/universal/upload/put-file.ts#L48C1-L54C3) and you will find this below code at [line 48](https://github.com/documenso/documenso/blob/main/packages/lib/universal/upload/put-file.ts#L48C1-L54C3).\r\n\r\n```js\r\nimport { match } from 'ts-pattern';\r\nimport { env } from 'next-runtime-env';\r\nexport const putFile = async (file: File) => {\r\n const NEXT_PUBLIC_UPLOAD_TRANSPORT = env('NEXT_PUBLIC_UPLOAD_TRANSPORT');\r\nreturn await match(NEXT_PUBLIC_UPLOAD_TRANSPORT)\r\n .with('s3', async () => putFileInS3(file))\r\n .otherwise(async () => putFileInDatabase(file));\r\n};\r\n```\r\n\r\n`match` is applied against a variable named `NEXT_PUBLIC_UPLOAD_TRANSPORT`. Based on the example above, you   \r\npass a parameter to `match` and run a check against it using `with`. In the example from documentation above, it was based on `type` and `data`, but here in this code snippet from Documenso, it is a different story.\r\n\r\n`with` is checked against a string — ‘s3’. At this point, I just wanted to find out what is expected as value for the variable `Next_PUBLIC_UPLOAD_TRANSPORT`. I searched for this variable — `NEXT_PUBLIC_UPLOAD_TRANSPORT` across the codebase and found its type definition in a file named [process-env.d.ts](https://github.com/documenso/documenso/blob/main/packages/tsconfig/process-env.d.ts#L25). This file is in package named [tsconfig](https://github.com/documenso/documenso/tree/main/packages/tsconfig). Documenso is a ***monorepo*** and contains ***workspaces*** inside apps folder and ***packages*** inside packages folder.\r\n\r\n```js\r\nNEXT_PUBLIC_UPLOAD_TRANSPORT?: 'database' | 's3';\r\n```\r\n\r\n`NEXT_PUBLIC_UPLOAD_TRANSPORT` accepts only two string literals — ‘database’ or ‘s3’. Now it makes sense, you see. This is why you have a check against ‘s3’ string to call a function named `putFileInS3`.\r\n\r\n```js\r\n.with('s3', async () => putFileInS3(file))\r\n```\r\n\r\nOtherwise, the value in `NEXT_PUBLIC_UPLOAD_TRANSPORT` will be ‘database’ and it handled using `otherwise`:\r\n\r\n```js\r\n.otherwise(async () => putFileInDatabase(file));\r\n```\r\n\r\nThis reminds me of the `.exhaustive()` function. `ts-pattern` documentation says this about exhaustive function —   \r\n“  \r\nExhaustiveness checking ensures you haven’t forgotten any possible case.  \r\n“\r\n\r\nI think using `.exhaustive()` when you are dealing with a `match` against an object, like the one provided in documentation example, makes sense. Since this variable `NEXT_PUBLIC_UPLOAD_TRANSPORT` accepts only two string literals — ‘database’ or ‘s3’, there’s only string and no object to match against, that’s why there is no need for using `.exhaustive()`, instead `.otherwise` is used.\r\n\r\n# **About me:**\r\n\r\nHey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\r\n\r\nI am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com\r\n\r\nMy Github — [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\r\n\r\nMy website — [https://ramunarasinga.com](https://ramunarasinga.com/)\r\n\r\nMy Youtube channel — [https://www.youtube.com/@thinkthroo](https://www.youtube.com/@thinkthroo)\r\n\r\nLearning platform — [https://thinkthroo.com](https://thinkthroo.com/)\r\n\r\nCodebase Architecture — [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\r\n\r\nBest practices — [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\r\n\r\nProduction-grade projects — [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\r\n\r\n### References:\r\n\r\n1. [https://github.com/documenso/documenso/blob/main/packages/lib/universal/upload/put-file.ts#L51](https://github.com/documenso/documenso/blob/main/packages/lib/universal/upload/put-file.ts#L51)\r\n    \r\n2. [https://www.npmjs.com/package/ts-pattern](https://www.npmjs.com/package/ts-pattern)\r\n    \r\n3. [https://github.com/documenso/documenso/blob/main/packages/tsconfig/process-env.d.ts#L25](https://github.com/documenso/documenso/blob/main/packages/tsconfig/process-env.d.ts#L25)\r\n",
    "code": "var Component=(()=>{var h=Object.create;var r=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var g=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),f=(n,e)=>{for(var s in e)r(n,s,{get:e[s],enumerable:!0})},t=(n,e,s,o)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let c of y(e))!u.call(n,c)&&c!==s&&r(n,c,{get:()=>e[c],enumerable:!(o=p(e,c))||o.enumerable});return n};var b=(n,e,s)=>(s=n!=null?h(m(n)):{},t(e||!n||!n.__esModule?r(s,\"default\",{value:n,enumerable:!0}):s,n)),w=n=>t(r({},\"__esModule\",{value:!0}),n);var F=g((_,a)=>{a.exports=_jsx_runtime});var v={};f(v,{default:()=>d,frontmatter:()=>N});var l=b(F()),N={title:\"ts-pattern usage in Documenso source\\xA0code\"};function i(n){let e={a:\"a\",br:\"br\",code:\"code\",div:\"div\",em:\"em\",h1:\"h1\",h3:\"h3\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",...n.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(e.p,{children:[\"In this article, we analyse the ts-pattern usage in Documenso source code, but before that, let\\u2019s learn what a \",(0,l.jsx)(e.code,{children:\"ts-pattern\"}),\" library is.\"]}),`\n`,(0,l.jsx)(e.h3,{id:\"ts-pattern\",children:\"ts-pattern\"}),`\n`,(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.code,{children:\"ts-pattern\"}),\" is an exhaustive Pattern Matching library for TypeScript with smart type inference. Write better and safer conditions. Pattern matching lets you express complex conditions in a single, compact expression. Your code becomes shorter and more readable. Exhaustiveness checking ensures you haven\\u2019t forgotten any possible case.\"]}),`\n`,(0,l.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,l.jsx)(e.pre,{\"data-language\":\"js\",\"data-theme\":\"default\",children:(0,l.jsxs)(e.code,{\"data-language\":\"js\",\"data-theme\":\"default\",children:[(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" match\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\",\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" P \"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" 'ts-pattern'\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\";\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"type\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" Data\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" =\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" |\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" type\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" 'text'\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\";\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" content\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" string \"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" |\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" type\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" 'img'\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\";\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" src\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" string \"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"};\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"type\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" Result\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" =\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" |\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" type\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" 'ok'\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\";\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" data\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" Data\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" }\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" |\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" type\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" 'error'\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\";\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" error\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" Error\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" };\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"const\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" result\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" Result\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" =\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" \\u2026\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\";\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"const\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" html \"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"=\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" match\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"(\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"result\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\")\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" .\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"with\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"({\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" type\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" 'error'\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" },\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" ()\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" =>\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" <\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"p\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\">\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"Oups! An error occured\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"</\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"p\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\">)\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" .\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"with\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"({\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" type\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" 'ok'\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\",\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" data\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" type\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" 'text'\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" }\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" },\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" (\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"res\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\")\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" =>\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" <\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"p\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\">{\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"res\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\".\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"data\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\".\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"content\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}</\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"p\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\">)\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" .\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"with\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"({\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" type\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" 'ok'\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\",\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" data\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" type\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" 'img'\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\",\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" src\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" P\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\".\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"select\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"()\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" }\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" },\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" (\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"src\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\")\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" =>\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" <\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"img src\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"={\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"src\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" />)\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" .\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"exhaustive\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"();\"})]})]})})}),`\n`,(0,l.jsxs)(e.p,{children:[\"This example is pretty self-explanatory. Now that we understand a basic example of how ts-pattern works. Let\\u2019s apply this to the code found in \",(0,l.jsx)(e.a,{href:\"https://github.com/documenso/documenso/blob/main/packages/lib/universal/upload/put-file.ts#L51\",children:\"Documenso\"}),\".\"]}),`\n`,(0,l.jsx)(e.h3,{id:\"match-usage-in-documenso-sourcecode\",children:\"match usage in Documenso source\\xA0code.\"}),`\n`,(0,l.jsxs)(e.p,{children:[\"In Documenso source code, there is a file named \",(0,l.jsx)(e.a,{href:\"https://github.com/documenso/documenso/blob/main/packages/lib/universal/upload/put-file.ts#L48C1-L54C3\",children:\"upload/put-file.ts\"}),\" and you will find this below code at \",(0,l.jsx)(e.a,{href:\"https://github.com/documenso/documenso/blob/main/packages/lib/universal/upload/put-file.ts#L48C1-L54C3\",children:\"line 48\"}),\".\"]}),`\n`,(0,l.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,l.jsx)(e.pre,{\"data-language\":\"js\",\"data-theme\":\"default\",children:(0,l.jsxs)(e.code,{\"data-language\":\"js\",\"data-theme\":\"default\",children:[(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" match \"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" 'ts-pattern'\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\";\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" env \"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" 'next-runtime-env'\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\";\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"export\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" const\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" putFile\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" =\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" async\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" (\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"file\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\",fontWeight:\"bold\"},children:\" File\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\")\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" =>\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" const\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" NEXT_PUBLIC_UPLOAD_TRANSPORT \"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"=\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" env\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"(\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"'NEXT_PUBLIC_UPLOAD_TRANSPORT'\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\");\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"return\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" await\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" match\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"(\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"NEXT_PUBLIC_UPLOAD_TRANSPORT\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\")\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" .\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"with\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"(\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"'s3'\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\",\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" async\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" ()\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" =>\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" putFileInS3\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"(\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"file\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"))\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" .\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"otherwise\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"(async\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" ()\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" =>\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" putFileInDatabase\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"(\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"file\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"));\"})]}),`\n`,(0,l.jsx)(e.span,{className:\"line\",children:(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"};\"})})]})})}),`\n`,(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.code,{children:\"match\"}),\" is applied against a variable named \",(0,l.jsx)(e.code,{children:\"NEXT_PUBLIC_UPLOAD_TRANSPORT\"}),\". Based on the example above, you\\xA0\",(0,l.jsx)(e.br,{}),`\n`,\"pass a parameter to \",(0,l.jsx)(e.code,{children:\"match\"}),\" and run a check against it using \",(0,l.jsx)(e.code,{children:\"with\"}),\". In the example from documentation above, it was based on \",(0,l.jsx)(e.code,{children:\"type\"}),\" and \",(0,l.jsx)(e.code,{children:\"data\"}),\", but here in this code snippet from Documenso, it is a different story.\"]}),`\n`,(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.code,{children:\"with\"}),\" is checked against a string\\u200A\\u2014\\u200A\\u2018s3\\u2019. At this point, I just wanted to find out what is expected as value for the variable \",(0,l.jsx)(e.code,{children:\"Next_PUBLIC_UPLOAD_TRANSPORT\"}),\". I searched for this variable\\u200A\\u2014\\u200A\",(0,l.jsx)(e.code,{children:\"NEXT_PUBLIC_UPLOAD_TRANSPORT\"}),\" across the codebase and found its type definition in a file named \",(0,l.jsx)(e.a,{href:\"https://github.com/documenso/documenso/blob/main/packages/tsconfig/process-env.d.ts#L25\",children:\"process-env.d.ts\"}),\". This file is in package named \",(0,l.jsx)(e.a,{href:\"https://github.com/documenso/documenso/tree/main/packages/tsconfig\",children:\"tsconfig\"}),\". Documenso is a \",(0,l.jsx)(e.em,{children:(0,l.jsx)(e.strong,{children:\"monorepo\"})}),\" and contains \",(0,l.jsx)(e.em,{children:(0,l.jsx)(e.strong,{children:\"workspaces\"})}),\" inside apps folder and \",(0,l.jsx)(e.em,{children:(0,l.jsx)(e.strong,{children:\"packages\"})}),\" inside packages folder.\"]}),`\n`,(0,l.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,l.jsx)(e.pre,{\"data-language\":\"js\",\"data-theme\":\"default\",children:(0,l.jsx)(e.code,{\"data-language\":\"js\",\"data-theme\":\"default\",children:(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"NEXT_PUBLIC_UPLOAD_TRANSPORT\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"?:\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" 'database'\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" |\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" 's3'\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\";\"})]})})})}),`\n`,(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.code,{children:\"NEXT_PUBLIC_UPLOAD_TRANSPORT\"}),\" accepts only two string literals\\u200A\\u2014\\u200A\\u2018database\\u2019 or \\u2018s3\\u2019. Now it makes sense, you see. This is why you have a check against \\u2018s3\\u2019 string to call a function named \",(0,l.jsx)(e.code,{children:\"putFileInS3\"}),\".\"]}),`\n`,(0,l.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,l.jsx)(e.pre,{\"data-language\":\"js\",\"data-theme\":\"default\",children:(0,l.jsx)(e.code,{\"data-language\":\"js\",\"data-theme\":\"default\",children:(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\".\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"with\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"(\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"'s3'\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\",\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" async\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" ()\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" =>\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" putFileInS3\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"(\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"file\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"))\"})]})})})}),`\n`,(0,l.jsxs)(e.p,{children:[\"Otherwise, the value in \",(0,l.jsx)(e.code,{children:\"NEXT_PUBLIC_UPLOAD_TRANSPORT\"}),\" will be \\u2018database\\u2019 and it handled using \",(0,l.jsx)(e.code,{children:\"otherwise\"}),\":\"]}),`\n`,(0,l.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,l.jsx)(e.pre,{\"data-language\":\"js\",\"data-theme\":\"default\",children:(0,l.jsx)(e.code,{\"data-language\":\"js\",\"data-theme\":\"default\",children:(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\".\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"otherwise\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"(async\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" ()\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" =>\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" putFileInDatabase\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"(\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"file\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"));\"})]})})})}),`\n`,(0,l.jsxs)(e.p,{children:[\"This reminds me of the \",(0,l.jsx)(e.code,{children:\".exhaustive()\"}),\" function. \",(0,l.jsx)(e.code,{children:\"ts-pattern\"}),\" documentation says this about exhaustive function\\u200A\\u2014\\u200A\",(0,l.jsx)(e.br,{}),`\n`,\"\\u201C\",(0,l.jsx)(e.br,{}),`\n`,\"Exhaustiveness checking ensures you haven\\u2019t forgotten any possible case.\",(0,l.jsx)(e.br,{}),`\n`,\"\\u201C\"]}),`\n`,(0,l.jsxs)(e.p,{children:[\"I think using \",(0,l.jsx)(e.code,{children:\".exhaustive()\"}),\" when you are dealing with a \",(0,l.jsx)(e.code,{children:\"match\"}),\" against an object, like the one provided in documentation example, makes sense. Since this variable \",(0,l.jsx)(e.code,{children:\"NEXT_PUBLIC_UPLOAD_TRANSPORT\"}),\" accepts only two string literals\\u200A\\u2014\\u200A\\u2018database\\u2019 or \\u2018s3\\u2019, there\\u2019s only string and no object to match against, that\\u2019s why there is no need for using \",(0,l.jsx)(e.code,{children:\".exhaustive()\"}),\", instead \",(0,l.jsx)(e.code,{children:\".otherwise\"}),\" is used.\"]}),`\n`,(0,l.jsx)(e.h1,{id:\"about-me\",children:(0,l.jsx)(e.strong,{children:\"About me:\"})}),`\n`,(0,l.jsx)(e.p,{children:\"Hey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"}),`\n`,(0,l.jsxs)(e.p,{children:[\"I am open to work on interesting projects. Send me an email at \",(0,l.jsx)(e.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:\"ramu.narasinga@gmail.com\"})]}),`\n`,(0,l.jsxs)(e.p,{children:[\"My Github \\u2014 \",(0,l.jsx)(e.a,{href:\"https://github.com/ramu-narasinga\",children:\"https://github.com/ramu-narasinga\"})]}),`\n`,(0,l.jsxs)(e.p,{children:[\"My website \\u2014 \",(0,l.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:\"https://ramunarasinga.com\"})]}),`\n`,(0,l.jsxs)(e.p,{children:[\"My Youtube channel \\u2014 \",(0,l.jsx)(e.a,{href:\"https://www.youtube.com/@thinkthroo\",children:\"https://www.youtube.com/@thinkthroo\"})]}),`\n`,(0,l.jsxs)(e.p,{children:[\"Learning platform \\u2014 \",(0,l.jsx)(e.a,{href:\"https://thinkthroo.com/\",children:\"https://thinkthroo.com\"})]}),`\n`,(0,l.jsxs)(e.p,{children:[\"Codebase Architecture \\u2014 \",(0,l.jsx)(e.a,{href:\"https://app.thinkthroo.com/architecture\",children:\"https://app.thinkthroo.com/architecture\"})]}),`\n`,(0,l.jsxs)(e.p,{children:[\"Best practices \\u2014 \",(0,l.jsx)(e.a,{href:\"https://app.thinkthroo.com/best-practices\",children:\"https://app.thinkthroo.com/best-practices\"})]}),`\n`,(0,l.jsxs)(e.p,{children:[\"Production-grade projects \\u2014 \",(0,l.jsx)(e.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:\"https://app.thinkthroo.com/production-grade-projects\"})]}),`\n`,(0,l.jsx)(e.h3,{id:\"references\",children:\"References:\"}),`\n`,(0,l.jsxs)(e.ol,{children:[`\n`,(0,l.jsxs)(e.li,{children:[`\n`,(0,l.jsx)(e.p,{children:(0,l.jsx)(e.a,{href:\"https://github.com/documenso/documenso/blob/main/packages/lib/universal/upload/put-file.ts#L51\",children:\"https://github.com/documenso/documenso/blob/main/packages/lib/universal/upload/put-file.ts#L51\"})}),`\n`]}),`\n`,(0,l.jsxs)(e.li,{children:[`\n`,(0,l.jsx)(e.p,{children:(0,l.jsx)(e.a,{href:\"https://www.npmjs.com/package/ts-pattern\",children:\"https://www.npmjs.com/package/ts-pattern\"})}),`\n`]}),`\n`,(0,l.jsxs)(e.li,{children:[`\n`,(0,l.jsx)(e.p,{children:(0,l.jsx)(e.a,{href:\"https://github.com/documenso/documenso/blob/main/packages/tsconfig/process-env.d.ts#L25\",children:\"https://github.com/documenso/documenso/blob/main/packages/tsconfig/process-env.d.ts#L25\"})}),`\n`]}),`\n`]})]})}function d(n={}){let{wrapper:e}=n.components||{};return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(i,{...n})}):i(n)}return w(v);})();\n;return Component;"
  },
  "_id": "blog/ts-pattern-in-documenso.mdx",
  "_raw": {
    "sourceFilePath": "blog/ts-pattern-in-documenso.mdx",
    "sourceFileName": "ts-pattern-in-documenso.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/ts-pattern-in-documenso"
  },
  "type": "Doc",
  "slug": "/blog/ts-pattern-in-documenso",
  "slugAsParams": "ts-pattern-in-documenso"
}