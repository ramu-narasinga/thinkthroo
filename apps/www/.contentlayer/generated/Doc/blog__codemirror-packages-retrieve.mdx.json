{
  "title": "How CodeMirror v6 dev setup retrieves packages without a monorepo\r",
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\r\nIn the OSS community, it is quite common to come across monorepo projects where the workspaces and packages are all in a single repository. CodeMirror has a different style to the way packages are managed, each package that is used is a repository on its own. In this article, we analyse what these packages are that CodeMirror uses and how they are installed when you want to setup CodeMirror v6 locally to contribute.\r\n\r\n### bin/packages.js\r\n\r\nBefore we analyse the install function, let’s first understand the variours packages that make up the CodeMirror. You  \r\nwill find these packages listed in [bin/packages.js file](https://github.com/codemirror/dev/blob/main/bin/packages.js)\r\n\r\n![](https://cdn-images-1.medium.com/max/1600/1*KhY0OvraEoVdbjs-c6rWwQ.png)\r\n\r\nThese below are the core packages:\r\n\r\n```plaintext\r\nexports.core = [\r\n \"state\",\r\n \"view\",\r\n \"language\",\r\n \"commands\",\r\n \"search\",\r\n \"autocomplete\",\r\n \"lint\",\r\n \"collab\",\r\n \"language-data\",\r\n \"codemirror\",\r\n]\r\n```\r\n\r\nThese below are the non-core packages.\r\n\r\n```plaintext\r\nexports.nonCore = [\r\n \"lang-javascript\",\r\n \"lang-java\",\r\n \"lang-json\",\r\n \"lang-cpp\",\r\n \"lang-php\",\r\n \"lang-python\",\r\n \"lang-go\",\r\n \"lang-css\",\r\n \"lang-sass\",\r\n \"lang-html\",\r\n \"lang-sql\",\r\n \"lang-rust\",\r\n \"lang-xml\",\r\n \"lang-markdown\",\r\n \"lang-lezer\",\r\n \"lang-wast\",\r\n \"lang-angular\",\r\n \"lang-vue\",\r\n \"lang-liquid\",\r\n \"lang-less\",\r\n \"lang-yaml\",\r\n \"legacy-modes\",\r\n \"theme-one-dark\",\r\n \"merge\"\r\n]\r\n```\r\n\r\nYou will find repositories in the [CodeMirror organisation](https://github.com/orgs/codemirror/repositories) for all these packages shown above. There is no single repository containing all these packages like in a monorepo, instead you have all these repositories that make up the CodeMirror.\r\n\r\n### exports.core and exports.nonCore\r\n\r\nYou will find that these packages are accessed via a function named [loadPackages](https://github.com/codemirror/dev/blob/main/bin/packages.js#L60).\r\n\r\n![](https://cdn-images-1.medium.com/max/1600/1*YOkoQSFxLN8U1M-kJKbM2g.png)\r\n\r\nYou might be wondering what exports.all here is in the above image, at [line 42](https://github.com/codemirror/dev/blob/main/bin/packages.js#L42). It is interesting how the concat is made on exports.core and exports.nonCore and this you have all these packages merged into one array and assigned to exports.all.\r\n\r\n### exports.loadPackages\r\n\r\n```plaintext\r\nlet packages = exports.all.map(n => new Pkg(n))\r\n```\r\n\r\nUsing map on exports.all, new Pkg class is instantiated using the Pkg class that’s shown below:\r\n\r\n```plaintext\r\nclass Pkg {\r\n constructor(name) {\r\n this.name = name\r\n this.dir = join(__dirname, \"..\", name)\r\n this.main = null\r\n if (name != \"legacy-modes\" && fs.existsSync(this.dir)) {\r\n let files = fs.readdirSync(join(this.dir, \"src\")).filter(f => /^[^.]+\\.ts$/.test(f))\r\n let main = files.length == 1 ? files[0] : files.includes(\"index.ts\") ? \"index.ts\"\r\n : files.includes(name.replace(/^(theme-|lang-)/, \"\") + \".ts\") ? name.replace(/^(theme-|lang-)/, \"\") + \".ts\" : null\r\n if (!main) throw new Error(\"Couldn't find a main script for \" + name)\r\n this.main = join(this.dir, \"src\", main)\r\n }\r\n }\r\n}\r\n```\r\n\r\nIt technically sets `name`, `dir` and `main`.\r\n\r\n```plaintext\r\nlet packageNames = Object.create(null)\r\nfor (let p of packages) packageNames[p.name] = p\r\n```\r\n\r\n![](https://cdn-images-1.medium.com/max/1600/1*-sdBU2-qq0ofmghc7dbT_Q.png)\r\n\r\nObject.create(null) creates an empty object, that’s fancy way of creating a obj that would otherwise be just `obj = {}` and finally below is the return statement.\r\n\r\n```plaintext\r\nreturn {\r\n  packages, \r\n  packageNames, \r\n  buildPackages: packages.filter(p => p.main)\r\n}\r\n```\r\n\r\n# **About me:**\r\n\r\nHey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\r\n\r\nI am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com\r\n\r\nMy Github — [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\r\n\r\nMy website — [https://ramunarasinga.com](https://ramunarasinga.com/)\r\n\r\nMy Youtube channel — [https://www.youtube.com/@thinkthroo](https://www.youtube.com/@thinkthroo)\r\n\r\nLearning platform — [https://thinkthroo.com](https://thinkthroo.com/)\r\n\r\nCodebase Architecture — [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\r\n\r\nBest practices — [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\r\n\r\nProduction-grade projects — [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\r\n\r\n### References\r\n\r\n1. [https://github.com/codemirror/dev/blob/main/bin/cm.js#L81](https://github.com/codemirror/dev/blob/main/bin/cm.js#L81)\r\n    \r\n2. [https://github.com/codemirror/dev/blob/main/bin/packages.js](https://github.com/codemirror/dev/blob/main/bin/packages.js)\r\n    \r\n3. [https://github.com/orgs/codemirror/repositories](https://github.com/orgs/codemirror/repositories)",
    "code": "var Component=(()=>{var o=Object.create;var l=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var b=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),N=(a,e)=>{for(var i in e)l(a,i,{get:e[i],enumerable:!0})},c=(a,e,i,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of g(e))!f.call(a,s)&&s!==i&&l(a,s,{get:()=>e[s],enumerable:!(r=m(e,s))||r.enumerable});return a};var k=(a,e,i)=>(i=a!=null?o(u(a)):{},c(e||!a||!a.__esModule?l(i,\"default\",{value:a,enumerable:!0}):i,a)),y=a=>c(l({},\"__esModule\",{value:!0}),a);var h=b((v,t)=>{t.exports=_jsx_runtime});var x={};N(x,{default:()=>p,frontmatter:()=>w});var n=k(h()),w={title:\"How CodeMirror v6 dev setup retrieves packages without a\\xA0monorepo\"};function d(a){let e={a:\"a\",br:\"br\",code:\"code\",div:\"div\",h1:\"h1\",h3:\"h3\",img:\"img\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"In the OSS community, it is quite common to come across monorepo projects where the workspaces and packages are all in a single repository. CodeMirror has a different style to the way packages are managed, each package that is used is a repository on its own. In this article, we analyse what these packages are that CodeMirror uses and how they are installed when you want to setup CodeMirror v6 locally to contribute.\"}),`\n`,(0,n.jsx)(e.h3,{id:\"binpackagesjs\",children:\"bin/packages.js\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Before we analyse the install function, let\\u2019s first understand the variours packages that make up the CodeMirror. You\",(0,n.jsx)(e.br,{}),`\n`,\"will find these packages listed in \",(0,n.jsx)(e.a,{href:\"https://github.com/codemirror/dev/blob/main/bin/packages.js\",children:\"bin/packages.js file\"})]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://cdn-images-1.medium.com/max/1600/1*KhY0OvraEoVdbjs-c6rWwQ.png\",alt:\"\"})}),`\n`,(0,n.jsx)(e.p,{children:\"These below are the core packages:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"exports.core = [\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"state\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"view\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"language\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"commands\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"search\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"autocomplete\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"lint\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"collab\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"language-data\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"codemirror\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"]\"})})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"These below are the non-core packages.\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"exports.nonCore = [\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"lang-javascript\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"lang-java\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"lang-json\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"lang-cpp\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"lang-php\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"lang-python\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"lang-go\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"lang-css\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"lang-sass\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"lang-html\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"lang-sql\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"lang-rust\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"lang-xml\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"lang-markdown\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"lang-lezer\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"lang-wast\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"lang-angular\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"lang-vue\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"lang-liquid\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"lang-less\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"lang-yaml\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"legacy-modes\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"theme-one-dark\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"merge\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"]\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"You will find repositories in the \",(0,n.jsx)(e.a,{href:\"https://github.com/orgs/codemirror/repositories\",children:\"CodeMirror organisation\"}),\" for all these packages shown above. There is no single repository containing all these packages like in a monorepo, instead you have all these repositories that make up the CodeMirror.\"]}),`\n`,(0,n.jsx)(e.h3,{id:\"exportscore-and-exportsnoncore\",children:\"exports.core and exports.nonCore\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"You will find that these packages are accessed via a function named \",(0,n.jsx)(e.a,{href:\"https://github.com/codemirror/dev/blob/main/bin/packages.js#L60\",children:\"loadPackages\"}),\".\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://cdn-images-1.medium.com/max/1600/1*YOkoQSFxLN8U1M-kJKbM2g.png\",alt:\"\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"You might be wondering what exports.all here is in the above image, at \",(0,n.jsx)(e.a,{href:\"https://github.com/codemirror/dev/blob/main/bin/packages.js#L42\",children:\"line 42\"}),\". It is interesting how the concat is made on exports.core and exports.nonCore and this you have all these packages merged into one array and assigned to exports.all.\"]}),`\n`,(0,n.jsx)(e.h3,{id:\"exportsloadpackages\",children:\"exports.loadPackages\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"let packages = exports.all.map(n => new Pkg(n))\"})})})})}),`\n`,(0,n.jsx)(e.p,{children:\"Using map on exports.all, new Pkg class is instantiated using the Pkg class that\\u2019s shown below:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"class Pkg {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" constructor(name) {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" this.name = name\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' this.dir = join(__dirname, \"..\", name)'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" this.main = null\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' if (name != \"legacy-modes\" && fs.existsSync(this.dir)) {'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' let files = fs.readdirSync(join(this.dir, \"src\")).filter(f => /^[^.]+\\\\.ts$/.test(f))'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' let main = files.length == 1 ? files[0] : files.includes(\"index.ts\") ? \"index.ts\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' : files.includes(name.replace(/^(theme-|lang-)/, \"\") + \".ts\") ? name.replace(/^(theme-|lang-)/, \"\") + \".ts\" : null'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:` if (!main) throw new Error(\"Couldn't find a main script for \" + name)`})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' this.main = join(this.dir, \"src\", main)'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"It technically sets \",(0,n.jsx)(e.code,{children:\"name\"}),\", \",(0,n.jsx)(e.code,{children:\"dir\"}),\" and \",(0,n.jsx)(e.code,{children:\"main\"}),\".\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"let packageNames = Object.create(null)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"for (let p of packages) packageNames[p.name] = p\"})})]})})}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://cdn-images-1.medium.com/max/1600/1*-sdBU2-qq0ofmghc7dbT_Q.png\",alt:\"\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Object.create(null) creates an empty object, that\\u2019s fancy way of creating a obj that would otherwise be just \",(0,n.jsx)(e.code,{children:\"obj = {}\"}),\" and finally below is the return statement.\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"return {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  packages, \"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  packageNames, \"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  buildPackages: packages.filter(p => p.main)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}\"})})]})})}),`\n`,(0,n.jsx)(e.h1,{id:\"about-me\",children:(0,n.jsx)(e.strong,{children:\"About me:\"})}),`\n`,(0,n.jsx)(e.p,{children:\"Hey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"I am open to work on interesting projects. Send me an email at \",(0,n.jsx)(e.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:\"ramu.narasinga@gmail.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Github \\u2014 \",(0,n.jsx)(e.a,{href:\"https://github.com/ramu-narasinga\",children:\"https://github.com/ramu-narasinga\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My website \\u2014 \",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:\"https://ramunarasinga.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Youtube channel \\u2014 \",(0,n.jsx)(e.a,{href:\"https://www.youtube.com/@thinkthroo\",children:\"https://www.youtube.com/@thinkthroo\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Learning platform \\u2014 \",(0,n.jsx)(e.a,{href:\"https://thinkthroo.com/\",children:\"https://thinkthroo.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Codebase Architecture \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/architecture\",children:\"https://app.thinkthroo.com/architecture\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Best practices \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/best-practices\",children:\"https://app.thinkthroo.com/best-practices\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Production-grade projects \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:\"https://app.thinkthroo.com/production-grade-projects\"})]}),`\n`,(0,n.jsx)(e.h3,{id:\"references\",children:\"References\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/codemirror/dev/blob/main/bin/cm.js#L81\",children:\"https://github.com/codemirror/dev/blob/main/bin/cm.js#L81\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/codemirror/dev/blob/main/bin/packages.js\",children:\"https://github.com/codemirror/dev/blob/main/bin/packages.js\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/orgs/codemirror/repositories\",children:\"https://github.com/orgs/codemirror/repositories\"})}),`\n`]}),`\n`]})]})}function p(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(d,{...a})}):d(a)}return y(x);})();\n;return Component;"
  },
  "_id": "blog/codemirror-packages-retrieve.mdx",
  "_raw": {
    "sourceFilePath": "blog/codemirror-packages-retrieve.mdx",
    "sourceFileName": "codemirror-packages-retrieve.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/codemirror-packages-retrieve"
  },
  "type": "Doc",
  "slug": "/blog/codemirror-packages-retrieve",
  "slugAsParams": "codemirror-packages-retrieve"
}