{
<<<<<<< HEAD
  "title": "deferExecution() in Refine source code.\r",
=======
  "title": "deferExecution() in Refine source code.",
>>>>>>> 442b740f3cf43317109944c6cf4b7ca543a8cddf
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
<<<<<<< HEAD
    "raw": "\r\nIn this article, we will review a function named [deferExecution() in Refine source code](https://github.com/refinedev/refine/blob/main/packages/core/src/definitions/helpers/defer-execution/index.ts#L8).\r\n\r\n```plaintext\r\n/**\r\n * Delays the execution of a callback function asynchronously.\r\n * This utility function is used to defer the execution of the provided\r\n * callback, allowing the current call stack to clear before the callback\r\n * is invoked. It is particularly useful for ensuring non-blocking behavior\r\n * and providing a clear intent when a 0 ms timeout is used.\r\n */\r\nexport const deferExecution = (fn: Function) => {\r\n  setTimeout(fn, 0);\r\n};\r\n```\r\n\r\nThis above code snippet is picked from [refinedev/refine/packages/core/src/definitions/helpers/defer-execution/index.ts](https://github.com/refinedev/refine/blob/main/packages/core/src/definitions/helpers/defer-execution/index.ts#L8)\r\n\r\nThis code is inside a folder named [defer-execution](https://github.com/refinedev/refine/tree/main/packages/core/src/definitions/helpers/defer-execution). It contains the files shown in the below image.\r\n\r\n![](https://cdn-images-1.medium.com/max/1000/1*fUrq8GXn00S9HrI9ZQcShw.png)\r\n\r\nso what is deferExecution used for?\r\n\r\n> /\\*\\*  \r\n>   *Delays the execution of a callback function asynchronously.*  This utility function is used to defer the execution of the provided  \r\n>   *callback, allowing the current call stack to clear before the callback*  is invoked. It is particularly useful for ensuring non-blocking behavior  \r\n>   *and providing a clear intent when a 0 ms timeout is used.* /\r\n\r\nThis comment above the function explains clearly what this function is about. \r\n\r\nThe time, in milliseconds that the timer should wait before the specified function or code is executed. If this parameter is omitted, a value of 0 is used, meaning execute “immediately”, or more accurately, the next event cycle. Read more about [setTimeout](https://medium.com/p/7caad71ec87d/edit).\r\n\r\nWait, what is event cycle? For that, you need to read about [Job queue and event loop in JavaScript Execution Model documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Execution_model#job_queue_and_event_loop)\r\n\r\n> A job is considered completed when the [stack](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Execution_model#stack_and_execution_contexts) is empty; then, the next job is pulled from the queue. Jobs might not be pulled with uniform priority — for example, HTML event loops split jobs into two categories: *tasks* and *microtasks*. Microtasks have higher priority and the microtask queue is drained first before the task queue is pulled.\r\n\r\nOkay, at this point, let’s go find out how this deferExecution is used in the Refine codebase.\r\n\r\n### deferExecution usage\r\n\r\n```plaintext\r\nif (!isPessimistic && !isAutosave) {\r\n  // If the mutation mode is not pessimistic, handle the redirect immediately in an async manner\r\n  // `setWarnWhen` blocks the redirects until set to `false`\r\n  // If redirect is done before the value is properly set, it will be blocked.\r\n  // We're deferring the execution of the redirect to ensure that the value is set properly.\r\n  deferExecution(() => onSuccessRedirect());\r\n  // Resolve the promise immediately\r\n  resolve();\r\n}\r\n```\r\n\r\nThis code snippet is one instance picked from [hooks/form/index.ts](https://github.com/refinedev/refine/blob/main/packages/core/src/hooks/form/index.ts#L246)\r\n\r\n> But I am surprised there is no clean up in the sense that timeout is not cleared\r\n\r\n### Testing deferExecution()\r\n\r\nYou will find a file named [defer-execution/index.spec.ts](https://github.com/refinedev/refine/blob/main/packages/core/src/definitions/helpers/defer-execution/index.spec.ts) containing the below code:\r\n\r\n```plaintext\r\nimport { waitFor } from \"@testing-library/react\";\r\nimport { deferExecution } from \".\";\r\n\r\ndescribe(\"deferExecution\", () => {\r\n  beforeEach(() => {\r\n    jest.useRealTimers();\r\n  });\r\n\r\n  afterEach(() => {\r\n    jest.useFakeTimers();\r\n  });\r\n\r\n  it(\"should defer the call after caller returns\", async () => {\r\n    const array: number[] = [];\r\n\r\n    const fn = () => {\r\n      array.push(1);\r\n\r\n      deferExecution(() => {\r\n        array.push(3);\r\n      });\r\n\r\n      array.push(2);\r\n    };\r\n\r\n    fn();\r\n\r\n    await waitFor(() => {\r\n      expect(array).toEqual([1, 2, 3]);\r\n    });\r\n  });\r\n});\r\n```\r\n\r\narr.push(3) is called inside deferExecution and the result is validated to \\[1, 2, 3\\]. \r\n\r\n### About me:\r\n\r\nHey, my name is [Ramu Narasinga](https://ramunarasinga.com). I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\r\n\r\n***I am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com***\r\n\r\nMy Github — [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\r\n\r\nMy website — [https://ramunarasinga.com](https://ramunarasinga.com/)\r\n\r\nMy Youtube channel — [https://www.youtube.com/@thinkthroo](https://www.youtube.com/@thinkthroo)\r\n\r\nLearning platform — [https://thinkthroo.com](https://thinkthroo.com/)\r\n\r\nCodebase Architecture — [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\r\n\r\nBest practices — [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\r\n\r\nProduction-grade projects — [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\r\n\r\n### References:\r\n\r\n1. [https://github.com/refinedev/refine/blob/main/packages/core/src/definitions/helpers/defer-execution/index.ts#L8](https://github.com/refinedev/refine/blob/main/packages/core/src/definitions/helpers/defer-execution/index.ts#L8)\r\n    \r\n2. [https://github.com/refinedev/refine/blob/main/packages/core/src/hooks/form/index.ts#L292](https://github.com/refinedev/refine/blob/main/packages/core/src/hooks/form/index.ts#L292)\r\n    \r\n3. [https://github.com/refinedev/refine/tree/main/packages/core/src/definitions/helpers/defer-execution](https://github.com/refinedev/refine/tree/main/packages/core/src/definitions/helpers/defer-execution)\r\n    \r\n4. [https://developer.mozilla.org/en-US/docs/Web/API/Window/setTimeout](https://developer.mozilla.org/en-US/docs/Web/API/Window/setTimeout)\r\n    \r\n5. [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Execution\\_model#job\\_queue\\_and\\_event\\_loop](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Execution_model#job_queue_and_event_loop)\r\n    \r\n6. [https://github.com/refinedev/refine/blob/main/packages/core/src/definitions/helpers/defer-execution/index.spec.ts](https://github.com/refinedev/refine/blob/main/packages/core/src/definitions/helpers/defer-execution/index.spec.ts)",
=======
    "raw": "\nIn this article, we will review a function named [deferExecution() in Refine source code](https://github.com/refinedev/refine/blob/main/packages/core/src/definitions/helpers/defer-execution/index.ts#L8).\n\n```plaintext\n/**\n * Delays the execution of a callback function asynchronously.\n * This utility function is used to defer the execution of the provided\n * callback, allowing the current call stack to clear before the callback\n * is invoked. It is particularly useful for ensuring non-blocking behavior\n * and providing a clear intent when a 0 ms timeout is used.\n */\nexport const deferExecution = (fn: Function) => {\n  setTimeout(fn, 0);\n};\n```\n\nThis above code snippet is picked from [refinedev/refine/packages/core/src/definitions/helpers/defer-execution/index.ts](https://github.com/refinedev/refine/blob/main/packages/core/src/definitions/helpers/defer-execution/index.ts#L8)\n\nThis code is inside a folder named [defer-execution](https://github.com/refinedev/refine/tree/main/packages/core/src/definitions/helpers/defer-execution). It contains the files shown in the below image.\n\n![](https://cdn-images-1.medium.com/max/1000/1*fUrq8GXn00S9HrI9ZQcShw.png)\n\nso what is deferExecution used for?\n\n> /\\*\\*  \n>   *Delays the execution of a callback function asynchronously.*  This utility function is used to defer the execution of the provided  \n>   *callback, allowing the current call stack to clear before the callback*  is invoked. It is particularly useful for ensuring non-blocking behavior  \n>   *and providing a clear intent when a 0 ms timeout is used.* /\n\nThis comment above the function explains clearly what this function is about. \n\nThe time, in milliseconds that the timer should wait before the specified function or code is executed. If this parameter is omitted, a value of 0 is used, meaning execute “immediately”, or more accurately, the next event cycle. Read more about [setTimeout](https://medium.com/p/7caad71ec87d/edit).\n\nWait, what is event cycle? For that, you need to read about [Job queue and event loop in JavaScript Execution Model documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Execution_model#job_queue_and_event_loop)\n\n> A job is considered completed when the [stack](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Execution_model#stack_and_execution_contexts) is empty; then, the next job is pulled from the queue. Jobs might not be pulled with uniform priority — for example, HTML event loops split jobs into two categories: *tasks* and *microtasks*. Microtasks have higher priority and the microtask queue is drained first before the task queue is pulled.\n\nOkay, at this point, let’s go find out how this deferExecution is used in the Refine codebase.\n\n### deferExecution usage\n\n```plaintext\nif (!isPessimistic && !isAutosave) {\n  // If the mutation mode is not pessimistic, handle the redirect immediately in an async manner\n  // `setWarnWhen` blocks the redirects until set to `false`\n  // If redirect is done before the value is properly set, it will be blocked.\n  // We're deferring the execution of the redirect to ensure that the value is set properly.\n  deferExecution(() => onSuccessRedirect());\n  // Resolve the promise immediately\n  resolve();\n}\n```\n\nThis code snippet is one instance picked from [hooks/form/index.ts](https://github.com/refinedev/refine/blob/main/packages/core/src/hooks/form/index.ts#L246)\n\n> But I am surprised there is no clean up in the sense that timeout is not cleared\n\n### Testing deferExecution()\n\nYou will find a file named [defer-execution/index.spec.ts](https://github.com/refinedev/refine/blob/main/packages/core/src/definitions/helpers/defer-execution/index.spec.ts) containing the below code:\n\n```plaintext\nimport { waitFor } from \"@testing-library/react\";\nimport { deferExecution } from \".\";\n\ndescribe(\"deferExecution\", () => {\n  beforeEach(() => {\n    jest.useRealTimers();\n  });\n\n  afterEach(() => {\n    jest.useFakeTimers();\n  });\n\n  it(\"should defer the call after caller returns\", async () => {\n    const array: number[] = [];\n\n    const fn = () => {\n      array.push(1);\n\n      deferExecution(() => {\n        array.push(3);\n      });\n\n      array.push(2);\n    };\n\n    fn();\n\n    await waitFor(() => {\n      expect(array).toEqual([1, 2, 3]);\n    });\n  });\n});\n```\n\narr.push(3) is called inside deferExecution and the result is validated to \\[1, 2, 3\\]. \n\n### About me:\n\nHey, my name is [Ramu Narasinga](https://ramunarasinga.com). I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\n\n***I am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com***\n\nMy Github — [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\n\nMy website — [https://ramunarasinga.com](https://ramunarasinga.com/)\n\nMy Youtube channel — [https://www.youtube.com/@thinkthroo](https://www.youtube.com/@thinkthroo)\n\nLearning platform — [https://thinkthroo.com](https://thinkthroo.com/)\n\nCodebase Architecture — [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\n\nBest practices — [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\n\nProduction-grade projects — [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\n\n### References:\n\n1. [https://github.com/refinedev/refine/blob/main/packages/core/src/definitions/helpers/defer-execution/index.ts#L8](https://github.com/refinedev/refine/blob/main/packages/core/src/definitions/helpers/defer-execution/index.ts#L8)\n    \n2. [https://github.com/refinedev/refine/blob/main/packages/core/src/hooks/form/index.ts#L292](https://github.com/refinedev/refine/blob/main/packages/core/src/hooks/form/index.ts#L292)\n    \n3. [https://github.com/refinedev/refine/tree/main/packages/core/src/definitions/helpers/defer-execution](https://github.com/refinedev/refine/tree/main/packages/core/src/definitions/helpers/defer-execution)\n    \n4. [https://developer.mozilla.org/en-US/docs/Web/API/Window/setTimeout](https://developer.mozilla.org/en-US/docs/Web/API/Window/setTimeout)\n    \n5. [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Execution\\_model#job\\_queue\\_and\\_event\\_loop](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Execution_model#job_queue_and_event_loop)\n    \n6. [https://github.com/refinedev/refine/blob/main/packages/core/src/definitions/helpers/defer-execution/index.spec.ts](https://github.com/refinedev/refine/blob/main/packages/core/src/definitions/helpers/defer-execution/index.spec.ts)",
>>>>>>> 442b740f3cf43317109944c6cf4b7ca543a8cddf
    "code": "var Component=(()=>{var p=Object.create;var s=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var g=(i,e)=>()=>(e||i((e={exports:{}}).exports,e),e.exports),x=(i,e)=>{for(var a in e)s(i,a,{get:e[a],enumerable:!0})},t=(i,e,a,c)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of u(e))!b.call(i,r)&&r!==a&&s(i,r,{get:()=>e[r],enumerable:!(c=m(e,r))||c.enumerable});return i};var k=(i,e,a)=>(a=i!=null?p(f(i)):{},t(e||!i||!i.__esModule?s(a,\"default\",{value:i,enumerable:!0}):a,i)),v=i=>t(s({},\"__esModule\",{value:!0}),i);var d=g((_,l)=>{l.exports=_jsx_runtime});var y={};x(y,{default:()=>h,frontmatter:()=>N});var n=k(d()),N={title:\"deferExecution() in Refine source\\xA0code.\"};function o(i){let e={a:\"a\",blockquote:\"blockquote\",br:\"br\",code:\"code\",div:\"div\",em:\"em\",h3:\"h3\",img:\"img\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",...i.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"In this article, we will review a function named \",(0,n.jsx)(e.a,{href:\"https://github.com/refinedev/refine/blob/main/packages/core/src/definitions/helpers/defer-execution/index.ts#L8\",children:\"deferExecution() in Refine source code\"}),\".\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"/**\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * Delays the execution of a callback function asynchronously.\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * This utility function is used to defer the execution of the provided\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * callback, allowing the current call stack to clear before the callback\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * is invoked. It is particularly useful for ensuring non-blocking behavior\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * and providing a clear intent when a 0 ms timeout is used.\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" */\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"export const deferExecution = (fn: Function) => {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  setTimeout(fn, 0);\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"};\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"This above code snippet is picked from \",(0,n.jsx)(e.a,{href:\"https://github.com/refinedev/refine/blob/main/packages/core/src/definitions/helpers/defer-execution/index.ts#L8\",children:\"refinedev/refine/packages/core/src/definitions/helpers/defer-execution/index.ts\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"This code is inside a folder named \",(0,n.jsx)(e.a,{href:\"https://github.com/refinedev/refine/tree/main/packages/core/src/definitions/helpers/defer-execution\",children:\"defer-execution\"}),\". It contains the files shown in the below image.\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://cdn-images-1.medium.com/max/1000/1*fUrq8GXn00S9HrI9ZQcShw.png\",alt:\"\"})}),`\n`,(0,n.jsx)(e.p,{children:\"so what is deferExecution used for?\"}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsxs)(e.p,{children:[\"/**\",(0,n.jsx)(e.br,{}),`\n`,\"\\xA0 \",(0,n.jsx)(e.em,{children:\"Delays the execution of a callback function asynchronously.\"}),\"\\xA0 This utility function is used to defer the execution of the provided\",(0,n.jsx)(e.br,{}),`\n`,\"\\xA0 \",(0,n.jsx)(e.em,{children:\"callback, allowing the current call stack to clear before the callback\"}),\"\\xA0 is invoked. It is particularly useful for ensuring non-blocking behavior\",(0,n.jsx)(e.br,{}),`\n`,\"\\xA0 \",(0,n.jsx)(e.em,{children:\"and providing a clear intent when a 0 ms timeout is used.\"}),\"\\xA0/\"]}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"This comment above the function explains clearly what this function is about.\\xA0\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The time, in milliseconds that the timer should wait before the specified function or code is executed. If this parameter is omitted, a value of 0 is used, meaning execute \\u201Cimmediately\\u201D, or more accurately, the next event cycle. Read more about \",(0,n.jsx)(e.a,{href:\"https://medium.com/p/7caad71ec87d/edit\",children:\"setTimeout\"}),\".\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Wait, what is event cycle? For that, you need to read about \",(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Execution_model#job_queue_and_event_loop\",children:\"Job queue and event loop in JavaScript Execution Model documentation\"})]}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsxs)(e.p,{children:[\"A job is considered completed when the \",(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Execution_model#stack_and_execution_contexts\",children:\"stack\"}),\" is empty; then, the next job is pulled from the queue. Jobs might not be pulled with uniform priority\\u200A\\u2014\\u200Afor example, HTML event loops split jobs into two categories: \",(0,n.jsx)(e.em,{children:\"tasks\"}),\" and \",(0,n.jsx)(e.em,{children:\"microtasks\"}),\". Microtasks have higher priority and the microtask queue is drained first before the task queue is pulled.\"]}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"Okay, at this point, let\\u2019s go find out how this deferExecution is used in the Refine codebase.\"}),`\n`,(0,n.jsx)(e.h3,{id:\"deferexecution-usage\",children:\"deferExecution usage\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"if (!isPessimistic && !isAutosave) {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  // If the mutation mode is not pessimistic, handle the redirect immediately in an async manner\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  // `setWarnWhen` blocks the redirects until set to `false`\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  // If redirect is done before the value is properly set, it will be blocked.\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  // We're deferring the execution of the redirect to ensure that the value is set properly.\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  deferExecution(() => onSuccessRedirect());\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  // Resolve the promise immediately\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  resolve();\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"This code snippet is one instance picked from \",(0,n.jsx)(e.a,{href:\"https://github.com/refinedev/refine/blob/main/packages/core/src/hooks/form/index.ts#L246\",children:\"hooks/form/index.ts\"})]}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsx)(e.p,{children:\"But I am surprised there is no clean up in the sense that timeout is not cleared\"}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{id:\"testing-deferexecution\",children:\"Testing deferExecution()\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"You will find a file named \",(0,n.jsx)(e.a,{href:\"https://github.com/refinedev/refine/blob/main/packages/core/src/definitions/helpers/defer-execution/index.spec.ts\",children:\"defer-execution/index.spec.ts\"}),\" containing the below code:\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'import { waitFor } from \"@testing-library/react\";'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'import { deferExecution } from \".\";'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'describe(\"deferExecution\", () => {'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  beforeEach(() => {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    jest.useRealTimers();\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  });\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  afterEach(() => {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    jest.useFakeTimers();\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  });\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'  it(\"should defer the call after caller returns\", async () => {'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    const array: number[] = [];\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    const fn = () => {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      array.push(1);\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      deferExecution(() => {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"        array.push(3);\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      });\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      array.push(2);\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    };\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    fn();\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    await waitFor(() => {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      expect(array).toEqual([1, 2, 3]);\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    });\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  });\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"});\"})})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"arr.push(3) is called inside deferExecution and the result is validated to [1, 2, 3].\\xA0\"}),`\n`,(0,n.jsx)(e.h3,{id:\"about-me\",children:\"About me:\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Hey, my name is \",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com\",children:\"Ramu Narasinga\"}),\". I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.em,{children:(0,n.jsxs)(e.strong,{children:[\"I am open to work on interesting projects. Send me an email at \",(0,n.jsx)(e.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:\"ramu.narasinga@gmail.com\"})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Github\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://github.com/ramu-narasinga\",children:\"https://github.com/ramu-narasinga\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My website\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:\"https://ramunarasinga.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Youtube channel\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://www.youtube.com/@thinkthroo\",children:\"https://www.youtube.com/@thinkthroo\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Learning platform\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://thinkthroo.com/\",children:\"https://thinkthroo.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Codebase Architecture\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/architecture\",children:\"https://app.thinkthroo.com/architecture\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Best practices\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/best-practices\",children:\"https://app.thinkthroo.com/best-practices\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Production-grade projects\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:\"https://app.thinkthroo.com/production-grade-projects\"})]}),`\n`,(0,n.jsx)(e.h3,{id:\"references\",children:\"References:\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/refinedev/refine/blob/main/packages/core/src/definitions/helpers/defer-execution/index.ts#L8\",children:\"https://github.com/refinedev/refine/blob/main/packages/core/src/definitions/helpers/defer-execution/index.ts#L8\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/refinedev/refine/blob/main/packages/core/src/hooks/form/index.ts#L292\",children:\"https://github.com/refinedev/refine/blob/main/packages/core/src/hooks/form/index.ts#L292\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/refinedev/refine/tree/main/packages/core/src/definitions/helpers/defer-execution\",children:\"https://github.com/refinedev/refine/tree/main/packages/core/src/definitions/helpers/defer-execution\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/API/Window/setTimeout\",children:\"https://developer.mozilla.org/en-US/docs/Web/API/Window/setTimeout\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Execution_model#job_queue_and_event_loop\",children:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Execution_model#job_queue_and_event_loop\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/refinedev/refine/blob/main/packages/core/src/definitions/helpers/defer-execution/index.spec.ts\",children:\"https://github.com/refinedev/refine/blob/main/packages/core/src/definitions/helpers/defer-execution/index.spec.ts\"})}),`\n`]}),`\n`]})]})}function h(i={}){let{wrapper:e}=i.components||{};return e?(0,n.jsx)(e,{...i,children:(0,n.jsx)(o,{...i})}):o(i)}return v(y);})();\n;return Component;"
  },
  "_id": "blog/deferExecution-in-Refine-source.mdx",
  "_raw": {
    "sourceFilePath": "blog/deferExecution-in-Refine-source.mdx",
    "sourceFileName": "deferExecution-in-Refine-source.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/deferExecution-in-Refine-source"
  },
  "type": "Doc",
  "slug": "/blog/deferExecution-in-Refine-source",
  "slugAsParams": "deferExecution-in-Refine-source"
}