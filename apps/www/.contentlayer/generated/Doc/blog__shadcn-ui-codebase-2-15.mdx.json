{
  "title": "shadcn-ui/ui codebase analysis - How does shadcn-ui CLI work? — Part 2.15\r",
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\r\nI wanted to find out how shadcn-ui CLI works. In this article, I discuss the code used to build the shadcn-ui/ui CLI.\r\n\r\nIn part 2.11, we looked at runInit function and how shadcn-ui/ui ensures directories provided in resolvedPaths in config exist.\r\n\r\nThe following operations are performed in runInit function:\r\n\r\n![](https://miro.medium.com/v2/resize:fit:875/1*kN1j5uVPRO4-s7DCfczNqw.png)\r\n\r\n1. Ensure all resolved paths directories exist.\r\n    \r\n2. Write tailwind config.\r\n    \r\n3. Write css file.\r\n    \r\n4. Write cn file.\r\n    \r\n5. Install dependencies.\r\n    \r\n\r\n#1, #2, #3, #4 from the above are covered in part 2.12, 2.13 and 2.14, let’s find out how “Install dependencies” operation is done.\r\n\r\n# **Install dependencies**\r\n\r\nThe below code snippet is picked from [cli/src/commands/init.ts](https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/commands/init.ts#L382)\r\n\r\n```plaintext\r\n// Install dependencies.\r\nconst dependenciesSpinner = ora(`Installing dependencies...`)?.start()\r\nconst packageManager = await getPackageManager(cwd)\r\n\r\n// TODO: add support for other icon libraries.\r\nconst deps = [\r\n  ...PROJECT_DEPENDENCIES,\r\n  config.style === \"new-york\" ? \"@radix-ui/react-icons\" : \"lucide-react\",\r\n]\r\n\r\nawait execa(\r\n  packageManager,\r\n  [packageManager === \"npm\" ? \"install\" : \"add\", ...deps],\r\n  {\r\n    cwd,\r\n  }\r\n)\r\ndependenciesSpinner?.succeed()\r\n```\r\n\r\n[ora](https://www.npmjs.com/package/ora) is an elegant terminal spinner and is used to show the message “Installing dependencies…” when you run the `npx shadcn init` command.\r\n\r\n## **getPackageManager**\r\n\r\ngetPackageManager is imported [packages/cli/src/utils/get-package-manager.ts](https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/get-package-manager.ts#L3)\r\n\r\n```plaintext\r\nimport { detect } from \"@antfu/ni\"\r\n\r\nexport async function getPackageManager(\r\n  targetDir: string\r\n): Promise<\"yarn\" | \"pnpm\" | \"bun\" | \"npm\"> {\r\n  const packageManager = await detect({ programmatic: true, cwd: targetDir })\r\n\r\n  if (packageManager === \"yarn@berry\") return \"yarn\"\r\n  if (packageManager === \"pnpm@6\") return \"pnpm\"\r\n  if (packageManager === \"bun\") return \"bun\"\r\n\r\n  return packageManager ?? \"npm\"\r\n}\r\n```\r\n\r\nHave you ever used npm in a pnpm project? I have and often times, it fails to install the package because you are using npm in a pnpm project.\r\n\r\n[@antfu/ni](https://github.com/antfu-collective/ni#readme) lets you use the right package manager and detect is a function that gives the packageManager used in a given project based on cwd.\r\n\r\nI cannot find anything mentioned about detect method in the [@antfu/ni](https://github.com/antfu-collective/ni#readme) Github readme. How would you know such a method exists unless you read it in some open source codebase?\r\n\r\n## **execa**\r\n\r\n[Execa](https://www.npmjs.com/package/execa) runs commands in your script, application or library. Unlike shells, it is [optimized](https://github.com/sindresorhus/execa/blob/HEAD/docs/bash.md) for programmatic usage. Built on top of the [`child_process`](https://nodejs.org/api/child_process.html) core module. This is built by the legend, [Sindre Sorhus](https://github.com/sindresorhus)\r\n\r\nshadcn-ui/ui CLI uses execa to install the neccessary dependencies as part of npx shadcn-ui init command.\r\n\r\n# **Conclusion**\r\n\r\nshadcn-ui CLI uses [execa](https://www.npmjs.com/package/execa), built by the legend, [Sindre Sorhu](https://github.com/sindresorhus). Execa is used to install the necessary dependencies in a script file. We all are familiar with executing installation commands but if you want to install some packages in a script programatically, execa can be used.\r\n\r\nshadcn-ui CLI detects the package manager used in your project using “detect” method from [@antfu/ni](https://github.com/antfu-collective/ni#readme).\r\n\r\nThis article marks my quest to study and learn what happens under the hood when you run npx shadcn-ui init command as completed.\r\n\r\nI am moving on to study the [add command](https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/commands/add.ts).\r\n\r\n![](https://miro.medium.com/v2/resize:fit:875/1*47EKz3q3aUidRrzxVGAjLg.png align=\"left\")\r\n\r\n> [*Get free courses inspired by the best practices used in open source.*](https://app.thinkthroo.com/best-practices)\r\n\r\n# **About me:**\r\n\r\nHey, my name is [**Ramu Narasinga**](https://ramunarasinga.com/). I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\r\n\r\n***I am open to work on interesting projects. Send me an email at*** [***ramu.narasinga@gmail.com***](mailto:ramu.narasinga@gmail.com)\r\n\r\nMy Github — [**https://github.com/ramu-narasinga**](https://github.com/ramu-narasinga)\r\n\r\nMy website — [**https://ramunarasinga.com**](https://ramunarasinga.com/)\r\n\r\nMy Youtube channel — [**https://www.youtube.com/@thinkthroo**](https://www.youtube.com/@thinkthroo)\r\n\r\nLearning platform — [**https://thinkthroo.com**](https://thinkthroo.com/)\r\n\r\nCodebase Architecture — [**https://app.thinkthroo.com/architecture**](https://app.thinkthroo.com/architecture)\r\n\r\nBest practices — [**https://app.thinkthroo.com/best-practices**](https://app.thinkthroo.com/best-practices)\r\n\r\nProduction-grade projects — [**https://app.thinkthroo.com/production-grade-projects**](https://app.thinkthroo.com/production-grade-projects)\r\n\r\n# **References:**\r\n\r\n1. [https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/commands/init.ts#L382](https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/commands/init.ts#L382)\r\n    \r\n2. [https://www.npmjs.com/package/ora](https://www.npmjs.com/package/ora)\r\n    \r\n3. [https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/get-package-manager.ts#L3](https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/get-package-manager.ts#L3)\r\n    \r\n4. [https://www.npmjs.com/package/@antfu/ni](https://www.npmjs.com/package/@antfu/ni)\r\n    \r\n5. [https://github.com/antfu-collective/ni#readme](https://github.com/antfu-collective/ni#readme)\r\n    \r\n6. [https://github.com/search?q=import+%7B+detect+%7D+from+%22%40antfu%2Fni%22&type=code](https://github.com/search?q=import+%7B+detect+%7D+from+%22%40antfu%2Fni%22&type=code)\r\n    \r\n7. [https://www.npmjs.com/package/execa](https://www.npmjs.com/package/execa)\r\n    \r\n8. [https://github.com/sindresorhus](https://github.com/sindresorhus)",
    "code": "var Component=(()=>{var p=Object.create;var r=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var b=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),w=(a,e)=>{for(var i in e)r(a,i,{get:e[i],enumerable:!0})},s=(a,e,i,t)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let c of u(e))!f.call(a,c)&&c!==i&&r(a,c,{get:()=>e[c],enumerable:!(t=m(e,c))||t.enumerable});return a};var k=(a,e,i)=>(i=a!=null?p(g(a)):{},s(e||!a||!a.__esModule?r(i,\"default\",{value:a,enumerable:!0}):i,a)),y=a=>s(r({},\"__esModule\",{value:!0}),a);var l=b((v,h)=>{h.exports=_jsx_runtime});var N={};w(N,{default:()=>o,frontmatter:()=>x});var n=k(l()),x={title:\"shadcn-ui/ui codebase analysis - How does shadcn-ui CLI work? \\u2014 Part 2.15\"};function d(a){let e={a:\"a\",blockquote:\"blockquote\",code:\"code\",div:\"div\",em:\"em\",h1:\"h1\",h2:\"h2\",img:\"img\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"I wanted to find out how shadcn-ui CLI works. In this article, I discuss the code used to build the shadcn-ui/ui CLI.\"}),`\n`,(0,n.jsx)(e.p,{children:\"In part 2.11, we looked at runInit function and how shadcn-ui/ui ensures directories provided in resolvedPaths in config exist.\"}),`\n`,(0,n.jsx)(e.p,{children:\"The following operations are performed in runInit function:\"}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://miro.medium.com/v2/resize:fit:875/1*kN1j5uVPRO4-s7DCfczNqw.png\",alt:\"\"})}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:\"Ensure all resolved paths directories exist.\"}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:\"Write tailwind config.\"}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:\"Write css file.\"}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:\"Write cn file.\"}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:\"Install dependencies.\"}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"#1, #2, #3, #4 from the above are covered in part 2.12, 2.13 and 2.14, let\\u2019s find out how \\u201CInstall dependencies\\u201D operation is done.\"}),`\n`,(0,n.jsx)(e.h1,{id:\"install-dependencies\",children:(0,n.jsx)(e.strong,{children:\"Install dependencies\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"The below code snippet is picked from \",(0,n.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/commands/init.ts#L382\",children:\"cli/src/commands/init.ts\"})]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"// Install dependencies.\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"const dependenciesSpinner = ora(`Installing dependencies...`)?.start()\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"const packageManager = await getPackageManager(cwd)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"// TODO: add support for other icon libraries.\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"const deps = [\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  ...PROJECT_DEPENDENCIES,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'  config.style === \"new-york\" ? \"@radix-ui/react-icons\" : \"lucide-react\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"]\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"await execa(\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  packageManager,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'  [packageManager === \"npm\" ? \"install\" : \"add\", ...deps],'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    cwd,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\")\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"dependenciesSpinner?.succeed()\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:\"https://www.npmjs.com/package/ora\",children:\"ora\"}),\" is an elegant terminal spinner and is used to show the message \\u201CInstalling dependencies\\u2026\\u201D when you run the \",(0,n.jsx)(e.code,{children:\"npx shadcn init\"}),\" command.\"]}),`\n`,(0,n.jsx)(e.h2,{id:\"getpackagemanager\",children:(0,n.jsx)(e.strong,{children:\"getPackageManager\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"getPackageManager is imported \",(0,n.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/get-package-manager.ts#L3\",children:\"packages/cli/src/utils/get-package-manager.ts\"})]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'import { detect } from \"@antfu/ni\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"export async function getPackageManager(\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  targetDir: string\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'): Promise<\"yarn\" | \"pnpm\" | \"bun\" | \"npm\"> {'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  const packageManager = await detect({ programmatic: true, cwd: targetDir })\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'  if (packageManager === \"yarn@berry\") return \"yarn\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'  if (packageManager === \"pnpm@6\") return \"pnpm\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'  if (packageManager === \"bun\") return \"bun\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'  return packageManager ?? \"npm\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}\"})})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"Have you ever used npm in a pnpm project? I have and often times, it fails to install the package because you are using npm in a pnpm project.\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:\"https://github.com/antfu-collective/ni#readme\",children:\"@antfu/ni\"}),\" lets you use the right package manager and detect is a function that gives the packageManager used in a given project based on cwd.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"I cannot find anything mentioned about detect method in the \",(0,n.jsx)(e.a,{href:\"https://github.com/antfu-collective/ni#readme\",children:\"@antfu/ni\"}),\" Github readme. How would you know such a method exists unless you read it in some open source codebase?\"]}),`\n`,(0,n.jsx)(e.h2,{id:\"execa\",children:(0,n.jsx)(e.strong,{children:\"execa\"})}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:\"https://www.npmjs.com/package/execa\",children:\"Execa\"}),\" runs commands in your script, application or library. Unlike shells, it is \",(0,n.jsx)(e.a,{href:\"https://github.com/sindresorhus/execa/blob/HEAD/docs/bash.md\",children:\"optimized\"}),\" for programmatic usage. Built on top of the \",(0,n.jsx)(e.a,{href:\"https://nodejs.org/api/child_process.html\",children:(0,n.jsx)(e.code,{children:\"child_process\"})}),\" core module. This is built by the legend, \",(0,n.jsx)(e.a,{href:\"https://github.com/sindresorhus\",children:\"Sindre Sorhus\"})]}),`\n`,(0,n.jsx)(e.p,{children:\"shadcn-ui/ui CLI uses execa to install the neccessary dependencies as part of npx shadcn-ui init command.\"}),`\n`,(0,n.jsx)(e.h1,{id:\"conclusion\",children:(0,n.jsx)(e.strong,{children:\"Conclusion\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"shadcn-ui CLI uses \",(0,n.jsx)(e.a,{href:\"https://www.npmjs.com/package/execa\",children:\"execa\"}),\", built by the legend, \",(0,n.jsx)(e.a,{href:\"https://github.com/sindresorhus\",children:\"Sindre Sorhu\"}),\". Execa is used to install the necessary dependencies in a script file. We all are familiar with executing installation commands but if you want to install some packages in a script programatically, execa can be used.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"shadcn-ui CLI detects the package manager used in your project using \\u201Cdetect\\u201D method from \",(0,n.jsx)(e.a,{href:\"https://github.com/antfu-collective/ni#readme\",children:\"@antfu/ni\"}),\".\"]}),`\n`,(0,n.jsx)(e.p,{children:\"This article marks my quest to study and learn what happens under the hood when you run npx shadcn-ui init command as completed.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"I am moving on to study the \",(0,n.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/commands/add.ts\",children:\"add command\"}),\".\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"![](\",(0,n.jsx)(e.a,{href:\"https://miro.medium.com/v2/resize:fit:875/1*47EKz3q3aUidRrzxVGAjLg.png\",children:\"https://miro.medium.com/v2/resize:fit:875/1*47EKz3q3aUidRrzxVGAjLg.png\"}),' align=\"left\")']}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/best-practices\",children:(0,n.jsx)(e.em,{children:\"Get free courses inspired by the best practices used in open source.\"})})}),`\n`]}),`\n`,(0,n.jsx)(e.h1,{id:\"about-me\",children:(0,n.jsx)(e.strong,{children:\"About me:\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Hey, my name is \",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:(0,n.jsx)(e.strong,{children:\"Ramu Narasinga\"})}),\". I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.em,{children:(0,n.jsx)(e.strong,{children:\"I am open to work on interesting projects. Send me an email at\"})}),\" \",(0,n.jsx)(e.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:(0,n.jsx)(e.em,{children:(0,n.jsx)(e.strong,{children:\"ramu.narasinga@gmail.com\"})})})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Github\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://github.com/ramu-narasinga\",children:(0,n.jsx)(e.strong,{children:\"https://github.com/ramu-narasinga\"})})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My website\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:(0,n.jsx)(e.strong,{children:\"https://ramunarasinga.com\"})})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Youtube channel\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://www.youtube.com/@thinkthroo\",children:(0,n.jsx)(e.strong,{children:\"https://www.youtube.com/@thinkthroo\"})})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Learning platform\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://thinkthroo.com/\",children:(0,n.jsx)(e.strong,{children:\"https://thinkthroo.com\"})})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Codebase Architecture\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/architecture\",children:(0,n.jsx)(e.strong,{children:\"https://app.thinkthroo.com/architecture\"})})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Best practices\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/best-practices\",children:(0,n.jsx)(e.strong,{children:\"https://app.thinkthroo.com/best-practices\"})})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Production-grade projects\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:(0,n.jsx)(e.strong,{children:\"https://app.thinkthroo.com/production-grade-projects\"})})]}),`\n`,(0,n.jsx)(e.h1,{id:\"references\",children:(0,n.jsx)(e.strong,{children:\"References:\"})}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/commands/init.ts#L382\",children:\"https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/commands/init.ts#L382\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://www.npmjs.com/package/ora\",children:\"https://www.npmjs.com/package/ora\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/get-package-manager.ts#L3\",children:\"https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/get-package-manager.ts#L3\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://www.npmjs.com/package/@antfu/ni\",children:\"https://www.npmjs.com/package/@antfu/ni\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/antfu-collective/ni#readme\",children:\"https://github.com/antfu-collective/ni#readme\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/search?q=import+%7B+detect+%7D+from+%22%40antfu%2Fni%22&type=code\",children:\"https://github.com/search?q=import+%7B+detect+%7D+from+%22%40antfu%2Fni%22&type=code\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://www.npmjs.com/package/execa\",children:\"https://www.npmjs.com/package/execa\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/sindresorhus\",children:\"https://github.com/sindresorhus\"})}),`\n`]}),`\n`]})]})}function o(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(d,{...a})}):d(a)}return y(N);})();\n;return Component;"
  },
  "_id": "blog/shadcn-ui-codebase-2-15.mdx",
  "_raw": {
    "sourceFilePath": "blog/shadcn-ui-codebase-2-15.mdx",
    "sourceFileName": "shadcn-ui-codebase-2-15.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/shadcn-ui-codebase-2-15"
  },
  "type": "Doc",
  "slug": "/blog/shadcn-ui-codebase-2-15",
  "slugAsParams": "shadcn-ui-codebase-2-15"
}