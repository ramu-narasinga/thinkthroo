{
  "title": "String.raw in Tailwind CSS source code.\r",
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\r\nIn this article, we analyze the usage of `String.raw` in [Tailwindcss source code](https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/tests/ui.spec.ts).\r\n\r\n# **String.raw**\r\n\r\n[MDN documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/raw) says that:  \r\n“The String.raw() static method is a tag function of template literals.  \r\nThis is similar to the r prefix in Python, or the @ prefix in C# for string literals.  \r\nIt’s used to get the raw string form of template literals — that is, substitutions  \r\n(e.g. $\\{foo\\}) are processed, but escape sequences (e.g. \\\\n) are not.“\r\n\r\n## **Example 1:**\r\n\r\nThe below example is picked from MDN:\r\n\r\n```plaintext\r\n// Create a variable that uses a Windows\r\n// path without escaping the backslashes:\r\nconst filePath = String.raw`C:\\Development\\profile\\aboutme.html`;\r\nconsole.log(`The file was uploaded from: ${filePath}`);\r\n// Expected output: \"The file was uploaded from: C:\\Development\\profile\\aboutme.html\"\r\n```\r\n\r\nThis above example’s execution result looks like this:\r\n\r\n```plaintext\r\n> \"The file was uploaded from: C:\\Development\\profile\\aboutme.html\"\r\n```\r\n\r\n## **Example 2:**\r\n\r\nIf you run the same example without String.raw using the code below:\r\n\r\n```plaintext\r\n// Create a variable that uses a Windows\r\n// path without escaping the backslashes:\r\nconst filePath = `C:\\Development\\profile\\aboutme.html`;\r\nconsole.log(`The file was uploaded from: ${filePath}`);\r\n// Expected output: \"The file was uploaded from: C:\\Development\\profile\\aboutme.html\"\r\n```\r\n\r\nResult looks like this:\r\n\r\n```plaintext\r\n> \"The file was uploaded from: C:Developmentprofileaboutme.html\"\r\n```\r\n\r\n## **Example 3:**\r\n\r\nIf you run the same example involving \\\\n using the code below:\r\n\r\n```plaintext\r\nconst filePathWithoutStringRaw = `\\nC:\\Development\\profile\\aboutme.html`;\r\nconst filePathWithStringRaw = String.raw`\\nC:\\Development\\profile\\aboutme.html`;\r\nconsole.log(\"filePathWithoutStringRaw:\", filePathWithoutStringRaw)\r\nconsole.log(\"*******\")\r\nconsole.log(\"filePathWithStringRaw:\", filePathWithStringRaw)\r\n```\r\n\r\nResult looks like this:\r\n\r\n```plaintext\r\n> \"filePathWithoutStringRaw:\" \"\r\nC:Developmentprofileaboutme.html\"\r\n> \"*******\"\r\n> \"filePathWithStringRaw:\" \"\\nC:\\Development\\profile\\aboutme.html\"\r\n```\r\n\r\n![](https://miro.medium.com/v2/resize:fit:660/1*q2X-1hKCp-8HUsoMGF3X-g.png)\r\n\r\n# **How Tailwindcss uses String.raw:**\r\n\r\n[ui.spec.ts test file](https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/tests/ui.spec.ts) assigns String.raw to `html` and `css`.\r\n\r\n![](https://miro.medium.com/v2/resize:fit:875/1*jAiDhMrci3wBzrM73A0Ojg.png)\r\n\r\n`html` is found to be used in a lot of tests written in [ui.spec.ts](https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/tests/ui.spec.ts)  \r\n  \r\nLet’s take a closer look at this test code:\r\n\r\n```plaintext\r\nfor (let [classes, expected] of [\r\n [\r\n 'bg-linear-to-r from-red-500',\r\n 'linear-gradient(to right, rgb(239, 68, 68) 0%, rgba(0, 0, 0, 0) 100%)',\r\n ],\r\n [\r\n 'bg-linear-to-r via-red-500',\r\n 'linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgb(239, 68, 68) 50%, rgba(0, 0, 0, 0) 100%)',\r\n ],\r\n [\r\n 'bg-linear-to-r to-red-500',\r\n 'linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgb(239, 68, 68) 100%)',\r\n ],\r\n [\r\n 'bg-linear-to-r from-red-500 to-blue-500',\r\n 'linear-gradient(to right, rgb(239, 68, 68) 0%, rgb(59, 130, 246) 100%)',\r\n ],\r\n [\r\n 'bg-linear-to-r via-red-500 to-blue-500',\r\n 'linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgb(239, 68, 68) 50%, rgb(59, 130, 246) 100%)',\r\n ],\r\n [\r\n 'bg-linear-to-r from-red-500 via-green-500 to-blue-500',\r\n 'linear-gradient(to right, rgb(239, 68, 68) 0%, rgb(34, 197, 94) 50%, rgb(59, 130, 246) 100%)',\r\n ],\r\n [\r\n 'bg-linear-[to_right,var( - color-red-500),var( - color-green-500),var( - color-blue-500)]',\r\n 'linear-gradient(to right, rgb(239, 68, 68), rgb(34, 197, 94), rgb(59, 130, 246))',\r\n ],\r\n]) {\r\n test(`background gradient, \"${classes}\"`, async ({ page }) => {\r\n   let { getPropertyValue } = await render(\r\n   page,\r\n   html`<div id=\"x\" class=\"${classes}\">Hello world</div>`,\r\n   )\r\n   expect(await getPropertyValue('#x', 'background-image')).toEqual(expected)\r\n })\r\n}\r\n```\r\n\r\nIt is interesting to see an entire array defined with in a `for` loop.\r\n\r\n```plaintext\r\nhtml`<div id=\"x\" class=\"${classes}\">Hello world</div>`,\r\n```\r\n\r\n`${classes}` gets replaced with first item of the below array:\r\n\r\n```plaintext\r\n[\r\n 'bg-linear-to-r from-red-500',\r\n 'linear-gradient(to right, rgb(239, 68, 68) 0%, rgba(0, 0, 0, 0) 100%)',\r\n],\r\n```\r\n\r\n# **About me:**\r\n\r\nHey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\r\n\r\nI am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com\r\n\r\nMy Github — [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\r\n\r\nMy website — [https://ramunarasinga.com](https://ramunarasinga.com/)\r\n\r\nMy Youtube channel — [https://www.youtube.com/@thinkthroo](https://www.youtube.com/@thinkthroo)\r\n\r\nLearning platform — [https://thinkthroo.com](https://thinkthroo.com/)\r\n\r\nCodebase Architecture — [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\r\n\r\nBest practices — [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\r\n\r\nProduction-grade projects — [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\r\n\r\n# **References:**\r\n\r\n1. [https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/tests/ui.spec.ts](https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/tests/ui.spec.ts)\r\n    \r\n2. [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global\\_Objects/String/raw](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/raw)\r\n    \r\n3. https://stackoverflow.com/questions/34772762/what-are-the-actual-uses-of-es6-raw-string-access\r\n",
    "code": "var Component=(()=>{var o=Object.create;var t=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var b=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),w=(a,e)=>{for(var l in e)t(a,l,{get:e[l],enumerable:!0})},s=(a,e,l,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of g(e))!f.call(a,i)&&i!==l&&t(a,i,{get:()=>e[i],enumerable:!(r=m(e,i))||r.enumerable});return a};var N=(a,e,l)=>(l=a!=null?o(u(a)):{},s(e||!a||!a.__esModule?t(l,\"default\",{value:a,enumerable:!0}):l,a)),x=a=>s(t({},\"__esModule\",{value:!0}),a);var d=b((S,c)=>{c.exports=_jsx_runtime});var y={};w(y,{default:()=>p,frontmatter:()=>v});var n=N(d()),v={title:\"String.raw in Tailwind CSS source code.\"};function h(a){let e={a:\"a\",br:\"br\",code:\"code\",div:\"div\",h1:\"h1\",h2:\"h2\",img:\"img\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"In this article, we analyze the usage of \",(0,n.jsx)(e.code,{children:\"String.raw\"}),\" in \",(0,n.jsx)(e.a,{href:\"https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/tests/ui.spec.ts\",children:\"Tailwindcss source code\"}),\".\"]}),`\n`,(0,n.jsx)(e.h1,{id:\"stringraw\",children:(0,n.jsx)(e.strong,{children:\"String.raw\"})}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/raw\",children:\"MDN documentation\"}),\" says that:\",(0,n.jsx)(e.br,{}),`\n`,\"\\u201CThe String.raw() static method is a tag function of template literals.\",(0,n.jsx)(e.br,{}),`\n`,\"This is similar to the r prefix in Python, or the @ prefix in C# for string literals.\",(0,n.jsx)(e.br,{}),`\n`,\"It\\u2019s used to get the raw string form of template literals \\u2014 that is, substitutions\",(0,n.jsx)(e.br,{}),`\n`,\"(e.g. ${foo}) are processed, but escape sequences (e.g. \\\\n) are not.\\u201C\"]}),`\n`,(0,n.jsx)(e.h2,{id:\"example-1\",children:(0,n.jsx)(e.strong,{children:\"Example 1:\"})}),`\n`,(0,n.jsx)(e.p,{children:\"The below example is picked from MDN:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"// Create a variable that uses a Windows\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"// path without escaping the backslashes:\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"const filePath = String.raw`C:\\\\Development\\\\profile\\\\aboutme.html`;\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"console.log(`The file was uploaded from: ${filePath}`);\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'// Expected output: \"The file was uploaded from: C:\\\\Development\\\\profile\\\\aboutme.html\"'})})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"This above example\\u2019s execution result looks like this:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'> \"The file was uploaded from: C:\\\\Development\\\\profile\\\\aboutme.html\"'})})})})}),`\n`,(0,n.jsx)(e.h2,{id:\"example-2\",children:(0,n.jsx)(e.strong,{children:\"Example 2:\"})}),`\n`,(0,n.jsx)(e.p,{children:\"If you run the same example without String.raw using the code below:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"// Create a variable that uses a Windows\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"// path without escaping the backslashes:\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"const filePath = `C:\\\\Development\\\\profile\\\\aboutme.html`;\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"console.log(`The file was uploaded from: ${filePath}`);\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'// Expected output: \"The file was uploaded from: C:\\\\Development\\\\profile\\\\aboutme.html\"'})})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"Result looks like this:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'> \"The file was uploaded from: C:Developmentprofileaboutme.html\"'})})})})}),`\n`,(0,n.jsx)(e.h2,{id:\"example-3\",children:(0,n.jsx)(e.strong,{children:\"Example 3:\"})}),`\n`,(0,n.jsx)(e.p,{children:\"If you run the same example involving \\\\n using the code below:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"const filePathWithoutStringRaw = `\\\\nC:\\\\Development\\\\profile\\\\aboutme.html`;\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"const filePathWithStringRaw = String.raw`\\\\nC:\\\\Development\\\\profile\\\\aboutme.html`;\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'console.log(\"filePathWithoutStringRaw:\", filePathWithoutStringRaw)'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'console.log(\"*******\")'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'console.log(\"filePathWithStringRaw:\", filePathWithStringRaw)'})})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"Result looks like this:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'> \"filePathWithoutStringRaw:\" \"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'C:Developmentprofileaboutme.html\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'> \"*******\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'> \"filePathWithStringRaw:\" \"\\\\nC:\\\\Development\\\\profile\\\\aboutme.html\"'})})]})})}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://miro.medium.com/v2/resize:fit:660/1*q2X-1hKCp-8HUsoMGF3X-g.png\",alt:\"\"})}),`\n`,(0,n.jsx)(e.h1,{id:\"how-tailwindcss-uses-stringraw\",children:(0,n.jsx)(e.strong,{children:\"How Tailwindcss uses String.raw:\"})}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:\"https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/tests/ui.spec.ts\",children:\"ui.spec.ts test file\"}),\" assigns String.raw to \",(0,n.jsx)(e.code,{children:\"html\"}),\" and \",(0,n.jsx)(e.code,{children:\"css\"}),\".\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://miro.medium.com/v2/resize:fit:875/1*jAiDhMrci3wBzrM73A0Ojg.png\",alt:\"\"})}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:\"html\"}),\" is found to be used in a lot of tests written in \",(0,n.jsx)(e.a,{href:\"https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/tests/ui.spec.ts\",children:\"ui.spec.ts\"})]}),`\n`,(0,n.jsx)(e.p,{children:\"Let\\u2019s take a closer look at this test code:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"for (let [classes, expected] of [\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" [\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" 'bg-linear-to-r from-red-500',\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" 'linear-gradient(to right, rgb(239, 68, 68) 0%, rgba(0, 0, 0, 0) 100%)',\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" ],\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" [\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" 'bg-linear-to-r via-red-500',\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" 'linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgb(239, 68, 68) 50%, rgba(0, 0, 0, 0) 100%)',\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" ],\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" [\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" 'bg-linear-to-r to-red-500',\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" 'linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgb(239, 68, 68) 100%)',\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" ],\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" [\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" 'bg-linear-to-r from-red-500 to-blue-500',\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" 'linear-gradient(to right, rgb(239, 68, 68) 0%, rgb(59, 130, 246) 100%)',\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" ],\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" [\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" 'bg-linear-to-r via-red-500 to-blue-500',\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" 'linear-gradient(to right, rgba(0, 0, 0, 0) 0%, rgb(239, 68, 68) 50%, rgb(59, 130, 246) 100%)',\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" ],\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" [\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" 'bg-linear-to-r from-red-500 via-green-500 to-blue-500',\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" 'linear-gradient(to right, rgb(239, 68, 68) 0%, rgb(34, 197, 94) 50%, rgb(59, 130, 246) 100%)',\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" ],\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" [\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" 'bg-linear-[to_right,var( - color-red-500),var( - color-green-500),var( - color-blue-500)]',\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" 'linear-gradient(to right, rgb(239, 68, 68), rgb(34, 197, 94), rgb(59, 130, 246))',\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" ],\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"]) {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' test(`background gradient, \"${classes}\"`, async ({ page }) => {'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"   let { getPropertyValue } = await render(\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"   page,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'   html`<div id=\"x\" class=\"${classes}\">Hello world</div>`,'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"   )\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"   expect(await getPropertyValue('#x', 'background-image')).toEqual(expected)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" })\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"It is interesting to see an entire array defined with in a \",(0,n.jsx)(e.code,{children:\"for\"}),\" loop.\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'html`<div id=\"x\" class=\"${classes}\">Hello world</div>`,'})})})})}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:\"${classes}\"}),\" gets replaced with first item of the below array:\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"[\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" 'bg-linear-to-r from-red-500',\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" 'linear-gradient(to right, rgb(239, 68, 68) 0%, rgba(0, 0, 0, 0) 100%)',\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"],\"})})]})})}),`\n`,(0,n.jsx)(e.h1,{id:\"about-me\",children:(0,n.jsx)(e.strong,{children:\"About me:\"})}),`\n`,(0,n.jsx)(e.p,{children:\"Hey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"I am open to work on interesting projects. Send me an email at \",(0,n.jsx)(e.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:\"ramu.narasinga@gmail.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Github \\u2014 \",(0,n.jsx)(e.a,{href:\"https://github.com/ramu-narasinga\",children:\"https://github.com/ramu-narasinga\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My website \\u2014 \",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:\"https://ramunarasinga.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Youtube channel \\u2014 \",(0,n.jsx)(e.a,{href:\"https://www.youtube.com/@thinkthroo\",children:\"https://www.youtube.com/@thinkthroo\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Learning platform \\u2014 \",(0,n.jsx)(e.a,{href:\"https://thinkthroo.com/\",children:\"https://thinkthroo.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Codebase Architecture \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/architecture\",children:\"https://app.thinkthroo.com/architecture\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Best practices \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/best-practices\",children:\"https://app.thinkthroo.com/best-practices\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Production-grade projects \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:\"https://app.thinkthroo.com/production-grade-projects\"})]}),`\n`,(0,n.jsx)(e.h1,{id:\"references\",children:(0,n.jsx)(e.strong,{children:\"References:\"})}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/tests/ui.spec.ts\",children:\"https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/tests/ui.spec.ts\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/raw\",children:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/raw\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://stackoverflow.com/questions/34772762/what-are-the-actual-uses-of-es6-raw-string-access\",children:\"https://stackoverflow.com/questions/34772762/what-are-the-actual-uses-of-es6-raw-string-access\"})}),`\n`]}),`\n`]})]})}function p(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(h,{...a})}):h(a)}return x(y);})();\n;return Component;"
  },
  "_id": "blog/Stringraw-in-Tailwind.mdx",
  "_raw": {
    "sourceFilePath": "blog/Stringraw-in-Tailwind.mdx",
    "sourceFileName": "Stringraw-in-Tailwind.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/Stringraw-in-Tailwind"
  },
  "type": "Doc",
  "slug": "/blog/Stringraw-in-Tailwind",
  "slugAsParams": "Stringraw-in-Tailwind"
}