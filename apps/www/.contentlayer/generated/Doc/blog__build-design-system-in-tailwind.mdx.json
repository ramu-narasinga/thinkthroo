{
  "title": "buildDesignSystem fn in Tailwind CSS source code.\r",
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\r\nIn this article, we analyze [buildDesignSystem function in Tailwind CSS source code.](https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/src/design-system.ts#L36)\r\n\r\n![](https://miro.medium.com/v2/resize:fit:875/1*OcKTGhnCYia7TSxHpMGHsg.png)\r\n\r\nDesignSystem type picked from [design-system.ts](https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/src/design-system.ts#L36)\r\n\r\n```plaintext\r\nexport type DesignSystem = {\r\n  theme: Theme\r\n  utilities: Utilities\r\n  variants: Variants\r\n\r\n  invalidCandidates: Set<string>\r\n\r\n  // Whether to mark utility declarations as !important\r\n  important: boolean\r\n\r\n  getClassOrder(classes: string[]): [string, bigint | null][]\r\n  getClassList(): ClassEntry[]\r\n  getVariants(): VariantEntry[]\r\n\r\n  parseCandidate(candidate: string): Candidate[]\r\n  parseVariant(variant: string): Variant | null\r\n  compileAstNodes(candidate: Candidate): ReturnType<typeof compileAstNodes>\r\n\r\n  getVariantOrder(): Map<Variant, number>\r\n  resolveThemeValue(path: string): string | undefined\r\n\r\n  // Used by IntelliSense\r\n  candidatesToCss(classes: string[]): (string | null)[]\r\n}\r\n```\r\n\r\nAt the time of writing this article, [design-system.ts](https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/src/design-system.ts#L36) has about 144 LOC.\r\n\r\nLet’s discuss how the values returned by DefaultMap utility function is used in [designSystem](https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/src/design-system.ts#L48).\r\n\r\n```plaintext\r\nlet parsedVariants = new DefaultMap((variant) => parseVariant(variant, designSystem))\r\nlet parsedCandidates = new DefaultMap((candidate) =>\r\n  Array.from(parseCandidate(candidate, designSystem)),\r\n)\r\nlet compiledAstNodes = new DefaultMap<Candidate>((candidate) =>\r\n  compileAstNodes(candidate, designSystem),\r\n)\r\n```\r\n\r\nThese variables are used in designSystem object as shown below:\r\n\r\n```plaintext\r\nparseCandidate(candidate: string) {\r\n  return parsedCandidates.get(candidate)\r\n},\r\nparseVariant(variant: string) {\r\n  return parsedVariants.get(variant)\r\n},\r\ncompileAstNodes(candidate: Candidate) {\r\n  return compiledAstNodes.get(candidate)\r\n},\r\n```\r\n\r\nutilities and variants are the values returned by `createUtilities` and `createVariants`.\r\n\r\nKeys such as [candidatesToCss](https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/src/design-system.ts#L56C5-L56C20), [getVariantOrder](https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/src/design-system.ts#L97) and [resolveThemeValue](https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/src/design-system.ts#L122) have their function implementations that require furter analysis.\r\n\r\n# **About me:**\r\n\r\nHey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\r\n\r\nI am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com\r\n\r\nMy Github — [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\r\n\r\nMy website — [https://ramunarasinga.com](https://ramunarasinga.com/)\r\n\r\nMy Youtube channel — [https://www.youtube.com/@thinkthroo](https://www.youtube.com/@thinkthroo)\r\n\r\nLearning platform — [https://thinkthroo.com](https://thinkthroo.com/)\r\n\r\nCodebase Architecture — [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\r\n\r\nBest practices — [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\r\n\r\nProduction-grade projects — [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\r\n\r\n# **References:**\r\n\r\n1. [https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/src/design-system.ts](https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/src/design-system.ts)\r\n    \r\n2. [https://github.com/tailwindlabs/tailwindcss/blob/c01b8254e822d4f328674357347ca0532f1283a0/packages/tailwindcss/src/index.ts#L319](https://github.com/tailwindlabs/tailwindcss/blob/c01b8254e822d4f328674357347ca0532f1283a0/packages/tailwindcss/src/index.ts#L319)\r\n    \r\n\r\n[  \r\n](https://medium.com/tag/javascript?source=post_page-----dc5c2c6036a1--------------------------------)\r\n",
    "code": "var Component=(()=>{var o=Object.create;var t=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var f=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),w=(a,e)=>{for(var s in e)t(a,s,{get:e[s],enumerable:!0})},r=(a,e,s,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of g(e))!b.call(a,i)&&i!==s&&t(a,i,{get:()=>e[i],enumerable:!(l=m(e,i))||l.enumerable});return a};var y=(a,e,s)=>(s=a!=null?o(u(a)):{},r(e||!a||!a.__esModule?t(s,\"default\",{value:a,enumerable:!0}):s,a)),N=a=>r(t({},\"__esModule\",{value:!0}),a);var d=f((v,c)=>{c.exports=_jsx_runtime});var k={};w(k,{default:()=>p,frontmatter:()=>x});var n=y(d()),x={title:\"buildDesignSystem fn in Tailwind CSS source code.\"};function h(a){let e={a:\"a\",br:\"br\",code:\"code\",div:\"div\",h1:\"h1\",img:\"img\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"In this article, we analyze \",(0,n.jsx)(e.a,{href:\"https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/src/design-system.ts#L36\",children:\"buildDesignSystem function in Tailwind CSS source code.\"})]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://miro.medium.com/v2/resize:fit:875/1*OcKTGhnCYia7TSxHpMGHsg.png\",alt:\"\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"DesignSystem type picked from \",(0,n.jsx)(e.a,{href:\"https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/src/design-system.ts#L36\",children:\"design-system.ts\"})]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"export type DesignSystem = {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  theme: Theme\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  utilities: Utilities\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  variants: Variants\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  invalidCandidates: Set<string>\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  // Whether to mark utility declarations as !important\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  important: boolean\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  getClassOrder(classes: string[]): [string, bigint | null][]\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  getClassList(): ClassEntry[]\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  getVariants(): VariantEntry[]\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  parseCandidate(candidate: string): Candidate[]\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  parseVariant(variant: string): Variant | null\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  compileAstNodes(candidate: Candidate): ReturnType<typeof compileAstNodes>\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  getVariantOrder(): Map<Variant, number>\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  resolveThemeValue(path: string): string | undefined\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  // Used by IntelliSense\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  candidatesToCss(classes: string[]): (string | null)[]\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"At the time of writing this article, \",(0,n.jsx)(e.a,{href:\"https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/src/design-system.ts#L36\",children:\"design-system.ts\"}),\" has about 144 LOC.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Let\\u2019s discuss how the values returned by DefaultMap utility function is used in \",(0,n.jsx)(e.a,{href:\"https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/src/design-system.ts#L48\",children:\"designSystem\"}),\".\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"let parsedVariants = new DefaultMap((variant) => parseVariant(variant, designSystem))\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"let parsedCandidates = new DefaultMap((candidate) =>\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  Array.from(parseCandidate(candidate, designSystem)),\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\")\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"let compiledAstNodes = new DefaultMap<Candidate>((candidate) =>\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  compileAstNodes(candidate, designSystem),\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\")\"})})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"These variables are used in designSystem object as shown below:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"parseCandidate(candidate: string) {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  return parsedCandidates.get(candidate)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"},\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"parseVariant(variant: string) {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  return parsedVariants.get(variant)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"},\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"compileAstNodes(candidate: Candidate) {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  return compiledAstNodes.get(candidate)\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"},\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"utilities and variants are the values returned by \",(0,n.jsx)(e.code,{children:\"createUtilities\"}),\" and \",(0,n.jsx)(e.code,{children:\"createVariants\"}),\".\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Keys such as \",(0,n.jsx)(e.a,{href:\"https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/src/design-system.ts#L56C5-L56C20\",children:\"candidatesToCss\"}),\", \",(0,n.jsx)(e.a,{href:\"https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/src/design-system.ts#L97\",children:\"getVariantOrder\"}),\" and \",(0,n.jsx)(e.a,{href:\"https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/src/design-system.ts#L122\",children:\"resolveThemeValue\"}),\" have their function implementations that require furter analysis.\"]}),`\n`,(0,n.jsx)(e.h1,{id:\"about-me\",children:(0,n.jsx)(e.strong,{children:\"About me:\"})}),`\n`,(0,n.jsx)(e.p,{children:\"Hey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"I am open to work on interesting projects. Send me an email at \",(0,n.jsx)(e.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:\"ramu.narasinga@gmail.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Github \\u2014 \",(0,n.jsx)(e.a,{href:\"https://github.com/ramu-narasinga\",children:\"https://github.com/ramu-narasinga\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My website \\u2014 \",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:\"https://ramunarasinga.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Youtube channel \\u2014 \",(0,n.jsx)(e.a,{href:\"https://www.youtube.com/@thinkthroo\",children:\"https://www.youtube.com/@thinkthroo\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Learning platform \\u2014 \",(0,n.jsx)(e.a,{href:\"https://thinkthroo.com/\",children:\"https://thinkthroo.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Codebase Architecture \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/architecture\",children:\"https://app.thinkthroo.com/architecture\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Best practices \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/best-practices\",children:\"https://app.thinkthroo.com/best-practices\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Production-grade projects \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:\"https://app.thinkthroo.com/production-grade-projects\"})]}),`\n`,(0,n.jsx)(e.h1,{id:\"references\",children:(0,n.jsx)(e.strong,{children:\"References:\"})}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/src/design-system.ts\",children:\"https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/src/design-system.ts\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/tailwindlabs/tailwindcss/blob/c01b8254e822d4f328674357347ca0532f1283a0/packages/tailwindcss/src/index.ts#L319\",children:\"https://github.com/tailwindlabs/tailwindcss/blob/c01b8254e822d4f328674357347ca0532f1283a0/packages/tailwindcss/src/index.ts#L319\"})}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsxs)(e.a,{href:\"https://medium.com/tag/javascript?source=post_page-----dc5c2c6036a1--------------------------------\",children:[(0,n.jsx)(e.br,{}),`\n`]})})]})}function p(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(h,{...a})}):h(a)}return N(k);})();\n;return Component;"
  },
  "_id": "blog/build-design-system-in-tailwind.mdx",
  "_raw": {
    "sourceFilePath": "blog/build-design-system-in-tailwind.mdx",
    "sourceFileName": "build-design-system-in-tailwind.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/build-design-system-in-tailwind"
  },
  "type": "Doc",
  "slug": "/blog/build-design-system-in-tailwind",
  "slugAsParams": "build-design-system-in-tailwind"
}