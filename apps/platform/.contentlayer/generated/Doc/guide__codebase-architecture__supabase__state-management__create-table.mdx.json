{
  "title": "State management in Supabase\r",
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\r\n[C: State management in creating a table in Supabase]\r\n\r\nIn this guide, we analyse how state management in creating a new table in Table Editor works. We review the \r\ncode behind this action and find out how the state is managed once a new table is added.\r\n\r\n# Where is the New Table button? \r\n\r\nLocating the \"New Table\" button in the Supabase codebase is a good start. On the UI, you will find this \r\nbutton at the route `dashboard/project/{projectId}/editor`.\r\n\r\n[Insert screenshot of - New Table button]\r\n\r\nSupabase, at the time of writing this guide, uses `pages` router. You get the hint from the url, this button\r\nwill be found `project/[some-id]/editor`. There is [/studio/pages/project/[ref]/editor/index.tsx](https://github.com/supabase/supabase/blob/master/apps/studio/pages/project/%5Bref%5D/editor/index.tsx#L1)\r\nbut it is straight forward to locate the \"New Table\" because this button is not found in this file, \r\nbut by looking at the below we could make some assumptions and try to locate this button. \r\n\r\n```\r\nconst TableEditorPage: NextPageWithLayout = () => {\r\n  const { ref: projectRef } = useParams()\r\n  const router = useRouter()\r\n\r\n  const onTableCreated = (table: { id: number }) => {\r\n    router.push(`/project/${projectRef}/editor/${table.id}`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <EmptyState />\r\n      <SidePanelEditor onTableCreated={onTableCreated} />\r\n    </>\r\n  )\r\n}\r\n\r\nTableEditorPage.getLayout = (page) => (\r\n  <ProjectContextFromParamsProvider>\r\n    <TableEditorLayout>{page}</TableEditorLayout>\r\n  </ProjectContextFromParamsProvider>\r\n)\r\n```\r\n\r\n`Empty State` also shows a button that lets you create new table. `SidePanelEditor` is the side panel editor\r\nthat provides you a form to fill out the table information. We will need to understand how the state is \r\nmanaged in this form soon. \r\n\r\nAt this point, we should look at [TableEditorLayout](https://github.com/supabase/supabase/blob/master/apps/studio/components/layouts/TableEditorLayout/TableEditorLayout.tsx#L9).\r\nAt [line 13 in TableEditorLayout](https://github.com/supabase/supabase/blob/master/apps/studio/components/layouts/TableEditorLayout/TableEditorLayout.tsx#L13),\r\nyou will find this below line:\r\n\r\n```\r\nconst tableEditorMenu = useMemo(() => <TableEditorMenu />, [])\r\n```\r\n\r\nFinally in [TableEditorMenu.tsx](https://github.com/supabase/supabase/blob/master/apps/studio/components/layouts/TableEditorLayout/TableEditorMenu.tsx#L131),\r\nyou will find the New Table button.\r\n\r\n```\r\n<ButtonTooltip\r\n  block\r\n  title=\"Create a new table\"\r\n  name=\"New table\"\r\n  disabled={!canCreateTables}\r\n  size=\"tiny\"\r\n  icon={<Plus size={14} strokeWidth={1.5} className=\"text-foreground-muted\" />}\r\n  type=\"default\"\r\n  className=\"justify-start\"\r\n  onClick={snap.onAddTable}\r\n  tooltip={{\r\n    content: {\r\n      side: 'bottom',\r\n      text: !canCreateTables\r\n        ? 'You need additional permissions to create tables'\r\n        : undefined,\r\n    },\r\n  }}\r\n>\r\n  New table\r\n</ButtonTooltip>\r\n```\r\n\r\n# What happens on clicking New Table button?\r\n\r\nIn this below code, you see that onClick calls a function `snap.onAddTable`\r\n\r\n```\r\n<ButtonTooltip\r\n  block\r\n  title=\"Create a new table\"\r\n  name=\"New table\"\r\n  disabled={!canCreateTables}\r\n  size=\"tiny\"\r\n  icon={<Plus size={14} strokeWidth={1.5} className=\"text-foreground-muted\" />}\r\n  type=\"default\"\r\n  className=\"justify-start\"\r\n  onClick={snap.onAddTable}\r\n  tooltip={{\r\n    content: {\r\n      side: 'bottom',\r\n      text: !canCreateTables\r\n        ? 'You need additional permissions to create tables'\r\n        : undefined,\r\n    },\r\n  }}\r\n>\r\n  New table\r\n</ButtonTooltip>\r\n```\r\n\r\nAt [line 46](https://github.com/supabase/supabase/blob/master/apps/studio/components/layouts/TableEditorLayout/TableEditorMenu.tsx#L46), \r\nyou will see that snap is a value returned by a function `useTableEditorStateSnapshot`.\r\n\r\n```\r\nconst snap = useTableEditorStateSnapshot()\r\n```",
    "code": "var Component=(()=>{var b=Object.create;var r=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var w=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),T=(n,e)=>{for(var o in e)r(n,o,{get:e[o],enumerable:!0})},s=(n,e,o,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of p(e))!f.call(n,a)&&a!==o&&r(n,a,{get:()=>e[a],enumerable:!(i=h(e,a))||i.enumerable});return n};var y=(n,e,o)=>(o=n!=null?b(m(n)):{},s(e||!n||!n.__esModule?r(o,\"default\",{value:n,enumerable:!0}):o,n)),g=n=>s(r({},\"__esModule\",{value:!0}),n);var d=w((j,l)=>{l.exports=_jsx_runtime});var E={};T(E,{default:()=>u,frontmatter:()=>x});var t=y(d()),x={title:\"State management in Supabase\"};function c(n){let e={a:\"a\",code:\"code\",h1:\"h1\",p:\"p\",pre:\"pre\",...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:\"[C: State management in creating a table in Supabase]\"}),`\n`,(0,t.jsx)(e.p,{children:`In this guide, we analyse how state management in creating a new table in Table Editor works. We review the\\r\ncode behind this action and find out how the state is managed once a new table is added.`}),`\n`,(0,t.jsx)(e.h1,{id:\"where-is-the-new-table-button\",children:\"Where is the New Table button?\"}),`\n`,(0,t.jsxs)(e.p,{children:[`Locating the \"New Table\" button in the Supabase codebase is a good start. On the UI, you will find this\\r\nbutton at the route `,(0,t.jsx)(e.code,{children:\"dashboard/project/{projectId}/editor\"}),\".\"]}),`\n`,(0,t.jsx)(e.p,{children:\"[Insert screenshot of - New Table button]\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Supabase, at the time of writing this guide, uses \",(0,t.jsx)(e.code,{children:\"pages\"}),` router. You get the hint from the url, this button\\r\nwill be found `,(0,t.jsx)(e.code,{children:\"project/[some-id]/editor\"}),\". There is \",(0,t.jsx)(e.a,{href:\"https://github.com/supabase/supabase/blob/master/apps/studio/pages/project/%5Bref%5D/editor/index.tsx#L1\",children:\"/studio/pages/project/[ref]/editor/index.tsx\"}),`\\r\nbut it is straight forward to locate the \"New Table\" because this button is not found in this file,\\r\nbut by looking at the below we could make some assumptions and try to locate this button.`]}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:`const TableEditorPage: NextPageWithLayout = () => {\\r\n  const { ref: projectRef } = useParams()\\r\n  const router = useRouter()\\r\n\\r\n  const onTableCreated = (table: { id: number }) => {\\r\n    router.push(\\`/project/\\${projectRef}/editor/\\${table.id}\\`)\\r\n  }\\r\n\\r\n  return (\\r\n    <>\\r\n      <EmptyState />\\r\n      <SidePanelEditor onTableCreated={onTableCreated} />\\r\n    </>\\r\n  )\\r\n}\\r\n\\r\nTableEditorPage.getLayout = (page) => (\\r\n  <ProjectContextFromParamsProvider>\\r\n    <TableEditorLayout>{page}</TableEditorLayout>\\r\n  </ProjectContextFromParamsProvider>\\r\n)\n`})}),`\n`,(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:\"Empty State\"}),\" also shows a button that lets you create new table. \",(0,t.jsx)(e.code,{children:\"SidePanelEditor\"}),` is the side panel editor\\r\nthat provides you a form to fill out the table information. We will need to understand how the state is\\r\nmanaged in this form soon.`]}),`\n`,(0,t.jsxs)(e.p,{children:[\"At this point, we should look at \",(0,t.jsx)(e.a,{href:\"https://github.com/supabase/supabase/blob/master/apps/studio/components/layouts/TableEditorLayout/TableEditorLayout.tsx#L9\",children:\"TableEditorLayout\"}),`.\\r\nAt `,(0,t.jsx)(e.a,{href:\"https://github.com/supabase/supabase/blob/master/apps/studio/components/layouts/TableEditorLayout/TableEditorLayout.tsx#L13\",children:\"line 13 in TableEditorLayout\"}),`,\\r\nyou will find this below line:`]}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:`const tableEditorMenu = useMemo(() => <TableEditorMenu />, [])\n`})}),`\n`,(0,t.jsxs)(e.p,{children:[\"Finally in \",(0,t.jsx)(e.a,{href:\"https://github.com/supabase/supabase/blob/master/apps/studio/components/layouts/TableEditorLayout/TableEditorMenu.tsx#L131\",children:\"TableEditorMenu.tsx\"}),`,\\r\nyou will find the New Table button.`]}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:`<ButtonTooltip\\r\n  block\\r\n  title=\"Create a new table\"\\r\n  name=\"New table\"\\r\n  disabled={!canCreateTables}\\r\n  size=\"tiny\"\\r\n  icon={<Plus size={14} strokeWidth={1.5} className=\"text-foreground-muted\" />}\\r\n  type=\"default\"\\r\n  className=\"justify-start\"\\r\n  onClick={snap.onAddTable}\\r\n  tooltip={{\\r\n    content: {\\r\n      side: 'bottom',\\r\n      text: !canCreateTables\\r\n        ? 'You need additional permissions to create tables'\\r\n        : undefined,\\r\n    },\\r\n  }}\\r\n>\\r\n  New table\\r\n</ButtonTooltip>\n`})}),`\n`,(0,t.jsx)(e.h1,{id:\"what-happens-on-clicking-new-table-button\",children:\"What happens on clicking New Table button?\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"In this below code, you see that onClick calls a function \",(0,t.jsx)(e.code,{children:\"snap.onAddTable\"})]}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:`<ButtonTooltip\\r\n  block\\r\n  title=\"Create a new table\"\\r\n  name=\"New table\"\\r\n  disabled={!canCreateTables}\\r\n  size=\"tiny\"\\r\n  icon={<Plus size={14} strokeWidth={1.5} className=\"text-foreground-muted\" />}\\r\n  type=\"default\"\\r\n  className=\"justify-start\"\\r\n  onClick={snap.onAddTable}\\r\n  tooltip={{\\r\n    content: {\\r\n      side: 'bottom',\\r\n      text: !canCreateTables\\r\n        ? 'You need additional permissions to create tables'\\r\n        : undefined,\\r\n    },\\r\n  }}\\r\n>\\r\n  New table\\r\n</ButtonTooltip>\n`})}),`\n`,(0,t.jsxs)(e.p,{children:[\"At \",(0,t.jsx)(e.a,{href:\"https://github.com/supabase/supabase/blob/master/apps/studio/components/layouts/TableEditorLayout/TableEditorMenu.tsx#L46\",children:\"line 46\"}),`,\\r\nyou will see that snap is a value returned by a function `,(0,t.jsx)(e.code,{children:\"useTableEditorStateSnapshot\"}),\".\"]}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:`const snap = useTableEditorStateSnapshot()\n`})})]})}function u(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(c,{...n})}):c(n)}return g(E);})();\n;return Component;"
  },
  "_id": "guide/codebase-architecture/supabase/state-management/create-table.mdx",
  "_raw": {
    "sourceFilePath": "guide/codebase-architecture/supabase/state-management/create-table.mdx",
    "sourceFileName": "create-table.mdx",
    "sourceFileDir": "guide/codebase-architecture/supabase/state-management",
    "contentType": "mdx",
    "flattenedPath": "guide/codebase-architecture/supabase/state-management/create-table"
  },
  "type": "Doc",
  "slug": "/guide/codebase-architecture/supabase/state-management/create-table",
  "slugAsParams": "codebase-architecture/supabase/state-management/create-table"
}