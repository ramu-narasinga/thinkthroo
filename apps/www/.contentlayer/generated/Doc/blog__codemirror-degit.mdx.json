{
  "title": "What if CodeMirror v6 dev setup uses Degit internally to clone packages?\r",
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\r\nIn this article, we explore the idea of using Degit to clone/download core/non core packages required to setup the development environment for CodeMirror V6.\r\n\r\n![](https://cdn-images-1.medium.com/max/1600/1*ZE9lB08qc78rRj8UpC4aAA.png)\r\n\r\nPay attention to the run function in the above image.\r\n\r\n```plaintext\r\nrun(\"git\", [\"clone\", origin, pkg.dir])\r\n```\r\n\r\nWhat this does is that it uses child\\_process execSyncFile API to execute this “git clone” command programmatically in Node.js. But instead of cloning, what if we use degit? you might be wondering what a degit is at this point.\r\n\r\n### Degit\r\n\r\ndegit makes copies of git repositories. When you run degit some-user/some-repo, it will find the latest commit on [https://github.com/some-user/some-repo](https://github.com/some-user/some-repo) and download the associated tar file to ~/.degit/some-user/some-repo/commithash.tar.gz if it doesn’t already exist locally. (This is much quicker than using git clone, because you’re not downloading the entire git history.)\r\n\r\nDegit can quickly download the latest commit of any public repository but this does not get you the entire  \r\nhistory.\r\n\r\n### Would it make sense to use Degit?\r\n\r\nShort answer — no, long answer would be CodeMirror does not use monorepo architecture and clones public repositories from CodeMirror organization. What Degit does is it downloads the latest commit of all these packages that make up the CodeMirror but it does not have entire git history\r\n\r\nWithout Git history, you can’t blame anyone, you wouldn’t know who changed a line of code when there is no history. Degit can be used to download templates/starters to download the latest commit and make it quick. [Remotion uses degit](https://github.com/remotion-dev/remotion/blob/main/packages/create-video/src/degit.ts)\r\n\r\nSince this clone execution is part of development setup for CodeMirror v6, you would definitely want the entire git history of core/non core packages used.\r\n\r\n# **About me:**\r\n\r\nHey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\r\n\r\nI am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com\r\n\r\nMy Github — [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\r\n\r\nMy website — [https://ramunarasinga.com](https://ramunarasinga.com/)\r\n\r\nMy Youtube channel — [https://www.youtube.com/@thinkthroo](https://www.youtube.com/@thinkthroo)\r\n\r\nLearning platform — [https://thinkthroo.com](https://thinkthroo.com/)\r\n\r\nCodebase Architecture — [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\r\n\r\nBest practices — [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\r\n\r\nProduction-grade projects — [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\r\n\r\n### References\r\n\r\n1\\. [https://github.com/Rich-Harris/degit](https://github.com/Rich-Harris/degit)  \r\n2\\. [https://github.com/codemirror/dev/blob/main/bin/cm.js#L90C7-L90C45](https://github.com/codemirror/dev/blob/main/bin/cm.js#L90C7-L90C45)  \r\n3\\. [https://github.com/codemirror/dev/blob/main/bin/cm.js#L64-L66](https://github.com/codemirror/dev/blob/main/bin/cm.js#L64-L66)  \r\n4\\. [https://github.com/remotion-dev/remotion/blob/main/packages/create-video/src/degit.ts](https://github.com/remotion-dev/remotion/blob/main/packages/create-video/src/degit.ts)",
    "code": "var Component=(()=>{var l=Object.create;var r=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var f=(o,e)=>()=>(e||o((e={exports:{}}).exports,e),e.exports),y=(o,e)=>{for(var i in e)r(o,i,{get:e[i],enumerable:!0})},c=(o,e,i,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let n of u(e))!b.call(o,n)&&n!==i&&r(o,n,{get:()=>e[n],enumerable:!(a=p(e,n))||a.enumerable});return o};var w=(o,e,i)=>(i=o!=null?l(g(o)):{},c(e||!o||!o.__esModule?r(i,\"default\",{value:o,enumerable:!0}):i,o)),k=o=>c(r({},\"__esModule\",{value:!0}),o);var s=f((C,h)=>{h.exports=_jsx_runtime});var x={};y(x,{default:()=>m,frontmatter:()=>v});var t=w(s()),v={title:\"What if CodeMirror v6 dev setup uses Degit internally to clone packages?\"};function d(o){let e={a:\"a\",br:\"br\",code:\"code\",div:\"div\",h1:\"h1\",h3:\"h3\",img:\"img\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",...o.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:\"In this article, we explore the idea of using Degit to clone/download core/non core packages required to setup the development environment for CodeMirror V6.\"}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"https://cdn-images-1.medium.com/max/1600/1*ZE9lB08qc78rRj8UpC4aAA.png\",alt:\"\"})}),`\n`,(0,t.jsx)(e.p,{children:\"Pay attention to the run function in the above image.\"}),`\n`,(0,t.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,t.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,t.jsx)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,t.jsx)(e.span,{className:\"line\",children:(0,t.jsx)(e.span,{children:'run(\"git\", [\"clone\", origin, pkg.dir])'})})})})}),`\n`,(0,t.jsx)(e.p,{children:\"What this does is that it uses child_process execSyncFile API to execute this \\u201Cgit clone\\u201D command programmatically in Node.js. But instead of cloning, what if we use degit? you might be wondering what a degit is at this point.\"}),`\n`,(0,t.jsx)(e.h3,{id:\"degit\",children:\"Degit\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"degit makes copies of git repositories. When you run degit some-user/some-repo, it will find the latest commit on \",(0,t.jsx)(e.a,{href:\"https://github.com/some-user/some-repo\",children:\"https://github.com/some-user/some-repo\"}),\" and download the associated tar file to ~/.degit/some-user/some-repo/commithash.tar.gz if it doesn\\u2019t already exist locally. (This is much quicker than using git clone, because you\\u2019re not downloading the entire git history.)\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"Degit can quickly download the latest commit of any public repository but this does not get you the entire\",(0,t.jsx)(e.br,{}),`\n`,\"history.\"]}),`\n`,(0,t.jsx)(e.h3,{id:\"would-it-make-sense-to-usedegit\",children:\"Would it make sense to use\\xA0Degit?\"}),`\n`,(0,t.jsx)(e.p,{children:\"Short answer\\u200A\\u2014\\u200Ano, long answer would be CodeMirror does not use monorepo architecture and clones public repositories from CodeMirror organization. What Degit does is it downloads the latest commit of all these packages that make up the CodeMirror but it does not have entire git history\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Without Git history, you can\\u2019t blame anyone, you wouldn\\u2019t know who changed a line of code when there is no history. Degit can be used to download templates/starters to download the latest commit and make it quick. \",(0,t.jsx)(e.a,{href:\"https://github.com/remotion-dev/remotion/blob/main/packages/create-video/src/degit.ts\",children:\"Remotion uses degit\"})]}),`\n`,(0,t.jsx)(e.p,{children:\"Since this clone execution is part of development setup for CodeMirror v6, you would definitely want the entire git history of core/non core packages used.\"}),`\n`,(0,t.jsx)(e.h1,{id:\"about-me\",children:(0,t.jsx)(e.strong,{children:\"About me:\"})}),`\n`,(0,t.jsx)(e.p,{children:\"Hey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"I am open to work on interesting projects. Send me an email at \",(0,t.jsx)(e.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:\"ramu.narasinga@gmail.com\"})]}),`\n`,(0,t.jsxs)(e.p,{children:[\"My Github \\u2014 \",(0,t.jsx)(e.a,{href:\"https://github.com/ramu-narasinga\",children:\"https://github.com/ramu-narasinga\"})]}),`\n`,(0,t.jsxs)(e.p,{children:[\"My website \\u2014 \",(0,t.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:\"https://ramunarasinga.com\"})]}),`\n`,(0,t.jsxs)(e.p,{children:[\"My Youtube channel \\u2014 \",(0,t.jsx)(e.a,{href:\"https://www.youtube.com/@thinkthroo\",children:\"https://www.youtube.com/@thinkthroo\"})]}),`\n`,(0,t.jsxs)(e.p,{children:[\"Learning platform \\u2014 \",(0,t.jsx)(e.a,{href:\"https://thinkthroo.com/\",children:\"https://thinkthroo.com\"})]}),`\n`,(0,t.jsxs)(e.p,{children:[\"Codebase Architecture \\u2014 \",(0,t.jsx)(e.a,{href:\"https://app.thinkthroo.com/architecture\",children:\"https://app.thinkthroo.com/architecture\"})]}),`\n`,(0,t.jsxs)(e.p,{children:[\"Best practices \\u2014 \",(0,t.jsx)(e.a,{href:\"https://app.thinkthroo.com/best-practices\",children:\"https://app.thinkthroo.com/best-practices\"})]}),`\n`,(0,t.jsxs)(e.p,{children:[\"Production-grade projects \\u2014 \",(0,t.jsx)(e.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:\"https://app.thinkthroo.com/production-grade-projects\"})]}),`\n`,(0,t.jsx)(e.h3,{id:\"references\",children:\"References\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"1. \",(0,t.jsx)(e.a,{href:\"https://github.com/Rich-Harris/degit\",children:\"https://github.com/Rich-Harris/degit\"}),(0,t.jsx)(e.br,{}),`\n`,\"2. \",(0,t.jsx)(e.a,{href:\"https://github.com/codemirror/dev/blob/main/bin/cm.js#L90C7-L90C45\",children:\"https://github.com/codemirror/dev/blob/main/bin/cm.js#L90C7-L90C45\"}),(0,t.jsx)(e.br,{}),`\n`,\"3. \",(0,t.jsx)(e.a,{href:\"https://github.com/codemirror/dev/blob/main/bin/cm.js#L64-L66\",children:\"https://github.com/codemirror/dev/blob/main/bin/cm.js#L64-L66\"}),(0,t.jsx)(e.br,{}),`\n`,\"4. \",(0,t.jsx)(e.a,{href:\"https://github.com/remotion-dev/remotion/blob/main/packages/create-video/src/degit.ts\",children:\"https://github.com/remotion-dev/remotion/blob/main/packages/create-video/src/degit.ts\"})]})]})}function m(o={}){let{wrapper:e}=o.components||{};return e?(0,t.jsx)(e,{...o,children:(0,t.jsx)(d,{...o})}):d(o)}return k(x);})();\n;return Component;"
  },
  "_id": "blog/codemirror-degit.mdx",
  "_raw": {
    "sourceFilePath": "blog/codemirror-degit.mdx",
    "sourceFileName": "codemirror-degit.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/codemirror-degit"
  },
  "type": "Doc",
  "slug": "/blog/codemirror-degit",
  "slugAsParams": "codemirror-degit"
}