{
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "[Build Zustand from Scratch]\r\n\r\nIn this course, we build Zustand from scratch using TDD approach.\r\n\r\nWe gradually add the necessary tooling required in this project.\r\n\r\nThe approach:\r\n1. Set up a Node project with TypeScript. \r\n\r\n[C: Project Setup]\r\n[L: Create a Node project with TypeScript]\r\n# Challenge\r\n\r\nIn this challenge, you will have to complete the below tasks:\r\n- Create a Node Project with TypeScript\r\n- Make sure your tsconfig.json matches that of [Zustand's](https://github.com/pmndrs/zustand/blob/v4.5.5/tsconfig.json) (v4.5.5)\r\n\r\n## Resources:\r\n1. https://khalilstemmler.com/blogs/typescript/node-starter-project/\r\n\r\n# Solution\r\n\r\n\r\n\r\n[L: Configure vitest]\r\n# Challenge\r\n\r\nIn this challenge, you will have to complete the below tasks:\r\n- Study the [vitest.config.ts in Zustand](https://github.com/pmndrs/zustand/blob/main/vitest.config.ts).\r\n- Read the Vitest's [Getting Started Guide](https://vitest.dev/guide/).\r\n- Configure Vitest in your project.\r\n- Update your project's vitest.config.ts to match with [Zustand's vitest.config.ts](https://github.com/pmndrs/zustand/blob/main/vitest.config.ts)\r\n\r\n> If you copy over Zustand's vitest.config.ts into your project, please make sure you read the options you pasted so you understand\r\nyour configuration.\r\n\r\n# Resources:\r\n1. https://vitest.dev/guide/\r\n2. https://github.com/pmndrs/zustand/blob/main/vitest.config.ts\r\n\r\n# Solution\r\n\r\n[C: Create a store hook and api object]\r\n[L: Write test]\r\n# Challenge\r\n\r\nNow that you have setup your project locally and configured vitest, it is time you write tests first. \r\n\r\nWe are taking a TDD approach to build the zustand from scratch, we aim to cover the core functionalities so that you\r\nunderstand how Zustand's internals work.\r\n\r\nIn this challenge, you will have to complete the below tasks:\r\n\r\n- Head over to [basic.test.tsx](https://github.com/pmndrs/zustand/blob/main/tests/basic.test.tsx#L21) and analyze the first\r\ntest case - 'creates a store hook and api object'.\r\n- Create a folder named tests at the root of your project.\r\n- Create a file named `basic.test.ts`\r\n- Copy and paste the test case - \"creates a store hook and api object\" into your `basic.test.ts`\r\n\r\n[L: Write create API]\r\n[L: Execute test]",
    "code": "var Component=(()=>{var u=Object.create;var o=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var b=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),y=(n,e)=>{for(var i in e)o(n,i,{get:e[i],enumerable:!0})},c=(n,e,i,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of m(e))!f.call(n,r)&&r!==i&&o(n,r,{get:()=>e[r],enumerable:!(s=p(e,r))||s.enumerable});return n};var v=(n,e,i)=>(i=n!=null?u(g(n)):{},c(e||!n||!n.__esModule?o(i,\"default\",{value:n,enumerable:!0}):i,n)),j=n=>c(o({},\"__esModule\",{value:!0}),n);var h=b((x,l)=>{l.exports=_jsx_runtime});var k={};y(k,{default:()=>d,frontmatter:()=>w});var t=v(h()),w=void 0;function a(n){let e={a:\"a\",blockquote:\"blockquote\",code:\"code\",h1:\"h1\",h2:\"h2\",li:\"li\",ol:\"ol\",p:\"p\",ul:\"ul\",...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:\"[Build Zustand from Scratch]\"}),`\n`,(0,t.jsx)(e.p,{children:\"In this course, we build Zustand from scratch using TDD approach.\"}),`\n`,(0,t.jsx)(e.p,{children:\"We gradually add the necessary tooling required in this project.\"}),`\n`,(0,t.jsx)(e.p,{children:\"The approach:\"}),`\n`,(0,t.jsxs)(e.ol,{children:[`\n`,(0,t.jsx)(e.li,{children:\"Set up a Node project with TypeScript.\"}),`\n`]}),`\n`,(0,t.jsx)(e.p,{children:`[C: Project Setup]\\r\n[L: Create a Node project with TypeScript]`}),`\n`,(0,t.jsx)(e.h1,{id:\"challenge\",children:\"Challenge\"}),`\n`,(0,t.jsx)(e.p,{children:\"In this challenge, you will have to complete the below tasks:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"Create a Node Project with TypeScript\"}),`\n`,(0,t.jsxs)(e.li,{children:[\"Make sure your tsconfig.json matches that of \",(0,t.jsx)(e.a,{href:\"https://github.com/pmndrs/zustand/blob/v4.5.5/tsconfig.json\",children:\"Zustand's\"}),\" (v4.5.5)\"]}),`\n`]}),`\n`,(0,t.jsx)(e.h2,{id:\"resources\",children:\"Resources:\"}),`\n`,(0,t.jsxs)(e.ol,{children:[`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://khalilstemmler.com/blogs/typescript/node-starter-project/\",children:\"https://khalilstemmler.com/blogs/typescript/node-starter-project/\"})}),`\n`]}),`\n`,(0,t.jsx)(e.h1,{id:\"solution\",children:\"Solution\"}),`\n`,(0,t.jsx)(e.p,{children:\"[L: Configure vitest]\"}),`\n`,(0,t.jsx)(e.h1,{id:\"challenge-1\",children:\"Challenge\"}),`\n`,(0,t.jsx)(e.p,{children:\"In this challenge, you will have to complete the below tasks:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"Study the \",(0,t.jsx)(e.a,{href:\"https://github.com/pmndrs/zustand/blob/main/vitest.config.ts\",children:\"vitest.config.ts in Zustand\"}),\".\"]}),`\n`,(0,t.jsxs)(e.li,{children:[\"Read the Vitest's \",(0,t.jsx)(e.a,{href:\"https://vitest.dev/guide/\",children:\"Getting Started Guide\"}),\".\"]}),`\n`,(0,t.jsx)(e.li,{children:\"Configure Vitest in your project.\"}),`\n`,(0,t.jsxs)(e.li,{children:[\"Update your project's vitest.config.ts to match with \",(0,t.jsx)(e.a,{href:\"https://github.com/pmndrs/zustand/blob/main/vitest.config.ts\",children:\"Zustand's vitest.config.ts\"})]}),`\n`]}),`\n`,(0,t.jsxs)(e.blockquote,{children:[`\n`,(0,t.jsx)(e.p,{children:`If you copy over Zustand's vitest.config.ts into your project, please make sure you read the options you pasted so you understand\\r\nyour configuration.`}),`\n`]}),`\n`,(0,t.jsx)(e.h1,{id:\"resources-1\",children:\"Resources:\"}),`\n`,(0,t.jsxs)(e.ol,{children:[`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://vitest.dev/guide/\",children:\"https://vitest.dev/guide/\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://github.com/pmndrs/zustand/blob/main/vitest.config.ts\",children:\"https://github.com/pmndrs/zustand/blob/main/vitest.config.ts\"})}),`\n`]}),`\n`,(0,t.jsx)(e.h1,{id:\"solution-1\",children:\"Solution\"}),`\n`,(0,t.jsx)(e.p,{children:`[C: Create a store hook and api object]\\r\n[L: Write test]`}),`\n`,(0,t.jsx)(e.h1,{id:\"challenge-2\",children:\"Challenge\"}),`\n`,(0,t.jsx)(e.p,{children:\"Now that you have setup your project locally and configured vitest, it is time you write tests first.\"}),`\n`,(0,t.jsx)(e.p,{children:`We are taking a TDD approach to build the zustand from scratch, we aim to cover the core functionalities so that you\\r\nunderstand how Zustand's internals work.`}),`\n`,(0,t.jsx)(e.p,{children:\"In this challenge, you will have to complete the below tasks:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[\"Head over to \",(0,t.jsx)(e.a,{href:\"https://github.com/pmndrs/zustand/blob/main/tests/basic.test.tsx#L21\",children:\"basic.test.tsx\"}),` and analyze the first\\r\ntest case - 'creates a store hook and api object'.`]}),`\n`,(0,t.jsx)(e.li,{children:\"Create a folder named tests at the root of your project.\"}),`\n`,(0,t.jsxs)(e.li,{children:[\"Create a file named \",(0,t.jsx)(e.code,{children:\"basic.test.ts\"})]}),`\n`,(0,t.jsxs)(e.li,{children:['Copy and paste the test case - \"creates a store hook and api object\" into your ',(0,t.jsx)(e.code,{children:\"basic.test.ts\"})]}),`\n`]}),`\n`,(0,t.jsx)(e.p,{children:`[L: Write create API]\\r\n[L: Execute test]`})]})}function d(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(a,{...n})}):a(n)}return j(k);})();\n;return Component;"
  },
  "_id": "guide/build-from-scratch/build-zustand-from-scratch/introduction.mdx",
  "_raw": {
    "sourceFilePath": "guide/build-from-scratch/build-zustand-from-scratch/introduction.mdx",
    "sourceFileName": "introduction.mdx",
    "sourceFileDir": "guide/build-from-scratch/build-zustand-from-scratch",
    "contentType": "mdx",
    "flattenedPath": "guide/build-from-scratch/build-zustand-from-scratch/introduction"
  },
  "type": "Doc",
  "slug": "/guide/build-from-scratch/build-zustand-from-scratch/introduction",
  "slugAsParams": "build-from-scratch/build-zustand-from-scratch/introduction"
}