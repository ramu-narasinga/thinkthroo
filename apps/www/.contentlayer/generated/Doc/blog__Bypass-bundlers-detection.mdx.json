{
  "title": "Bypass bundlers detection of the require statement\r",
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\r\nIn this article, we analyse how React source code bypasses bundlers’ detection of require statement.\r\n\r\n![](https://miro.medium.com/v2/resize:fit:875/1*Y9c7pS_8c12d5xp3fIRnCg.png)\r\n\r\nBy concatenating the string “require” with a random number (Math.random()), the code generates a string that looks like “require”, but is not directly recognizable by the bundler during static analysis. The string is then sliced to get the first 7 characters, ensuring that the result is always “require” (since “require” + Math.random() will result in something like “require0.123456”, which is sliced to “require”).\r\n\r\nAll this trouble to invoke a MacroTask called setImmediate that is available in Node environment.\r\n\r\n# **setImmediate**\r\n\r\nWhen you want to execute some piece of code asynchronously,  \r\nbut as soon as possible, one option is to use the setImmediate() function provided by Node.js:\r\n\r\n```plaintext\r\nsetImmediate(() => {\r\n // run something\r\n});\r\n```\r\n\r\nAny function passed as the setImmediate() argument is a callback that’s executed in the next iteration of the event loop.\r\n\r\nRead more about setImmediate at [Nodejs Docs](https://nodejs.org/en/learn/asynchronous-work/understanding-setimmediate).\r\n\r\n# **Why avoid bundlers detecting require?**\r\n\r\n## **Browser environments don’t need Node.js modules:**\r\n\r\nReact needs to differentiate between the Node.js environment (where setImmediate is used) and the browser environment (where MessageChannel is used). If a bundler detects require, it might automatically include a Node.js polyfill in the browser bundle, which is unnecessary and can bloat the code.\r\n\r\n## **Avoid accidental polyfill inclusion:**\r\n\r\nBundlers, like Webpack, often include polyfills for Node.js APIs when they detect require. This is problematic for a lightweight library like React, where such polyfills are unnecessary and may interfere with React’s own logic for handling environments (browser vs. Node.js).\r\n\r\nThis enqueueTask is a fallback method used in [ReactAct.js](https://github.com/facebook/react/blob/5d19e1c8d1a6c0b5cd7532d43b707191eaf105b7/packages/react/src/ReactAct.js)\r\n\r\n![](https://miro.medium.com/v2/resize:fit:875/1*EaUXDJhoXv9cdKs4AVcVOg.png)\r\n\r\n```plaintext\r\n// $FlowFixMe[invalid-computed-prop]\r\nconst nodeRequire = module && module[requireString];\r\n// assuming we're in node, let's try to get node's\r\n// version of setImmediate, bypassing fake timers if any.\r\nenqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\r\n```\r\n\r\n`timers` is a core module in Node.js. It provides a set of timer functions that can be used to schedule code execution at specific intervals or after a delay. These functions are similar to the global timer functions in  \r\nJavaScript (like setTimeout and setInterval), but they are provided as part of the timers module for additional control and precision.\r\n\r\n```plaintext\r\nnodeRequire.call(module, 'timers')\r\n```\r\n\r\n# **About me:**\r\n\r\nHey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\r\n\r\nI am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com\r\n\r\nMy Github — [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\r\n\r\nMy website — [https://ramunarasinga.com](https://ramunarasinga.com/)\r\n\r\nMy Youtube channel — [https://www.youtube.com/@thinkthroo](https://www.youtube.com/@thinkthroo)\r\n\r\nLearning platform — [https://thinkthroo.com](https://thinkthroo.com/)\r\n\r\nCodebase Architecture — [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\r\n\r\nBest practices — [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\r\n\r\nProduction-grade projects — [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\r\n\r\n# **References:**\r\n\r\n1. [https://github.com/facebook/react/blob/5d19e1c8d1a6c0b5cd7532d43b707191eaf105b7/packages/shared/enqueueTask.js#L23](https://github.com/facebook/react/blob/5d19e1c8d1a6c0b5cd7532d43b707191eaf105b7/packages/shared/enqueueTask.js#L23)\r\n    \r\n2. [https://nodejs.org/en/learn/asynchronous-work/understanding-setimmediate](https://nodejs.org/en/learn/asynchronous-work/understanding-setimmediate)\r\n    \r\n3. [https://nodejs.org/api/timers.html#setimmediatecallback-args](https://nodejs.org/api/timers.html#setimmediatecallback-args)\r\n    \r\n\r\n[  \r\n](https://medium.com/tag/javascript?source=post_page-----61e9b23ed3a4--------------------------------)\r\n",
    "code": "var Component=(()=>{var p=Object.create;var r=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var f=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),y=(t,e)=>{for(var a in e)r(t,a,{get:e[a],enumerable:!0})},c=(t,e,a,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of u(e))!b.call(t,i)&&i!==a&&r(t,i,{get:()=>e[i],enumerable:!(s=m(e,i))||s.enumerable});return t};var k=(t,e,a)=>(a=t!=null?p(g(t)):{},c(e||!t||!t.__esModule?r(a,\"default\",{value:t,enumerable:!0}):a,t)),w=t=>c(r({},\"__esModule\",{value:!0}),t);var o=f((q,d)=>{d.exports=_jsx_runtime});var j={};y(j,{default:()=>h,frontmatter:()=>v});var n=k(o()),v={title:\"Bypass bundlers detection of the require statement\"};function l(t){let e={a:\"a\",br:\"br\",code:\"code\",div:\"div\",h1:\"h1\",h2:\"h2\",img:\"img\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"In this article, we analyse how React source code bypasses bundlers\\u2019 detection of require statement.\"}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://miro.medium.com/v2/resize:fit:875/1*Y9c7pS_8c12d5xp3fIRnCg.png\",alt:\"\"})}),`\n`,(0,n.jsx)(e.p,{children:\"By concatenating the string \\u201Crequire\\u201D with a random number (Math.random()), the code generates a string that looks like \\u201Crequire\\u201D, but is not directly recognizable by the bundler during static analysis. The string is then sliced to get the first 7 characters, ensuring that the result is always \\u201Crequire\\u201D (since \\u201Crequire\\u201D + Math.random() will result in something like \\u201Crequire0.123456\\u201D, which is sliced to \\u201Crequire\\u201D).\"}),`\n`,(0,n.jsx)(e.p,{children:\"All this trouble to invoke a MacroTask called setImmediate that is available in Node environment.\"}),`\n`,(0,n.jsx)(e.h1,{id:\"setimmediate\",children:(0,n.jsx)(e.strong,{children:\"setImmediate\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"When you want to execute some piece of code asynchronously,\",(0,n.jsx)(e.br,{}),`\n`,\"but as soon as possible, one option is to use the setImmediate() function provided by Node.js:\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"setImmediate(() => {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" // run something\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"});\"})})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"Any function passed as the setImmediate() argument is a callback that\\u2019s executed in the next iteration of the event loop.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Read more about setImmediate at \",(0,n.jsx)(e.a,{href:\"https://nodejs.org/en/learn/asynchronous-work/understanding-setimmediate\",children:\"Nodejs Docs\"}),\".\"]}),`\n`,(0,n.jsx)(e.h1,{id:\"why-avoid-bundlers-detecting-require\",children:(0,n.jsx)(e.strong,{children:\"Why avoid bundlers detecting require?\"})}),`\n`,(0,n.jsx)(e.h2,{id:\"browser-environments-dont-need-nodejs-modules\",children:(0,n.jsx)(e.strong,{children:\"Browser environments don\\u2019t need Node.js modules:\"})}),`\n`,(0,n.jsx)(e.p,{children:\"React needs to differentiate between the Node.js environment (where setImmediate is used) and the browser environment (where MessageChannel is used). If a bundler detects require, it might automatically include a Node.js polyfill in the browser bundle, which is unnecessary and can bloat the code.\"}),`\n`,(0,n.jsx)(e.h2,{id:\"avoid-accidental-polyfill-inclusion\",children:(0,n.jsx)(e.strong,{children:\"Avoid accidental polyfill inclusion:\"})}),`\n`,(0,n.jsx)(e.p,{children:\"Bundlers, like Webpack, often include polyfills for Node.js APIs when they detect require. This is problematic for a lightweight library like React, where such polyfills are unnecessary and may interfere with React\\u2019s own logic for handling environments (browser vs. Node.js).\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"This enqueueTask is a fallback method used in \",(0,n.jsx)(e.a,{href:\"https://github.com/facebook/react/blob/5d19e1c8d1a6c0b5cd7532d43b707191eaf105b7/packages/react/src/ReactAct.js\",children:\"ReactAct.js\"})]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://miro.medium.com/v2/resize:fit:875/1*EaUXDJhoXv9cdKs4AVcVOg.png\",alt:\"\"})}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"// $FlowFixMe[invalid-computed-prop]\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"const nodeRequire = module && module[requireString];\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"// assuming we're in node, let's try to get node's\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"// version of setImmediate, bypassing fake timers if any.\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:\"timers\"}),\" is a core module in Node.js. It provides a set of timer functions that can be used to schedule code execution at specific intervals or after a delay. These functions are similar to the global timer functions in\",(0,n.jsx)(e.br,{}),`\n`,\"JavaScript (like setTimeout and setInterval), but they are provided as part of the timers module for additional control and precision.\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"nodeRequire.call(module, 'timers')\"})})})})}),`\n`,(0,n.jsx)(e.h1,{id:\"about-me\",children:(0,n.jsx)(e.strong,{children:\"About me:\"})}),`\n`,(0,n.jsx)(e.p,{children:\"Hey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"I am open to work on interesting projects. Send me an email at \",(0,n.jsx)(e.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:\"ramu.narasinga@gmail.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Github \\u2014 \",(0,n.jsx)(e.a,{href:\"https://github.com/ramu-narasinga\",children:\"https://github.com/ramu-narasinga\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My website \\u2014 \",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:\"https://ramunarasinga.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Youtube channel \\u2014 \",(0,n.jsx)(e.a,{href:\"https://www.youtube.com/@thinkthroo\",children:\"https://www.youtube.com/@thinkthroo\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Learning platform \\u2014 \",(0,n.jsx)(e.a,{href:\"https://thinkthroo.com/\",children:\"https://thinkthroo.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Codebase Architecture \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/architecture\",children:\"https://app.thinkthroo.com/architecture\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Best practices \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/best-practices\",children:\"https://app.thinkthroo.com/best-practices\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Production-grade projects \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:\"https://app.thinkthroo.com/production-grade-projects\"})]}),`\n`,(0,n.jsx)(e.h1,{id:\"references\",children:(0,n.jsx)(e.strong,{children:\"References:\"})}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/facebook/react/blob/5d19e1c8d1a6c0b5cd7532d43b707191eaf105b7/packages/shared/enqueueTask.js#L23\",children:\"https://github.com/facebook/react/blob/5d19e1c8d1a6c0b5cd7532d43b707191eaf105b7/packages/shared/enqueueTask.js#L23\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://nodejs.org/en/learn/asynchronous-work/understanding-setimmediate\",children:\"https://nodejs.org/en/learn/asynchronous-work/understanding-setimmediate\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://nodejs.org/api/timers.html#setimmediatecallback-args\",children:\"https://nodejs.org/api/timers.html#setimmediatecallback-args\"})}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsxs)(e.a,{href:\"https://medium.com/tag/javascript?source=post_page-----61e9b23ed3a4--------------------------------\",children:[(0,n.jsx)(e.br,{}),`\n`]})})]})}function h(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(l,{...t})}):l(t)}return w(j);})();\n;return Component;"
  },
  "_id": "blog/Bypass-bundlers-detection.mdx",
  "_raw": {
    "sourceFilePath": "blog/Bypass-bundlers-detection.mdx",
    "sourceFileName": "Bypass-bundlers-detection.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/Bypass-bundlers-detection"
  },
  "type": "Doc",
  "slug": "/blog/Bypass-bundlers-detection",
  "slugAsParams": "Bypass-bundlers-detection"
}