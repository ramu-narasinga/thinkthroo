{
  "title": "TypeDoc usage in @vercel/edge\r",
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\r\nIn this article, we analyze TypeDoc usage in [@vercel/edge package](https://github.com/vercel/vercel/blob/main/packages/edge/typedoc.json).\r\n\r\nI found a file named [typedoc.json](https://github.com/vercel/vercel/blob/main/packages/edge/typedoc.json), got me wondering what’s TypeDoc and a quick google search helped me find [TypeDoc website](https://typedoc.org/).\r\n\r\nSo what’s TypeDoc?\r\n\r\n![](https://miro.medium.com/v2/resize:fit:875/1*9TCfInBedXkB8zIZez1yVw.png)\r\n\r\n# **TypeDoc**\r\n\r\nTypeDoc converts comments in TypeScript source code into rendered HTML documentation or a JSON model. It is extensible and supports a variety of configurations. Available as a CLI or Node module.\r\n\r\nTypeDoc documentation is comprehensive. Let’s now focus on how this is used in [@vercel/edge](https://github.com/vercel/vercel/blob/main/packages/edge/typedoc.json).\r\n\r\n## **typedoc.json configuration in @vercel/edge:**\r\n\r\nThe below code is picked from [packages/edge/typedoc.json](https://github.com/vercel/vercel/blob/main/packages/edge/typedoc.json).\r\n\r\n```plaintext\r\n{\r\n \"$schema\": \"https://typedoc.org/schema.json\",\r\n \"entryPoints\": [\"src/index.ts\"],\r\n \"plugin\": [\"typedoc-plugin-markdown\", \"typedoc-plugin-mdn-links\"],\r\n \"out\": \"docs\",\r\n \"githubPages\": false,\r\n \"gitRevision\": \"main\",\r\n \"readme\": \"none\",\r\n \"hideBreadcrumbs\": true\r\n}\r\n```\r\n\r\nYou require this configuration when you are using CLI to run [TypeDoc](https://typedoc.org/guides/installation/#typedoc.json).\r\n\r\nPay attention to “out” value, it is “docs”, it is a good thing that we have already docs generated for @vercel/edge package\r\n\r\n# **ModifiedRequest interface:**\r\n\r\nLet’s pick ModifiedRequest interface found in [middleware-helpers.ts](https://github.com/vercel/vercel/blob/main/packages/edge/src/middleware-helpers.ts#L1)\r\n\r\n```plaintext\r\nexport interface ModifiedRequest {\r\n /**\r\n * If set, overwrites the incoming headers to the origin request.\r\n *\r\n * This is useful when you want to pass data between a Middleware and a\r\n * Serverless or Edge Function.\r\n *\r\n * @example\r\n * <caption>Add a `x-user-id` header and remove the `Authorization` header</caption>\r\n *\r\n * ```ts\r\n * import { rewrite } from '@vercel/edge';\r\n * export default async function middleware(request: Request): Promise<Response> {\r\n * const newHeaders = new Headers(request.headers);\r\n * newHeaders.set('x-user-id', 'user_123');\r\n * newHeaders.delete('authorization');\r\n * return rewrite(request.url, {\r\n * request: { headers: newHeaders }\r\n * })\r\n * }\r\n * ```\r\n */\r\n headers?: Headers;\r\n}\r\n```\r\n\r\nThis interface has a comment added that is picked by TypeDoc and is made available in docs at [edge/docs/interfaces/ModifiedRequest.md](https://github.com/vercel/vercel/blob/main/packages/edge/docs/interfaces/ModifiedRequest.md)\r\n\r\nBut what’s the command this package uses to initiate documentation generation? It can be found in [package.json](https://github.com/vercel/vercel/blob/main/packages/edge/package.json#L19)\r\n\r\n```plaintext\r\n\"build:docs\": \"typedoc && node scripts/fix-links.js && prettier - write docs/**/*.md docs/*.md\",\r\n```\r\n\r\nYou can see `prettier` is applied on the docs folder.\r\n\r\n# **About me:**\r\n\r\nHey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\r\n\r\nI am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com\r\n\r\nMy Github — [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\r\n\r\nMy website — [https://ramunarasinga.com](https://ramunarasinga.com/)\r\n\r\nMy Youtube channel — [https://www.youtube.com/@thinkthroo](https://www.youtube.com/@thinkthroo)\r\n\r\nLearning platform — [https://thinkthroo.com](https://thinkthroo.com/)\r\n\r\nCodebase Architecture — [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\r\n\r\nBest practices — [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\r\n\r\nProduction-grade projects — [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\r\n\r\n# **References:**\r\n\r\n1. [https://github.com/vercel/vercel/blob/main/packages/edge/typedoc.jso](https://github.com/vercel/vercel/blob/main/packages/edge/typedoc.json)\r\n    \r\n2. [https://github.com/TypeStrong/typedoc](https://github.com/TypeStrong/typedoc)\r\n    \r\n3. [https://typedoc.org/](https://typedoc.org/)\r\n    \r\n4. [https://github.com/vercel/vercel/blob/main/packages/edge/docs](https://github.com/vercel/vercel/blob/main/packages/edge/docs)\r\n    \r\n5. [https://github.com/vercel/vercel/blob/main/packages/edge/docs/interfaces/ModifiedRequest.md](https://github.com/vercel/vercel/blob/main/packages/edge/docs/interfaces/ModifiedRequest.md)\r\n    \r\n6. [https://github.com/vercel/vercel/blob/main/packages/edge/src/middleware-helpers.ts#L1](https://github.com/vercel/vercel/blob/main/packages/edge/src/middleware-helpers.ts#L1)\r\n",
    "code": "var Component=(()=>{var p=Object.create;var r=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var b=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),y=(a,e)=>{for(var i in e)r(a,i,{get:e[i],enumerable:!0})},s=(a,e,i,t)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let c of g(e))!f.call(a,c)&&c!==i&&r(a,c,{get:()=>e[c],enumerable:!(t=m(e,c))||t.enumerable});return a};var v=(a,e,i)=>(i=a!=null?p(u(a)):{},s(e||!a||!a.__esModule?r(i,\"default\",{value:a,enumerable:!0}):i,a)),k=a=>s(r({},\"__esModule\",{value:!0}),a);var l=b((x,d)=>{d.exports=_jsx_runtime});var N={};y(N,{default:()=>o,frontmatter:()=>w});var n=v(l()),w={title:\"TypeDoc usage in @vercel/edge\"};function h(a){let e={a:\"a\",code:\"code\",div:\"div\",h1:\"h1\",h2:\"h2\",img:\"img\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"In this article, we analyze TypeDoc usage in \",(0,n.jsx)(e.a,{href:\"https://github.com/vercel/vercel/blob/main/packages/edge/typedoc.json\",children:\"@vercel/edge package\"}),\".\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"I found a file named \",(0,n.jsx)(e.a,{href:\"https://github.com/vercel/vercel/blob/main/packages/edge/typedoc.json\",children:\"typedoc.json\"}),\", got me wondering what\\u2019s TypeDoc and a quick google search helped me find \",(0,n.jsx)(e.a,{href:\"https://typedoc.org/\",children:\"TypeDoc website\"}),\".\"]}),`\n`,(0,n.jsx)(e.p,{children:\"So what\\u2019s TypeDoc?\"}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://miro.medium.com/v2/resize:fit:875/1*9TCfInBedXkB8zIZez1yVw.png\",alt:\"\"})}),`\n`,(0,n.jsx)(e.h1,{id:\"typedoc\",children:(0,n.jsx)(e.strong,{children:\"TypeDoc\"})}),`\n`,(0,n.jsx)(e.p,{children:\"TypeDoc converts comments in TypeScript source code into rendered HTML documentation or a JSON model. It is extensible and supports a variety of configurations. Available as a CLI or Node module.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"TypeDoc documentation is comprehensive. Let\\u2019s now focus on how this is used in \",(0,n.jsx)(e.a,{href:\"https://github.com/vercel/vercel/blob/main/packages/edge/typedoc.json\",children:\"@vercel/edge\"}),\".\"]}),`\n`,(0,n.jsx)(e.h2,{id:\"typedocjson-configuration-in-verceledge\",children:(0,n.jsx)(e.strong,{children:\"typedoc.json configuration in @vercel/edge:\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"The below code is picked from \",(0,n.jsx)(e.a,{href:\"https://github.com/vercel/vercel/blob/main/packages/edge/typedoc.json\",children:\"packages/edge/typedoc.json\"}),\".\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"{\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"$schema\": \"https://typedoc.org/schema.json\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"entryPoints\": [\"src/index.ts\"],'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"plugin\": [\"typedoc-plugin-markdown\", \"typedoc-plugin-mdn-links\"],'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"out\": \"docs\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"githubPages\": false,'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"gitRevision\": \"main\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"readme\": \"none\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"hideBreadcrumbs\": true'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"You require this configuration when you are using CLI to run \",(0,n.jsx)(e.a,{href:\"https://typedoc.org/guides/installation/#typedoc.json\",children:\"TypeDoc\"}),\".\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Pay attention to \\u201Cout\\u201D value, it is \\u201Cdocs\\u201D, it is a good thing that we have already docs generated for @vercel/edge package\"}),`\n`,(0,n.jsx)(e.h1,{id:\"modifiedrequest-interface\",children:(0,n.jsx)(e.strong,{children:\"ModifiedRequest interface:\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Let\\u2019s pick ModifiedRequest interface found in \",(0,n.jsx)(e.a,{href:\"https://github.com/vercel/vercel/blob/main/packages/edge/src/middleware-helpers.ts#L1\",children:\"middleware-helpers.ts\"})]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"export interface ModifiedRequest {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" /**\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * If set, overwrites the incoming headers to the origin request.\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" *\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * This is useful when you want to pass data between a Middleware and a\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * Serverless or Edge Function.\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" *\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * @example\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * <caption>Add a `x-user-id` header and remove the `Authorization` header</caption>\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" *\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * ```ts\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * import { rewrite } from '@vercel/edge';\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * export default async function middleware(request: Request): Promise<Response> {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * const newHeaders = new Headers(request.headers);\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * newHeaders.set('x-user-id', 'user_123');\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * newHeaders.delete('authorization');\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * return rewrite(request.url, {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * request: { headers: newHeaders }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * })\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * ```\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" */\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" headers?: Headers;\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"This interface has a comment added that is picked by TypeDoc and is made available in docs at \",(0,n.jsx)(e.a,{href:\"https://github.com/vercel/vercel/blob/main/packages/edge/docs/interfaces/ModifiedRequest.md\",children:\"edge/docs/interfaces/ModifiedRequest.md\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"But what\\u2019s the command this package uses to initiate documentation generation? It can be found in \",(0,n.jsx)(e.a,{href:\"https://github.com/vercel/vercel/blob/main/packages/edge/package.json#L19\",children:\"package.json\"})]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'\"build:docs\": \"typedoc && node scripts/fix-links.js && prettier - write docs/**/*.md docs/*.md\",'})})})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"You can see \",(0,n.jsx)(e.code,{children:\"prettier\"}),\" is applied on the docs folder.\"]}),`\n`,(0,n.jsx)(e.h1,{id:\"about-me\",children:(0,n.jsx)(e.strong,{children:\"About me:\"})}),`\n`,(0,n.jsx)(e.p,{children:\"Hey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"I am open to work on interesting projects. Send me an email at \",(0,n.jsx)(e.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:\"ramu.narasinga@gmail.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Github \\u2014 \",(0,n.jsx)(e.a,{href:\"https://github.com/ramu-narasinga\",children:\"https://github.com/ramu-narasinga\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My website \\u2014 \",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:\"https://ramunarasinga.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Youtube channel \\u2014 \",(0,n.jsx)(e.a,{href:\"https://www.youtube.com/@thinkthroo\",children:\"https://www.youtube.com/@thinkthroo\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Learning platform \\u2014 \",(0,n.jsx)(e.a,{href:\"https://thinkthroo.com/\",children:\"https://thinkthroo.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Codebase Architecture \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/architecture\",children:\"https://app.thinkthroo.com/architecture\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Best practices \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/best-practices\",children:\"https://app.thinkthroo.com/best-practices\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Production-grade projects \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:\"https://app.thinkthroo.com/production-grade-projects\"})]}),`\n`,(0,n.jsx)(e.h1,{id:\"references\",children:(0,n.jsx)(e.strong,{children:\"References:\"})}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/vercel/vercel/blob/main/packages/edge/typedoc.json\",children:\"https://github.com/vercel/vercel/blob/main/packages/edge/typedoc.jso\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/TypeStrong/typedoc\",children:\"https://github.com/TypeStrong/typedoc\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://typedoc.org/\",children:\"https://typedoc.org/\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/vercel/vercel/blob/main/packages/edge/docs\",children:\"https://github.com/vercel/vercel/blob/main/packages/edge/docs\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/vercel/vercel/blob/main/packages/edge/docs/interfaces/ModifiedRequest.md\",children:\"https://github.com/vercel/vercel/blob/main/packages/edge/docs/interfaces/ModifiedRequest.md\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/vercel/vercel/blob/main/packages/edge/src/middleware-helpers.ts#L1\",children:\"https://github.com/vercel/vercel/blob/main/packages/edge/src/middleware-helpers.ts#L1\"})}),`\n`]}),`\n`]})]})}function o(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(h,{...a})}):h(a)}return k(N);})();\n;return Component;"
  },
  "_id": "blog/TypeDoc-usage-in-vercel-edge.mdx",
  "_raw": {
    "sourceFilePath": "blog/TypeDoc-usage-in-vercel-edge.mdx",
    "sourceFileName": "TypeDoc-usage-in-vercel-edge.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/TypeDoc-usage-in-vercel-edge"
  },
  "type": "Doc",
  "slug": "/blog/TypeDoc-usage-in-vercel-edge",
  "slugAsParams": "TypeDoc-usage-in-vercel-edge"
}