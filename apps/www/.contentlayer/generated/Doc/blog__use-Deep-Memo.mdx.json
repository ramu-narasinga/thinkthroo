{
<<<<<<< HEAD
  "title": "useDeepMemo() in Refine source code.\r",
=======
  "title": "useDeepMemo() in Refine source code.",
>>>>>>> 442b740f3cf43317109944c6cf4b7ca543a8cddf
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
<<<<<<< HEAD
    "raw": "\r\nIn this article, we will review a function named [useDeepMemo found in Refine source code](https://github.com/refinedev/refine/blob/6729794dada71ad34402c8e66303e821193af0d9/packages/core/src/components/containers/refine/index.tsx#L73).\r\n\r\n```plaintext\r\nconst queryClient = useDeepMemo(() => {\r\n    if (reactQueryWithDefaults.clientConfig instanceof QueryClient) {\r\n      return reactQueryWithDefaults.clientConfig;\r\n    }\r\n\r\n    return new QueryClient({\r\n      ...reactQueryWithDefaults.clientConfig,\r\n      defaultOptions: {\r\n        ...reactQueryWithDefaults.clientConfig.defaultOptions,\r\n        queries: {\r\n          refetchOnWindowFocus: false,\r\n          keepPreviousData: true,\r\n          ...reactQueryWithDefaults.clientConfig.defaultOptions?.queries,\r\n        },\r\n      },\r\n    });\r\n  }, [reactQueryWithDefaults.clientConfig]);\r\n```\r\n\r\nThis code snippet is picked from [packages/core/src/components/containers/refine/index.tsx](https://github.com/refinedev/refine/blob/6729794dada71ad34402c8e66303e821193af0d9/packages/core/src/components/containers/refine/index.tsx#L73C3-L89C45).\r\n\r\nWhere is useDeepMemo imported from?\r\n\r\n![](https://cdn-images-1.medium.com/max/1000/1*A4fLD0qibQDLJjp2Tp_H4w.png)\r\n\r\nas you can see from the above image, useDeepMemo is imported from [@hooks/deepMemo](https://github.com/refinedev/refine/blob/main/packages/core/src/hooks/deepMemo/index.tsx#L8)\r\n\r\n### useDeepMemo\r\n\r\nThis below code is picked from [packages/core/src/hooks/deepMemo/index.tsx](https://github.com/refinedev/refine/blob/main/packages/core/src/hooks/deepMemo/index.tsx#L8).\r\n\r\n```plaintext\r\nimport React, { useMemo } from \"react\";\r\nimport { useMemoized } from \"@hooks/memoized\";\r\n\r\n/**\r\n * Hook that memoizes the given dependency array and checks the consecutive calls with deep equality and returns the same value as the first call if dependencies are not changed.\r\n * @internal\r\n */\r\nexport const useDeepMemo = <T,>(\r\n  fn: () => T,\r\n  dependencies: React.DependencyList,\r\n): T => {\r\n  const memoizedDependencies = useMemoized(dependencies);\r\n\r\n  const value = useMemo(fn, memoizedDependencies);\r\n\r\n  return value;\r\n};\r\n```\r\n\r\n@internal in the comment here means that this is only internal use and is not exposed in the public API and has a comment explaining what this hook is about:\r\n\r\n> Hook that memoizes the given dependency array and checks the consecutive calls with deep equality and returns the same value as the first call if dependencies are not changed.\r\n\r\nGoing back to code snippet above, there is only dependency here\r\n\r\n```plaintext\r\n[reactQueryWithDefaults.clientConfig]\r\n```\r\n\r\nAnd the function defined returns a query client.\r\n\r\n```plaintext\r\nreturn new QueryClient({\r\n      ...reactQueryWithDefaults.clientConfig,\r\n      defaultOptions: {\r\n        ...reactQueryWithDefaults.clientConfig.defaultOptions,\r\n        queries: {\r\n          refetchOnWindowFocus: false,\r\n          keepPreviousData: true,\r\n          ...reactQueryWithDefaults.clientConfig.defaultOptions?.queries,\r\n        },\r\n      },\r\n    });\r\n```\r\n\r\nNot sure if you have noticed but there is another hook imported, useMemoized.\r\n\r\n```plaintext\r\nimport { useMemoized } from \"@hooks/memoized\";\r\n```\r\n\r\n### useMemoized\r\n\r\nThis above code snippet is imported from [packages/core/src/hooks/memoized/index.tsx](https://github.com/refinedev/refine/blob/main/packages/core/src/hooks/memoized/index.tsx#L8)\r\n\r\n```plaintext\r\nimport { useRef } from \"react\";\r\nimport isEqual from \"lodash/isEqual\";\r\n\r\n/**\r\n * Hook that memoizes the given value with deep equality.\r\n * @internal\r\n */\r\nexport const useMemoized = <T = unknown>(value: T): T => {\r\n  const ref = useRef(value);\r\n\r\n  if (!isEqual(ref.current, value)) {\r\n    ref.current = value;\r\n  }\r\n\r\n  return ref.current;\r\n};\r\n```\r\n\r\nThis is also another internal function and is found to be using isEqual imported from “lodash/isEqual”.\r\n\r\n### About me:\r\n\r\nHey, my name is [Ramu Narasinga](https://ramunarasinga.com). I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\r\n\r\n***I am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com***\r\n\r\nMy Github — [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\r\n\r\nMy website — [https://ramunarasinga.com](https://ramunarasinga.com/)\r\n\r\nMy Youtube channel — [https://www.youtube.com/@thinkthroo](https://www.youtube.com/@thinkthroo)\r\n\r\nLearning platform — [https://thinkthroo.com](https://thinkthroo.com/)\r\n\r\nCodebase Architecture — [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\r\n\r\nBest practices — [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\r\n\r\nProduction-grade projects — [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\r\n\r\n### References:\r\n\r\n1. [https://github.com/refinedev/refine/blob/6729794dada71ad34402c8e66303e821193af0d9/packages/core/src/components/containers/refine/index.tsx#L73](https://github.com/refinedev/refine/blob/6729794dada71ad34402c8e66303e821193af0d9/packages/core/src/components/containers/refine/index.tsx#L73)\r\n    \r\n2. [https://github.com/refinedev/refine/blob/main/packages/core/src/hooks/deepMemo/index.tsx#L8](https://github.com/refinedev/refine/blob/main/packages/core/src/hooks/deepMemo/index.tsx#L8)",
=======
    "raw": "\nIn this article, we will review a function named [useDeepMemo found in Refine source code](https://github.com/refinedev/refine/blob/6729794dada71ad34402c8e66303e821193af0d9/packages/core/src/components/containers/refine/index.tsx#L73).\n\n```plaintext\nconst queryClient = useDeepMemo(() => {\n    if (reactQueryWithDefaults.clientConfig instanceof QueryClient) {\n      return reactQueryWithDefaults.clientConfig;\n    }\n\n    return new QueryClient({\n      ...reactQueryWithDefaults.clientConfig,\n      defaultOptions: {\n        ...reactQueryWithDefaults.clientConfig.defaultOptions,\n        queries: {\n          refetchOnWindowFocus: false,\n          keepPreviousData: true,\n          ...reactQueryWithDefaults.clientConfig.defaultOptions?.queries,\n        },\n      },\n    });\n  }, [reactQueryWithDefaults.clientConfig]);\n```\n\nThis code snippet is picked from [packages/core/src/components/containers/refine/index.tsx](https://github.com/refinedev/refine/blob/6729794dada71ad34402c8e66303e821193af0d9/packages/core/src/components/containers/refine/index.tsx#L73C3-L89C45).\n\nWhere is useDeepMemo imported from?\n\n![](https://cdn-images-1.medium.com/max/1000/1*A4fLD0qibQDLJjp2Tp_H4w.png)\n\nas you can see from the above image, useDeepMemo is imported from [@hooks/deepMemo](https://github.com/refinedev/refine/blob/main/packages/core/src/hooks/deepMemo/index.tsx#L8)\n\n### useDeepMemo\n\nThis below code is picked from [packages/core/src/hooks/deepMemo/index.tsx](https://github.com/refinedev/refine/blob/main/packages/core/src/hooks/deepMemo/index.tsx#L8).\n\n```plaintext\nimport React, { useMemo } from \"react\";\nimport { useMemoized } from \"@hooks/memoized\";\n\n/**\n * Hook that memoizes the given dependency array and checks the consecutive calls with deep equality and returns the same value as the first call if dependencies are not changed.\n * @internal\n */\nexport const useDeepMemo = <T,>(\n  fn: () => T,\n  dependencies: React.DependencyList,\n): T => {\n  const memoizedDependencies = useMemoized(dependencies);\n\n  const value = useMemo(fn, memoizedDependencies);\n\n  return value;\n};\n```\n\n@internal in the comment here means that this is only internal use and is not exposed in the public API and has a comment explaining what this hook is about:\n\n> Hook that memoizes the given dependency array and checks the consecutive calls with deep equality and returns the same value as the first call if dependencies are not changed.\n\nGoing back to code snippet above, there is only dependency here\n\n```plaintext\n[reactQueryWithDefaults.clientConfig]\n```\n\nAnd the function defined returns a query client.\n\n```plaintext\nreturn new QueryClient({\n      ...reactQueryWithDefaults.clientConfig,\n      defaultOptions: {\n        ...reactQueryWithDefaults.clientConfig.defaultOptions,\n        queries: {\n          refetchOnWindowFocus: false,\n          keepPreviousData: true,\n          ...reactQueryWithDefaults.clientConfig.defaultOptions?.queries,\n        },\n      },\n    });\n```\n\nNot sure if you have noticed but there is another hook imported, useMemoized.\n\n```plaintext\nimport { useMemoized } from \"@hooks/memoized\";\n```\n\n### useMemoized\n\nThis above code snippet is imported from [packages/core/src/hooks/memoized/index.tsx](https://github.com/refinedev/refine/blob/main/packages/core/src/hooks/memoized/index.tsx#L8)\n\n```plaintext\nimport { useRef } from \"react\";\nimport isEqual from \"lodash/isEqual\";\n\n/**\n * Hook that memoizes the given value with deep equality.\n * @internal\n */\nexport const useMemoized = <T = unknown>(value: T): T => {\n  const ref = useRef(value);\n\n  if (!isEqual(ref.current, value)) {\n    ref.current = value;\n  }\n\n  return ref.current;\n};\n```\n\nThis is also another internal function and is found to be using isEqual imported from “lodash/isEqual”.\n\n### About me:\n\nHey, my name is [Ramu Narasinga](https://ramunarasinga.com). I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\n\n***I am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com***\n\nMy Github — [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\n\nMy website — [https://ramunarasinga.com](https://ramunarasinga.com/)\n\nMy Youtube channel — [https://www.youtube.com/@thinkthroo](https://www.youtube.com/@thinkthroo)\n\nLearning platform — [https://thinkthroo.com](https://thinkthroo.com/)\n\nCodebase Architecture — [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\n\nBest practices — [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\n\nProduction-grade projects — [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\n\n### References:\n\n1. [https://github.com/refinedev/refine/blob/6729794dada71ad34402c8e66303e821193af0d9/packages/core/src/components/containers/refine/index.tsx#L73](https://github.com/refinedev/refine/blob/6729794dada71ad34402c8e66303e821193af0d9/packages/core/src/components/containers/refine/index.tsx#L73)\n    \n2. [https://github.com/refinedev/refine/blob/main/packages/core/src/hooks/deepMemo/index.tsx#L8](https://github.com/refinedev/refine/blob/main/packages/core/src/hooks/deepMemo/index.tsx#L8)",
>>>>>>> 442b740f3cf43317109944c6cf4b7ca543a8cddf
    "code": "var Component=(()=>{var o=Object.create;var r=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var f=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var N=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),b=(a,e)=>{for(var i in e)r(a,i,{get:e[i],enumerable:!0})},l=(a,e,i,c)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let s of u(e))!g.call(a,s)&&s!==i&&r(a,s,{get:()=>e[s],enumerable:!(c=m(e,s))||c.enumerable});return a};var x=(a,e,i)=>(i=a!=null?o(f(a)):{},l(e||!a||!a.__esModule?r(i,\"default\",{value:a,enumerable:!0}):i,a)),k=a=>l(r({},\"__esModule\",{value:!0}),a);var d=N((D,t)=>{t.exports=_jsx_runtime});var v={};b(v,{default:()=>p,frontmatter:()=>y});var n=x(d()),y={title:\"useDeepMemo() in Refine source\\xA0code.\"};function h(a){let e={a:\"a\",blockquote:\"blockquote\",code:\"code\",div:\"div\",em:\"em\",h3:\"h3\",img:\"img\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"In this article, we will review a function named \",(0,n.jsx)(e.a,{href:\"https://github.com/refinedev/refine/blob/6729794dada71ad34402c8e66303e821193af0d9/packages/core/src/components/containers/refine/index.tsx#L73\",children:\"useDeepMemo found in Refine source code\"}),\".\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"const queryClient = useDeepMemo(() => {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    if (reactQueryWithDefaults.clientConfig instanceof QueryClient) {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      return reactQueryWithDefaults.clientConfig;\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    return new QueryClient({\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      ...reactQueryWithDefaults.clientConfig,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      defaultOptions: {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"        ...reactQueryWithDefaults.clientConfig.defaultOptions,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"        queries: {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"          refetchOnWindowFocus: false,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"          keepPreviousData: true,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"          ...reactQueryWithDefaults.clientConfig.defaultOptions?.queries,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"        },\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      },\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    });\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  }, [reactQueryWithDefaults.clientConfig]);\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"This code snippet is picked from \",(0,n.jsx)(e.a,{href:\"https://github.com/refinedev/refine/blob/6729794dada71ad34402c8e66303e821193af0d9/packages/core/src/components/containers/refine/index.tsx#L73C3-L89C45\",children:\"packages/core/src/components/containers/refine/index.tsx\"}),\".\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Where is useDeepMemo imported from?\"}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"https://cdn-images-1.medium.com/max/1000/1*A4fLD0qibQDLJjp2Tp_H4w.png\",alt:\"\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"as you can see from the above image, useDeepMemo is imported from \",(0,n.jsx)(e.a,{href:\"https://github.com/refinedev/refine/blob/main/packages/core/src/hooks/deepMemo/index.tsx#L8\",children:\"@hooks/deepMemo\"})]}),`\n`,(0,n.jsx)(e.h3,{id:\"usedeepmemo\",children:\"useDeepMemo\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"This below code is picked from \",(0,n.jsx)(e.a,{href:\"https://github.com/refinedev/refine/blob/main/packages/core/src/hooks/deepMemo/index.tsx#L8\",children:\"packages/core/src/hooks/deepMemo/index.tsx\"}),\".\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'import React, { useMemo } from \"react\";'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'import { useMemoized } from \"@hooks/memoized\";'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"/**\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * Hook that memoizes the given dependency array and checks the consecutive calls with deep equality and returns the same value as the first call if dependencies are not changed.\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * @internal\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" */\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"export const useDeepMemo = <T,>(\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  fn: () => T,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  dependencies: React.DependencyList,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"): T => {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  const memoizedDependencies = useMemoized(dependencies);\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  const value = useMemo(fn, memoizedDependencies);\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  return value;\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"};\"})})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"@internal in the comment here means that this is only internal use and is not exposed in the public API and has a comment explaining what this hook is about:\"}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsx)(e.p,{children:\"Hook that memoizes the given dependency array and checks the consecutive calls with deep equality and returns the same value as the first call if dependencies are not changed.\"}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"Going back to code snippet above, there is only dependency here\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"[reactQueryWithDefaults.clientConfig]\"})})})})}),`\n`,(0,n.jsx)(e.p,{children:\"And the function defined returns a query client.\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"return new QueryClient({\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      ...reactQueryWithDefaults.clientConfig,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      defaultOptions: {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"        ...reactQueryWithDefaults.clientConfig.defaultOptions,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"        queries: {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"          refetchOnWindowFocus: false,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"          keepPreviousData: true,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"          ...reactQueryWithDefaults.clientConfig.defaultOptions?.queries,\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"        },\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"      },\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    });\"})})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"Not sure if you have noticed but there is another hook imported, useMemoized.\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'import { useMemoized } from \"@hooks/memoized\";'})})})})}),`\n`,(0,n.jsx)(e.h3,{id:\"usememoized\",children:\"useMemoized\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"This above code snippet is imported from \",(0,n.jsx)(e.a,{href:\"https://github.com/refinedev/refine/blob/main/packages/core/src/hooks/memoized/index.tsx#L8\",children:\"packages/core/src/hooks/memoized/index.tsx\"})]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'import { useRef } from \"react\";'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'import isEqual from \"lodash/isEqual\";'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"/**\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * Hook that memoizes the given value with deep equality.\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" * @internal\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" */\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"export const useMemoized = <T = unknown>(value: T): T => {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  const ref = useRef(value);\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  if (!isEqual(ref.current, value)) {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"    ref.current = value;\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"  return ref.current;\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"};\"})})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"This is also another internal function and is found to be using isEqual imported from \\u201Clodash/isEqual\\u201D.\"}),`\n`,(0,n.jsx)(e.h3,{id:\"about-me\",children:\"About me:\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Hey, my name is \",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com\",children:\"Ramu Narasinga\"}),\". I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.em,{children:(0,n.jsxs)(e.strong,{children:[\"I am open to work on interesting projects. Send me an email at \",(0,n.jsx)(e.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:\"ramu.narasinga@gmail.com\"})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Github\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://github.com/ramu-narasinga\",children:\"https://github.com/ramu-narasinga\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My website\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:\"https://ramunarasinga.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Youtube channel\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://www.youtube.com/@thinkthroo\",children:\"https://www.youtube.com/@thinkthroo\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Learning platform\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://thinkthroo.com/\",children:\"https://thinkthroo.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Codebase Architecture\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/architecture\",children:\"https://app.thinkthroo.com/architecture\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Best practices\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/best-practices\",children:\"https://app.thinkthroo.com/best-practices\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Production-grade projects\\u200A\\u2014\\u200A\",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:\"https://app.thinkthroo.com/production-grade-projects\"})]}),`\n`,(0,n.jsx)(e.h3,{id:\"references\",children:\"References:\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/refinedev/refine/blob/6729794dada71ad34402c8e66303e821193af0d9/packages/core/src/components/containers/refine/index.tsx#L73\",children:\"https://github.com/refinedev/refine/blob/6729794dada71ad34402c8e66303e821193af0d9/packages/core/src/components/containers/refine/index.tsx#L73\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/refinedev/refine/blob/main/packages/core/src/hooks/deepMemo/index.tsx#L8\",children:\"https://github.com/refinedev/refine/blob/main/packages/core/src/hooks/deepMemo/index.tsx#L8\"})}),`\n`]}),`\n`]})]})}function p(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(h,{...a})}):h(a)}return k(v);})();\n;return Component;"
  },
  "_id": "blog/use-Deep-Memo.mdx",
  "_raw": {
    "sourceFilePath": "blog/use-Deep-Memo.mdx",
    "sourceFileName": "use-Deep-Memo.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/use-Deep-Memo"
  },
  "type": "Doc",
  "slug": "/blog/use-Deep-Memo",
  "slugAsParams": "use-Deep-Memo"
}