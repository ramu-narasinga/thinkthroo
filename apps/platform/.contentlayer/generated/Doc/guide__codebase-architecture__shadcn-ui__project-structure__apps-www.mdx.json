{
  "title": "Shadcn/ui Project Structure\r",
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\r\n[L: apps/www Structure]\r\n\r\nThis workspace structure is different to what you find in CRUD based Next.js app. Shadcn/ui provides \r\nreusable components that you can copy/paste and also install these components via CLI. This is the \r\nworkspace used to build the [Shadcn/ui website](https://ui.shadcn.com/).\r\n\r\nSince this usecase does not involve any database as there is no authentication or to save user information, \r\nShadcn/ui has the below structure in `www` workspace:\r\n\r\nThis apps/www workspace structure as follows:\r\n\r\n```\r\n__registry__           # Files inside this directory are autogenerated by ./scripts/build-registry.ts\r\n|\r\nactions                # Contains edit-in-v0 button that makes API calls using fetch\r\n|\r\napp                    # app folder contains route groups, components, pages, layouts \r\n|\r\nassets/fonts           # assets/fonts contains the fonts used in Shadcn/ui\r\n| \r\ncomponents             # Contains the components that are used across the pages inside the app folder\r\n|\r\nconfig                 # Contains site.ts that has the meta information and docs.ts to configure the docs\r\n|\r\ncontent/docs           # Contains content for the documentation, this gets rendered statically on https://ui.shadcn.com/docs\r\n|\r\nhooks                  # Contains hook files that are used across the app\r\n|\r\nlib                    # lib folder has the helper functions such as charts.ts, toc.ts etc that perform crucial operations\r\n|\r\npages/api              # Contains api that sends a components.json\r\n|\r\npublic                 # Contains static asstes such as images, site.webmanifest, favicon etc.,\r\n|\r\nregistry               # This folder is very important and is used in scripts/build-registry to __registry__ that is used in CLI\r\n|\r\nscripts                # scripts folder has files such as build-registry, capture-registry and fix-import. These are used in scripts in package.json\r\n|\r\nstyles                 # Contains styles such as globals.css and mdx.css \r\n|\r\ntypes                  # Contains types such as nav.ts, uninst.ts\r\n```\r\n\r\nShadcn/ui does not use tRPC or database, it does have pages/api but that sends a components.json via \r\na GET request and is found to be using fetch to make external calls to v0.\r\n",
    "code": "var Component=(()=>{var u=Object.create;var r=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var y=(t,s)=>()=>(s||t((s={exports:{}}).exports,s),s.exports),b=(t,s)=>{for(var e in s)r(t,e,{get:s[e],enumerable:!0})},i=(t,s,e,o)=>{if(s&&typeof s==\"object\"||typeof s==\"function\")for(let a of f(s))!g.call(t,a)&&a!==e&&r(t,a,{get:()=>s[a],enumerable:!(o=l(s,a))||o.enumerable});return t};var w=(t,s,e)=>(e=t!=null?u(m(t)):{},i(s||!t||!t.__esModule?r(e,\"default\",{value:t,enumerable:!0}):e,t)),C=t=>i(r({},\"__esModule\",{value:!0}),t);var d=y((j,c)=>{c.exports=_jsx_runtime});var x={};b(x,{default:()=>p,frontmatter:()=>_});var n=w(d()),_={title:\"Shadcn/ui Project Structure\"};function h(t){let s={a:\"a\",code:\"code\",p:\"p\",pre:\"pre\",...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.p,{children:\"[L: apps/www Structure]\"}),`\n`,(0,n.jsxs)(s.p,{children:[`This workspace structure is different to what you find in CRUD based Next.js app. Shadcn/ui provides\\r\nreusable components that you can copy/paste and also install these components via CLI. This is the\\r\nworkspace used to build the `,(0,n.jsx)(s.a,{href:\"https://ui.shadcn.com/\",children:\"Shadcn/ui website\"}),\".\"]}),`\n`,(0,n.jsxs)(s.p,{children:[`Since this usecase does not involve any database as there is no authentication or to save user information,\\r\nShadcn/ui has the below structure in `,(0,n.jsx)(s.code,{children:\"www\"}),\" workspace:\"]}),`\n`,(0,n.jsx)(s.p,{children:\"This apps/www workspace structure as follows:\"}),`\n`,(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:`__registry__           # Files inside this directory are autogenerated by ./scripts/build-registry.ts\\r\n|\\r\nactions                # Contains edit-in-v0 button that makes API calls using fetch\\r\n|\\r\napp                    # app folder contains route groups, components, pages, layouts \\r\n|\\r\nassets/fonts           # assets/fonts contains the fonts used in Shadcn/ui\\r\n| \\r\ncomponents             # Contains the components that are used across the pages inside the app folder\\r\n|\\r\nconfig                 # Contains site.ts that has the meta information and docs.ts to configure the docs\\r\n|\\r\ncontent/docs           # Contains content for the documentation, this gets rendered statically on https://ui.shadcn.com/docs\\r\n|\\r\nhooks                  # Contains hook files that are used across the app\\r\n|\\r\nlib                    # lib folder has the helper functions such as charts.ts, toc.ts etc that perform crucial operations\\r\n|\\r\npages/api              # Contains api that sends a components.json\\r\n|\\r\npublic                 # Contains static asstes such as images, site.webmanifest, favicon etc.,\\r\n|\\r\nregistry               # This folder is very important and is used in scripts/build-registry to __registry__ that is used in CLI\\r\n|\\r\nscripts                # scripts folder has files such as build-registry, capture-registry and fix-import. These are used in scripts in package.json\\r\n|\\r\nstyles                 # Contains styles such as globals.css and mdx.css \\r\n|\\r\ntypes                  # Contains types such as nav.ts, uninst.ts\n`})}),`\n`,(0,n.jsx)(s.p,{children:`Shadcn/ui does not use tRPC or database, it does have pages/api but that sends a components.json via\\r\na GET request and is found to be using fetch to make external calls to v0.`})]})}function p(t={}){let{wrapper:s}=t.components||{};return s?(0,n.jsx)(s,{...t,children:(0,n.jsx)(h,{...t})}):h(t)}return C(x);})();\n;return Component;"
  },
  "_id": "guide/codebase-architecture/shadcn-ui/project-structure/apps-www.mdx",
  "_raw": {
    "sourceFilePath": "guide/codebase-architecture/shadcn-ui/project-structure/apps-www.mdx",
    "sourceFileName": "apps-www.mdx",
    "sourceFileDir": "guide/codebase-architecture/shadcn-ui/project-structure",
    "contentType": "mdx",
    "flattenedPath": "guide/codebase-architecture/shadcn-ui/project-structure/apps-www"
  },
  "type": "Doc",
  "slug": "/guide/codebase-architecture/shadcn-ui/project-structure/apps-www",
  "slugAsParams": "codebase-architecture/shadcn-ui/project-structure/apps-www"
}