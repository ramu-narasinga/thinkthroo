[
  {
    "published": false,
    "featured": false,
    "component": false,
    "toc": true,
    "body": {
      "raw": "[Architecture: API Layer in LobeChat]\n[C: Introduction]\n\nIn this guide, you will learn the API layer used in [Lobe Chat](https://github.com/lobehub/lobe-chat/tree/main). \n\nðŸ¤¯ Lobe Chat is an open-source, modern-design AI chat framework. Supports \n  Multi AI Providers( OpenAI / Claude 3 / Gemini / Ollama / Azure / DeepSeek), \nKnowledge Base (file upload / knowledge management / RAG ), Multi-Modals (Vision/TTS) and plugin system. \n  One-click FREE deployment of your private ChatGPT/ Claude application. \n\n# What's API Layer?\nIn the context of web applications, API layer means communicating with your server to get/mutate data.\nInspired by [Bulletproof React's API Layer](https://github.com/alan2207/bulletproof-react/blob/master/docs/api-layer.md)\nWe analyze the API Layer in the [Lobechat](https://github.com/lobehub/lobe-chat/tree/main). \n\n# Lobe Chat API Layer\nTo study the API Layer, we pick a page on https://chat-preview.lobehub.com/ and look at the source code except we are\nnarrowing down our expedition to focus on the API Layer.\n\n# Concepts you will learn:\nYou will be learning the API layer used in the Lobe Chat. \nRead through this guide to understand how Lobe Chat's API layer works.\n\n## Data fetched in Discover Home Page\n1. [Discover Home Page]\n(https://github.com/lobehub/lobe-chat/blob/main/src/app/(main)/discover/(list)/(home)/page.tsx)\n2. [DiscoverService](https://github.com/lobehub/lobe-chat/blob/main/src/server/services/discover/index.ts#L27)\n\n## Data fetched in Chat Page\n1. [Session List](https://github.com/lobehub/lobe-chat/blob/main/src/app/(main)/chat/%40session/features/SessionListContent/DefaultMode.tsx#L29)\n2. [useFetchSessions](https://github.com/lobehub/lobe-chat/blob/main/src/store/session/slices/session/action.ts#L200)\n3. [useClientDataSWR](https://github.com/lobehub/lobe-chat/blob/main/src/libs/swr/index.ts#L22C14-L22C30)\n\n# References:\nAPI layer example 1:\n1. https://github.com/lobehub/lobe-chat/blob/main/src/app/(main)/discover/(list)/(home)/page.tsx\n2. https://github.com/lobehub/lobe-chat/blob/main/src/app/(main)/discover/(list)/(home)/Client.tsx\n3. https://github.com/lobehub/lobe-chat/blob/main/src/app/(main)/discover/(list)/(home)/features/AssistantList.tsx\n4. https://github.com/lobehub/lobe-chat/blob/main/src/server/services/discover/index.ts#L28\n5. https://github.com/lobehub/lobe-chat/blob/main/src/server/modules/AssistantStore/index.ts\n\nAPI layer example 2:\n1. https://github.com/lobehub/lobe-chat/blob/main/src/app/(main)/chat/%40session/features/SessionListContent/DefaultMode.tsx\n2. https://github.com/lobehub/lobe-chat/blob/main/src/store/session/slices/session/action.ts#L200\n3. https://github.com/lobehub/lobe-chat/blob/main/src/store/session/slices/session/action.ts#L11",
      "code": "var Component=(()=>{var d=Object.create;var s=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var f=(i,e)=>()=>(e||i((e={exports:{}}).exports,e),e.exports),L=(i,e)=>{for(var n in e)s(i,n,{get:e[n],enumerable:!0})},a=(i,e,n,h)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of m(e))!g.call(i,o)&&o!==n&&s(i,o,{get:()=>e[o],enumerable:!(h=u(e,o))||h.enumerable});return i};var x=(i,e,n)=>(n=i!=null?d(p(i)):{},a(e||!i||!i.__esModule?s(n,\"default\",{value:i,enumerable:!0}):n,i)),v=i=>a(s({},\"__esModule\",{value:!0}),i);var r=f((w,l)=>{l.exports=_jsx_runtime});var A={};L(A,{default:()=>b,frontmatter:()=>y});var t=x(r()),y=void 0;function c(i){let e={a:\"a\",h1:\"h1\",h2:\"h2\",li:\"li\",ol:\"ol\",p:\"p\",...i.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:`[Architecture: API Layer in LobeChat]\n[C: Introduction]`}),`\n`,(0,t.jsxs)(e.p,{children:[\"In this guide, you will learn the API layer used in \",(0,t.jsx)(e.a,{href:\"https://github.com/lobehub/lobe-chat/tree/main\",children:\"Lobe Chat\"}),\".\"]}),`\n`,(0,t.jsx)(e.p,{children:`\\u{1F92F} Lobe Chat is an open-source, modern-design AI chat framework. Supports\nMulti AI Providers( OpenAI / Claude 3 / Gemini / Ollama / Azure / DeepSeek),\nKnowledge Base (file upload / knowledge management / RAG ), Multi-Modals (Vision/TTS) and plugin system.\nOne-click FREE deployment of your private ChatGPT/ Claude application.`}),`\n`,(0,t.jsx)(e.h1,{id:\"whats-api-layer\",children:\"What's API Layer?\"}),`\n`,(0,t.jsxs)(e.p,{children:[`In the context of web applications, API layer means communicating with your server to get/mutate data.\nInspired by `,(0,t.jsx)(e.a,{href:\"https://github.com/alan2207/bulletproof-react/blob/master/docs/api-layer.md\",children:\"Bulletproof React's API Layer\"}),`\nWe analyze the API Layer in the `,(0,t.jsx)(e.a,{href:\"https://github.com/lobehub/lobe-chat/tree/main\",children:\"Lobechat\"}),\".\"]}),`\n`,(0,t.jsx)(e.h1,{id:\"lobe-chat-api-layer\",children:\"Lobe Chat API Layer\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"To study the API Layer, we pick a page on \",(0,t.jsx)(e.a,{href:\"https://chat-preview.lobehub.com/\",children:\"https://chat-preview.lobehub.com/\"}),` and look at the source code except we are\nnarrowing down our expedition to focus on the API Layer.`]}),`\n`,(0,t.jsx)(e.h1,{id:\"concepts-you-will-learn\",children:\"Concepts you will learn:\"}),`\n`,(0,t.jsx)(e.p,{children:`You will be learning the API layer used in the Lobe Chat.\nRead through this guide to understand how Lobe Chat's API layer works.`}),`\n`,(0,t.jsx)(e.h2,{id:\"data-fetched-in-discover-home-page\",children:\"Data fetched in Discover Home Page\"}),`\n`,(0,t.jsxs)(e.ol,{children:[`\n`,(0,t.jsxs)(e.li,{children:[`[Discover Home Page]\n(`,(0,t.jsx)(e.a,{href:\"https://github.com/lobehub/lobe-chat/blob/main/src/app/(main)/discover/(list)/(home)/page.tsx\",children:\"https://github.com/lobehub/lobe-chat/blob/main/src/app/(main)/discover/(list)/(home)/page.tsx\"}),\")\"]}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://github.com/lobehub/lobe-chat/blob/main/src/server/services/discover/index.ts#L27\",children:\"DiscoverService\"})}),`\n`]}),`\n`,(0,t.jsx)(e.h2,{id:\"data-fetched-in-chat-page\",children:\"Data fetched in Chat Page\"}),`\n`,(0,t.jsxs)(e.ol,{children:[`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://github.com/lobehub/lobe-chat/blob/main/src/app/(main)/chat/%40session/features/SessionListContent/DefaultMode.tsx#L29\",children:\"Session List\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://github.com/lobehub/lobe-chat/blob/main/src/store/session/slices/session/action.ts#L200\",children:\"useFetchSessions\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://github.com/lobehub/lobe-chat/blob/main/src/libs/swr/index.ts#L22C14-L22C30\",children:\"useClientDataSWR\"})}),`\n`]}),`\n`,(0,t.jsx)(e.h1,{id:\"references\",children:\"References:\"}),`\n`,(0,t.jsx)(e.p,{children:\"API layer example 1:\"}),`\n`,(0,t.jsxs)(e.ol,{children:[`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://github.com/lobehub/lobe-chat/blob/main/src/app/(main)/discover/(list)/(home)/page.tsx\",children:\"https://github.com/lobehub/lobe-chat/blob/main/src/app/(main)/discover/(list)/(home)/page.tsx\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://github.com/lobehub/lobe-chat/blob/main/src/app/(main)/discover/(list)/(home)/Client.tsx\",children:\"https://github.com/lobehub/lobe-chat/blob/main/src/app/(main)/discover/(list)/(home)/Client.tsx\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://github.com/lobehub/lobe-chat/blob/main/src/app/(main)/discover/(list)/(home)/features/AssistantList.tsx\",children:\"https://github.com/lobehub/lobe-chat/blob/main/src/app/(main)/discover/(list)/(home)/features/AssistantList.tsx\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://github.com/lobehub/lobe-chat/blob/main/src/server/services/discover/index.ts#L28\",children:\"https://github.com/lobehub/lobe-chat/blob/main/src/server/services/discover/index.ts#L28\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://github.com/lobehub/lobe-chat/blob/main/src/server/modules/AssistantStore/index.ts\",children:\"https://github.com/lobehub/lobe-chat/blob/main/src/server/modules/AssistantStore/index.ts\"})}),`\n`]}),`\n`,(0,t.jsx)(e.p,{children:\"API layer example 2:\"}),`\n`,(0,t.jsxs)(e.ol,{children:[`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://github.com/lobehub/lobe-chat/blob/main/src/app/(main)/chat/%40session/features/SessionListContent/DefaultMode.tsx\",children:\"https://github.com/lobehub/lobe-chat/blob/main/src/app/(main)/chat/%40session/features/SessionListContent/DefaultMode.tsx\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://github.com/lobehub/lobe-chat/blob/main/src/store/session/slices/session/action.ts#L200\",children:\"https://github.com/lobehub/lobe-chat/blob/main/src/store/session/slices/session/action.ts#L200\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://github.com/lobehub/lobe-chat/blob/main/src/store/session/slices/session/action.ts#L11\",children:\"https://github.com/lobehub/lobe-chat/blob/main/src/store/session/slices/session/action.ts#L11\"})}),`\n`]})]})}function b(i={}){let{wrapper:e}=i.components||{};return e?(0,t.jsx)(e,{...i,children:(0,t.jsx)(c,{...i})}):c(i)}return v(A);})();\n;return Component;"
    },
    "_id": "course/codebase-architecture/api-layer/lobechat/introduction.mdx",
    "_raw": {
      "sourceFilePath": "course/codebase-architecture/api-layer/lobechat/introduction.mdx",
      "sourceFileName": "introduction.mdx",
      "sourceFileDir": "course/codebase-architecture/api-layer/lobechat",
      "contentType": "mdx",
      "flattenedPath": "course/codebase-architecture/api-layer/lobechat/introduction"
    },
    "type": "Doc",
    "slug": "/course/codebase-architecture/api-layer/lobechat/introduction",
    "slugAsParams": "codebase-architecture/api-layer/lobechat/introduction"
  },
  {
    "title": "Charts Page",
    "description": "Components Structure In Charts Page.",
    "published": false,
    "featured": false,
    "component": false,
    "toc": true,
    "body": {
      "raw": "\nIn this lesson, we are only focusing on the folder structure, \nfile naming conventions used in [Charts page](https://ui.shadcn.com/charts)\n\n## Charts Page\n\nThis Charts Page source code is found at [www/app/(app)/charts/page.tsx](https://github.com/shadcn-ui/ui/blob/main/apps/www/app/(app)/charts/page.tsx).\n\n### Components imported\n\nThe following components are imported in the charts page, found at [www/app/(app)/charts/page.tsx](https://github.com/shadcn-ui/ui/blob/main/apps/www/app/(app)/charts/page.tsx).\n\n```js\nimport { THEMES } from \"@/lib/themes\"\nimport { ChartDisplay } from \"@/components/chart-display\"\nimport { ChartsNav } from \"@/components/charts-nav\"\nimport { ThemesSwitcher } from \"@/components/themes-selector\"\nimport { ThemesStyle } from \"@/components/themes-styles\"\nimport { Separator } from \"@/registry/new-york/ui/separator\"\nimport * as Charts from \"@/app/(app)/charts/charts\"\n```\n\nThere are few observations that can be made here:\n\n- @/components folder:\n\nChartDisplay, ChartsNav, ThemesSwitcher, ThemesStyle are imported from generic [components folder](https://github.com/shadcn-ui/ui/tree/main/apps/www/components) that is at the root level.\n\nYou could place the components such as ChartDisplay, ChartsNav in a folder named components \nthat could be created in `app/(app)/charts` for colocating purposes. \n\n- charts components:\n\n\n\n## Conclusion:\nYou make the best judgement based on what works for you. Across the shadcn-ui/ui, components used in pages are located in\ncomponents folder at the root level so they can be imported using `@/components`.\n\nWe picked the special use cases such as Charts Page, Mail Example page where you will find some components imported from with\nin the route folder.",
      "code": "var Component=(()=>{var d=Object.create;var o=Object.defineProperty;var F=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var f=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),g=(r,e)=>{for(var s in e)o(r,s,{get:e[s],enumerable:!0})},c=(r,e,s,t)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let l of m(e))!u.call(r,l)&&l!==s&&o(r,l,{get:()=>e[l],enumerable:!(t=F(e,l))||t.enumerable});return r};var w=(r,e,s)=>(s=r!=null?d(y(r)):{},c(e||!r||!r.__esModule?o(s,\"default\",{value:r,enumerable:!0}):s,r)),C=r=>c(o({},\"__esModule\",{value:!0}),r);var i=f((N,a)=>{a.exports=_jsx_runtime});var x={};g(x,{default:()=>p,frontmatter:()=>b});var n=w(i()),b={title:\"Charts Page\",description:\"Components Structure In Charts Page.\",toc:!0};function h(r){let e={a:\"a\",code:\"code\",div:\"div\",h2:\"h2\",h3:\"h3\",li:\"li\",p:\"p\",pre:\"pre\",span:\"span\",ul:\"ul\",...r.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[`In this lesson, we are only focusing on the folder structure,\nfile naming conventions used in `,(0,n.jsx)(e.a,{href:\"https://ui.shadcn.com/charts\",children:\"Charts page\"})]}),`\n`,(0,n.jsx)(e.h2,{id:\"charts-page\",children:\"Charts Page\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"This Charts Page source code is found at \",(0,n.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/apps/www/app/(app)/charts/page.tsx\",children:\"www/app/(app)/charts/page.tsx\"}),\".\"]}),`\n`,(0,n.jsx)(e.h3,{id:\"components-imported\",children:\"Components imported\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The following components are imported in the charts page, found at \",(0,n.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/apps/www/app/(app)/charts/page.tsx\",children:\"www/app/(app)/charts/page.tsx\"}),\".\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"js\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"js\",\"data-theme\":\"default\",children:[(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" THEMES \"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/lib/themes\"'})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" ChartDisplay \"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/components/chart-display\"'})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" ChartsNav \"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/components/charts-nav\"'})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" ThemesSwitcher \"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/components/themes-selector\"'})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" ThemesStyle \"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/components/themes-styles\"'})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" Separator \"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/registry/new-york/ui/separator\"'})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" *\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" as\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" Charts \"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"from\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/app/(app)/charts/charts\"'})]})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"There are few observations that can be made here:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"@/components folder:\"}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[\"ChartDisplay, ChartsNav, ThemesSwitcher, ThemesStyle are imported from generic \",(0,n.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/tree/main/apps/www/components\",children:\"components folder\"}),\" that is at the root level.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[`You could place the components such as ChartDisplay, ChartsNav in a folder named components\nthat could be created in `,(0,n.jsx)(e.code,{children:\"app/(app)/charts\"}),\" for colocating purposes.\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"charts components:\"}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{id:\"conclusion\",children:\"Conclusion:\"}),`\n`,(0,n.jsxs)(e.p,{children:[`You make the best judgement based on what works for you. Across the shadcn-ui/ui, components used in pages are located in\ncomponents folder at the root level so they can be imported using `,(0,n.jsx)(e.code,{children:\"@/components\"}),\".\"]}),`\n`,(0,n.jsx)(e.p,{children:`We picked the special use cases such as Charts Page, Mail Example page where you will find some components imported from with\nin the route folder.`})]})}function p(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,{...r,children:(0,n.jsx)(h,{...r})}):h(r)}return C(x);})();\n;return Component;"
    },
    "_id": "course/codebase-architecture/components-structure/shadcn-ui/charts-page.mdx",
    "_raw": {
      "sourceFilePath": "course/codebase-architecture/components-structure/shadcn-ui/charts-page.mdx",
      "sourceFileName": "charts-page.mdx",
      "sourceFileDir": "course/codebase-architecture/components-structure/shadcn-ui",
      "contentType": "mdx",
      "flattenedPath": "course/codebase-architecture/components-structure/shadcn-ui/charts-page"
    },
    "type": "Doc",
    "slug": "/course/codebase-architecture/components-structure/shadcn-ui/charts-page",
    "slugAsParams": "codebase-architecture/components-structure/shadcn-ui/charts-page"
  },
  {
    "title": "Home Page",
    "description": "Components Structure In Home Page.",
    "published": false,
    "featured": false,
    "component": false,
    "toc": true,
    "body": {
      "raw": "\nShadcn-ui/ui provides beautifully designed components that you can copy and paste into your apps.\n\nIn this lesson, we are only focusing on the folder structure, file naming conventions and how the page is built.\nTo begin with, we picked https://ui.shadcn.com/, that is, the home page.\n\n## Home Page\n\nThis home page source code is found at [app/(app)/page.tsx](https://github.com/shadcn-ui/ui/blob/main/apps/www/app/(app)/page.tsx).\n\n### Components imported\n\nThe following components are imported in the home page, found at [app/(app)/page.tsx](https://github.com/shadcn-ui/ui/blob/main/apps/www/app/(app)/page.tsx)\n\n```js\nimport { Announcement } from \"@/components/announcement\"\nimport { ExamplesNav } from \"@/components/examples-nav\"\nimport {\n  PageActions,\n  PageHeader,\n  PageHeaderDescription,\n  PageHeaderHeading,\n} from \"@/components/page-header\"\nimport { Button } from \"@/registry/new-york/ui/button\"\nimport MailPage from \"@/app/(app)/examples/mail/page\"\n```\n\nThere are few observations that can be made here:\n\n- Component name follows PascalCase naming convention.\nExample: `Announcement`, `ExamplesNav`, `PageActions`, `PageHeader`, `PageHeaderDescription` etc.,\n\n- Import alias used.\nYou will find the below code snippet in [tsconfig.json](https://github.com/shadcn-ui/ui/blob/main/apps/www/tsconfig.json#L19C5-L20C22)\n\n```json\n\"paths\": {\n      \"@/*\": [\"./*\"],\n}\n```\n\n\"@/\" is the default import alias in Next.js.\n\n- File naming convention.\nFile names such as `examples-nav`, `page-header` seem to be following kebab-case convention.\n\n- Folder structure\nComponents used in this home page are found to be imported from \n\n1. `components` folder\n\n![Shadcn-ui/ui Components Structure](/components-structure/shadcn-components-folder.png)\n\nComponents folder does not have any nested folders. All the components that are used across the shadcn-ui/ui are located in this folder.\n\nThese components are different from what you see on https://ui.shadcn.com/docs/components. \nDifferent how? https://ui.shadcn.com/docs/components provides the components that can be copied and pasted and these reside in [`registry`](https://github.com/shadcn-ui/ui/tree/main/apps/www/registry). \nHowever, `components` provides building blocks that are built using components from registry and are used in pages.\n\n\n2. `registry/new-york/ui` folder\n\n[registry/new-york/ui](https://github.com/shadcn-ui/ui/tree/main/apps/www/registry/new-york/ui) contains the components \nthe components that you see at https://ui.shadcn.com/docs/components.\n\nThis ui folder is what you get when you initialise shadcn-ui/ui via the CLI.\nThere's no need to create a folder named registry and put your ui components in there because shadcn-ui/ui already \ndoes this for you via the CLI.\n\n\n3. `@/app/(app)/examples/mail` folder \n\n[@/app/(app)/examples/mail](https://github.com/shadcn-ui/ui/tree/main/apps/www/app/(app)/examples/mail) this is an interesting\nuse case because this imports the whole MailPage.\n\nWhat does this tell us? it means, you can use a page as a component, \nthat is MailPage in this case, by importing in another page. \n\n## Conclusion:\n\nYou will find this common pattern across the entire shadcn-ui/ui pages using the app router. Components used are either imported \nfrom components folder or imported registry/new-york/ui folder which is the exact folder that shadcn-ui/ui creates for you\nin your project when you initialise it via CLI. There is one special use case where a MailPage is imported in Home Page\nto show MailPage on the landing page.",
      "code": "var Component=(()=>{var p=Object.create;var i=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var F=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var y=(o,e)=>()=>(e||o((e={exports:{}}).exports,e),e.exports),f=(o,e)=>{for(var s in e)i(o,s,{get:e[s],enumerable:!0})},r=(o,e,s,l)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of F(e))!g.call(o,a)&&a!==s&&i(o,a,{get:()=>e[a],enumerable:!(l=m(e,a))||l.enumerable});return o};var w=(o,e,s)=>(s=o!=null?p(u(o)):{},r(e||!o||!o.__esModule?i(s,\"default\",{value:o,enumerable:!0}):s,o)),b=o=>r(i({},\"__esModule\",{value:!0}),o);var t=y((C,c)=>{c.exports=_jsx_runtime});var v={};f(v,{default:()=>h,frontmatter:()=>x});var n=w(t()),x={title:\"Home Page\",description:\"Components Structure In Home Page.\",toc:!0};function d(o){let e={a:\"a\",code:\"code\",div:\"div\",h2:\"h2\",h3:\"h3\",img:\"img\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",ul:\"ul\",...o.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"Shadcn-ui/ui provides beautifully designed components that you can copy and paste into your apps.\"}),`\n`,(0,n.jsxs)(e.p,{children:[`In this lesson, we are only focusing on the folder structure, file naming conventions and how the page is built.\nTo begin with, we picked `,(0,n.jsx)(e.a,{href:\"https://ui.shadcn.com/\",children:\"https://ui.shadcn.com/\"}),\", that is, the home page.\"]}),`\n`,(0,n.jsx)(e.h2,{id:\"home-page\",children:\"Home Page\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"This home page source code is found at \",(0,n.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/apps/www/app/(app)/page.tsx\",children:\"app/(app)/page.tsx\"}),\".\"]}),`\n`,(0,n.jsx)(e.h3,{id:\"components-imported\",children:\"Components imported\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"The following components are imported in the home page, found at \",(0,n.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/apps/www/app/(app)/page.tsx\",children:\"app/(app)/page.tsx\"})]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"js\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"js\",\"data-theme\":\"default\",children:[(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" Announcement \"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/components/announcement\"'})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" ExamplesNav \"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/components/examples-nav\"'})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\"  PageActions\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\",\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\"  PageHeader\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\",\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\"  PageHeaderDescription\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\",\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\"  PageHeaderHeading\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\",\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/components/page-header\"'})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" Button \"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/registry/new-york/ui/button\"'})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\" MailPage \"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"from\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/app/(app)/examples/mail/page\"'})]})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"There are few observations that can be made here:\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[`Component name follows PascalCase naming convention.\nExample: `,(0,n.jsx)(e.code,{children:\"Announcement\"}),\", \",(0,n.jsx)(e.code,{children:\"ExamplesNav\"}),\", \",(0,n.jsx)(e.code,{children:\"PageActions\"}),\", \",(0,n.jsx)(e.code,{children:\"PageHeader\"}),\", \",(0,n.jsx)(e.code,{children:\"PageHeaderDescription\"}),\" etc.,\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[`Import alias used.\nYou will find the below code snippet in `,(0,n.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/apps/www/tsconfig.json#L19C5-L20C22\",children:\"tsconfig.json\"})]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"json\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"json\",\"data-theme\":\"default\",children:[(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:'\"paths\"'}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\": \"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"{\"})]}),`\n`,(0,n.jsxs)(e.span,{className:\"line\",children:[(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:'      \"'}),(0,n.jsx)(e.span,{style:{color:\"#FFF\"},children:\"@/*\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:'\"'}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\":\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" [\"}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:'\"./*\"'}),(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"],\"})]}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"})})]})})}),`\n`,(0,n.jsx)(e.p,{children:'\"@/\" is the default import alias in Next.js.'}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[`File naming convention.\nFile names such as `,(0,n.jsx)(e.code,{children:\"examples-nav\"}),\", \",(0,n.jsx)(e.code,{children:\"page-header\"}),\" seem to be following kebab-case convention.\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsx)(e.p,{children:`Folder structure\nComponents used in this home page are found to be imported from`}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"components\"}),\" folder\"]}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/components-structure/shadcn-components-folder.png\",alt:\"Shadcn-ui/ui Components Structure\"})}),`\n`,(0,n.jsx)(e.p,{children:\"Components folder does not have any nested folders. All the components that are used across the shadcn-ui/ui are located in this folder.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"These components are different from what you see on \",(0,n.jsx)(e.a,{href:\"https://ui.shadcn.com/docs/components\",children:\"https://ui.shadcn.com/docs/components\"}),`.\nDifferent how? `,(0,n.jsx)(e.a,{href:\"https://ui.shadcn.com/docs/components\",children:\"https://ui.shadcn.com/docs/components\"}),\" provides the components that can be copied and pasted and these reside in \",(0,n.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/tree/main/apps/www/registry\",children:(0,n.jsx)(e.code,{children:\"registry\"})}),`.\nHowever, `,(0,n.jsx)(e.code,{children:\"components\"}),\" provides building blocks that are built using components from registry and are used in pages.\"]}),`\n`,(0,n.jsxs)(e.ol,{start:\"2\",children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"registry/new-york/ui\"}),\" folder\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/tree/main/apps/www/registry/new-york/ui\",children:\"registry/new-york/ui\"}),` contains the components\nthe components that you see at `,(0,n.jsx)(e.a,{href:\"https://ui.shadcn.com/docs/components\",children:\"https://ui.shadcn.com/docs/components\"}),\".\"]}),`\n`,(0,n.jsx)(e.p,{children:`This ui folder is what you get when you initialise shadcn-ui/ui via the CLI.\nThere's no need to create a folder named registry and put your ui components in there because shadcn-ui/ui already\ndoes this for you via the CLI.`}),`\n`,(0,n.jsxs)(e.ol,{start:\"3\",children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.code,{children:\"@/app/(app)/examples/mail\"}),\" folder\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/tree/main/apps/www/app/(app)/examples/mail\",children:\"@/app/(app)/examples/mail\"}),` this is an interesting\nuse case because this imports the whole MailPage.`]}),`\n`,(0,n.jsx)(e.p,{children:`What does this tell us? it means, you can use a page as a component,\nthat is MailPage in this case, by importing in another page.`}),`\n`,(0,n.jsx)(e.h2,{id:\"conclusion\",children:\"Conclusion:\"}),`\n`,(0,n.jsx)(e.p,{children:`You will find this common pattern across the entire shadcn-ui/ui pages using the app router. Components used are either imported\nfrom components folder or imported registry/new-york/ui folder which is the exact folder that shadcn-ui/ui creates for you\nin your project when you initialise it via CLI. There is one special use case where a MailPage is imported in Home Page\nto show MailPage on the landing page.`})]})}function h(o={}){let{wrapper:e}=o.components||{};return e?(0,n.jsx)(e,{...o,children:(0,n.jsx)(d,{...o})}):d(o)}return b(v);})();\n;return Component;"
    },
    "_id": "course/codebase-architecture/components-structure/shadcn-ui/home-page.mdx",
    "_raw": {
      "sourceFilePath": "course/codebase-architecture/components-structure/shadcn-ui/home-page.mdx",
      "sourceFileName": "home-page.mdx",
      "sourceFileDir": "course/codebase-architecture/components-structure/shadcn-ui",
      "contentType": "mdx",
      "flattenedPath": "course/codebase-architecture/components-structure/shadcn-ui/home-page"
    },
    "type": "Doc",
    "slug": "/course/codebase-architecture/components-structure/shadcn-ui/home-page",
    "slugAsParams": "codebase-architecture/components-structure/shadcn-ui/home-page"
  },
  {
    "title": "Introduction",
    "published": false,
    "featured": false,
    "component": false,
    "toc": true,
    "body": {
      "raw": "\nIn this guide, you will learn how components are organized in shadcn-ui/ui\n\nBy components, here we mean the building blocks of the user interface or more precisely, the building blocks used in a page.\n\nOur focus is primarily on the folder structure and file naming conventions used. \nIn order to establish a common pattern and to understand components structure better, \nwe will study few pages/routes in the Shadcn-ui/ui.\n\nOur approach is to pick a route, locate the route in the source code and from there on, we will look at \n1. Where the imported components are located in a project\n2. Folder structure and naming conventions used  \n3. How the \"page\" is built using these imported components\n\nThere will be screenshots and links pointing to folders and components that belong to a project. \n\nUse this free guide to learn how components are organized in Shadcn-ui/ui.",
      "code": "var Component=(()=>{var h=Object.create;var i=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var w=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),b=(n,e)=>{for(var o in e)i(n,o,{get:e[o],enumerable:!0})},c=(n,e,o,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of m(e))!f.call(n,r)&&r!==o&&i(n,r,{get:()=>e[r],enumerable:!(s=p(e,r))||s.enumerable});return n};var x=(n,e,o)=>(o=n!=null?h(g(n)):{},c(e||!n||!n.__esModule?i(o,\"default\",{value:n,enumerable:!0}):o,n)),j=n=>c(i({},\"__esModule\",{value:!0}),n);var a=w((F,l)=>{l.exports=_jsx_runtime});var y={};b(y,{default:()=>u,frontmatter:()=>_});var t=x(a()),_={title:\"Introduction\",toc:!0};function d(n){let e={li:\"li\",ol:\"ol\",p:\"p\",...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:\"In this guide, you will learn how components are organized in shadcn-ui/ui\"}),`\n`,(0,t.jsx)(e.p,{children:\"By components, here we mean the building blocks of the user interface or more precisely, the building blocks used in a page.\"}),`\n`,(0,t.jsx)(e.p,{children:`Our focus is primarily on the folder structure and file naming conventions used.\nIn order to establish a common pattern and to understand components structure better,\nwe will study few pages/routes in the Shadcn-ui/ui.`}),`\n`,(0,t.jsx)(e.p,{children:\"Our approach is to pick a route, locate the route in the source code and from there on, we will look at\"}),`\n`,(0,t.jsxs)(e.ol,{children:[`\n`,(0,t.jsx)(e.li,{children:\"Where the imported components are located in a project\"}),`\n`,(0,t.jsx)(e.li,{children:\"Folder structure and naming conventions used\"}),`\n`,(0,t.jsx)(e.li,{children:'How the \"page\" is built using these imported components'}),`\n`]}),`\n`,(0,t.jsx)(e.p,{children:\"There will be screenshots and links pointing to folders and components that belong to a project.\"}),`\n`,(0,t.jsx)(e.p,{children:\"Use this free guide to learn how components are organized in Shadcn-ui/ui.\"})]})}function u(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}return j(y);})();\n;return Component;"
    },
    "_id": "course/codebase-architecture/components-structure/shadcn-ui/introduction.mdx",
    "_raw": {
      "sourceFilePath": "course/codebase-architecture/components-structure/shadcn-ui/introduction.mdx",
      "sourceFileName": "introduction.mdx",
      "sourceFileDir": "course/codebase-architecture/components-structure/shadcn-ui",
      "contentType": "mdx",
      "flattenedPath": "course/codebase-architecture/components-structure/shadcn-ui/introduction"
    },
    "type": "Doc",
    "slug": "/course/codebase-architecture/components-structure/shadcn-ui/introduction",
    "slugAsParams": "codebase-architecture/components-structure/shadcn-ui/introduction"
  },
  {
    "title": "Mail Example Page",
    "description": "Components Structure In Mail Example Page.",
    "published": false,
    "featured": false,
    "component": false,
    "toc": true,
    "body": {
      "raw": "\nIn this lesson, we are only focusing on the folder structure, file naming conventions and \nhow the Mail Example Page is built.\n\n## Mail Example Page\n\nThis Mail Example Page source code is found at [www/app/(app)/examples/mail](https://github.com/shadcn-ui/ui/tree/main/apps/www/app/(app)/examples/mail).\n\n### Components imported\n\nThe following components are imported in the mail page, found at [www/app/(app)/examples/mail](https://github.com/shadcn-ui/ui/blob/main/apps/www/app/(app)/examples/mail/page.tsx).\n\n```js\nimport { Mail } from \"@/app/(app)/examples/mail/components/mail\"\nimport { accounts, mails } from \"@/app/(app)/examples/mail/data\"\n```\n\nThere are few observations that can be made here:\n\n- Mail component\nMail component seems to be imported from mail/components. What does this tell you? components specific to a page are \ncolocated with in examples/mail folder. In the previous lesson, we mentioned about components folder that contains components\nthat can be used across the app.\n\nThere are some more components imported in [www/app/(app)/examples/mail/components/mail](https://github.com/shadcn-ui/ui/tree/main/apps/www/app/(app)/examples/mail/components)\n\n```js\nimport { cn } from \"@/lib/utils\"\nimport { Input } from \"@/registry/new-york/ui/input\"\nimport {\n  ResizableHandle,\n  ResizablePanel,\n  ResizablePanelGroup,\n} from \"@/registry/new-york/ui/resizable\"\nimport { Separator } from \"@/registry/new-york/ui/separator\"\nimport {\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n} from \"@/registry/new-york/ui/tabs\"\nimport { TooltipProvider } from \"@/registry/new-york/ui/tooltip\"\nimport { AccountSwitcher } from \"@/app/(app)/examples/mail/components/account-switcher\"\nimport { MailDisplay } from \"@/app/(app)/examples/mail/components/mail-display\"\nimport { MailList } from \"@/app/(app)/examples/mail/components/mail-list\"\nimport { Nav } from \"@/app/(app)/examples/mail/components/nav\"\nimport { type Mail } from \"@/app/(app)/examples/mail/data\"\nimport { useMail } from \"@/app/(app)/examples/mail/use-mail\"\n```\nRemember, our focus is on folder structure.\n\n- @/registry/new-york/ui:\n@/registry/new-york/ui is used in the shadcn-ui/ui codebase to reuse ui blocks. this ui folder is automatically generated when \nyou install shadcn-ui/ui via CLI\n\n- `examples/mail/components/` folder:\nThis folder contains the following files:\n1. account-switcher.tsx\n2. mail-display.tsx\n3. mail-list.tsx\n4. mail.tsx\n5. nav.tsx\n\nmail.tsx is the base of MailPage as it imports the other building blocks/components to form the Mail Page.\n\n- data folder\nThis [data file](https://github.com/shadcn-ui/ui/blob/main/apps/www/app/(app)/examples/mail/data.tsx) contains static data \nthat is used in Mail Example page. You could write your server data fetching actions in a file like this that is specific to \na page, colocated with in a folder, like in this case \"mail\" as this is related to Mail page.  \n\n- use-mail.ts custom hook:\nYou will also a find a custom hook, [use-mail.ts](https://github.com/shadcn-ui/ui/blob/main/apps/www/app/(app)/examples/mail/use-mail.ts)\nThis hook uses Jotai to manage state.",
      "code": "var Component=(()=>{var d=Object.create;var i=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var f=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),g=(n,e)=>{for(var s in e)i(n,s,{get:e[s],enumerable:!0})},r=(n,e,s,o)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of m(e))!u.call(n,a)&&a!==s&&i(n,a,{get:()=>e[a],enumerable:!(o=h(e,a))||o.enumerable});return n};var w=(n,e,s)=>(s=n!=null?d(y(n)):{},r(e||!n||!n.__esModule?i(s,\"default\",{value:n,enumerable:!0}):s,n)),x=n=>r(i({},\"__esModule\",{value:!0}),n);var t=f((k,c)=>{c.exports=_jsx_runtime});var N={};g(N,{default:()=>F,frontmatter:()=>b});var l=w(t()),b={title:\"Mail Example Page\",description:\"Components Structure In Mail Example Page.\",toc:!0};function p(n){let e={a:\"a\",code:\"code\",div:\"div\",h2:\"h2\",h3:\"h3\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",ul:\"ul\",...n.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.p,{children:`In this lesson, we are only focusing on the folder structure, file naming conventions and\nhow the Mail Example Page is built.`}),`\n`,(0,l.jsx)(e.h2,{id:\"mail-example-page\",children:\"Mail Example Page\"}),`\n`,(0,l.jsxs)(e.p,{children:[\"This Mail Example Page source code is found at \",(0,l.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/tree/main/apps/www/app/(app)/examples/mail\",children:\"www/app/(app)/examples/mail\"}),\".\"]}),`\n`,(0,l.jsx)(e.h3,{id:\"components-imported\",children:\"Components imported\"}),`\n`,(0,l.jsxs)(e.p,{children:[\"The following components are imported in the mail page, found at \",(0,l.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/apps/www/app/(app)/examples/mail/page.tsx\",children:\"www/app/(app)/examples/mail\"}),\".\"]}),`\n`,(0,l.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,l.jsx)(e.pre,{\"data-language\":\"js\",\"data-theme\":\"default\",children:(0,l.jsxs)(e.code,{\"data-language\":\"js\",\"data-theme\":\"default\",children:[(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" Mail \"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/app/(app)/examples/mail/components/mail\"'})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" accounts\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\",\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" mails \"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/app/(app)/examples/mail/data\"'})]})]})})}),`\n`,(0,l.jsx)(e.p,{children:\"There are few observations that can be made here:\"}),`\n`,(0,l.jsxs)(e.ul,{children:[`\n`,(0,l.jsx)(e.li,{children:`Mail component\nMail component seems to be imported from mail/components. What does this tell you? components specific to a page are\ncolocated with in examples/mail folder. In the previous lesson, we mentioned about components folder that contains components\nthat can be used across the app.`}),`\n`]}),`\n`,(0,l.jsxs)(e.p,{children:[\"There are some more components imported in \",(0,l.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/tree/main/apps/www/app/(app)/examples/mail/components\",children:\"www/app/(app)/examples/mail/components/mail\"})]}),`\n`,(0,l.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,l.jsx)(e.pre,{\"data-language\":\"js\",\"data-theme\":\"default\",children:(0,l.jsxs)(e.code,{\"data-language\":\"js\",\"data-theme\":\"default\",children:[(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" cn \"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/lib/utils\"'})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" Input \"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/registry/new-york/ui/input\"'})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"  ResizableHandle\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\",\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"  ResizablePanel\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\",\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"  ResizablePanelGroup\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\",\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/registry/new-york/ui/resizable\"'})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" Separator \"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/registry/new-york/ui/separator\"'})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"  Tabs\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\",\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"  TabsContent\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\",\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"  TabsList\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\",\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\"  TabsTrigger\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\",\"})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/registry/new-york/ui/tabs\"'})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" TooltipProvider \"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/registry/new-york/ui/tooltip\"'})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" AccountSwitcher \"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/app/(app)/examples/mail/components/account-switcher\"'})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" MailDisplay \"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/app/(app)/examples/mail/components/mail-display\"'})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" MailList \"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/app/(app)/examples/mail/components/mail-list\"'})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" Nav \"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/app/(app)/examples/mail/components/nav\"'})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" type\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" Mail \"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/app/(app)/examples/mail/data\"'})]}),`\n`,(0,l.jsxs)(e.span,{className:\"line\",children:[(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"import\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" {\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF\"},children:\" useMail \"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\"}\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:\" from\"}),(0,l.jsx)(e.span,{style:{color:\"#FFF8\"},children:' \"@/app/(app)/examples/mail/use-mail\"'})]})]})})}),`\n`,(0,l.jsx)(e.p,{children:\"Remember, our focus is on folder structure.\"}),`\n`,(0,l.jsxs)(e.ul,{children:[`\n`,(0,l.jsxs)(e.li,{children:[`\n`,(0,l.jsx)(e.p,{children:`@/registry/new-york/ui:\n@/registry/new-york/ui is used in the shadcn-ui/ui codebase to reuse ui blocks. this ui folder is automatically generated when\nyou install shadcn-ui/ui via CLI`}),`\n`]}),`\n`,(0,l.jsxs)(e.li,{children:[`\n`,(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.code,{children:\"examples/mail/components/\"}),` folder:\nThis folder contains the following files:`]}),`\n`]}),`\n`]}),`\n`,(0,l.jsxs)(e.ol,{children:[`\n`,(0,l.jsx)(e.li,{children:\"account-switcher.tsx\"}),`\n`,(0,l.jsx)(e.li,{children:\"mail-display.tsx\"}),`\n`,(0,l.jsx)(e.li,{children:\"mail-list.tsx\"}),`\n`,(0,l.jsx)(e.li,{children:\"mail.tsx\"}),`\n`,(0,l.jsx)(e.li,{children:\"nav.tsx\"}),`\n`]}),`\n`,(0,l.jsx)(e.p,{children:\"mail.tsx is the base of MailPage as it imports the other building blocks/components to form the Mail Page.\"}),`\n`,(0,l.jsxs)(e.ul,{children:[`\n`,(0,l.jsxs)(e.li,{children:[`\n`,(0,l.jsxs)(e.p,{children:[`data folder\nThis `,(0,l.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/apps/www/app/(app)/examples/mail/data.tsx\",children:\"data file\"}),` contains static data\nthat is used in Mail Example page. You could write your server data fetching actions in a file like this that is specific to\na page, colocated with in a folder, like in this case \"mail\" as this is related to Mail page.`]}),`\n`]}),`\n`,(0,l.jsxs)(e.li,{children:[`\n`,(0,l.jsxs)(e.p,{children:[`use-mail.ts custom hook:\nYou will also a find a custom hook, `,(0,l.jsx)(e.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/apps/www/app/(app)/examples/mail/use-mail.ts\",children:\"use-mail.ts\"}),`\nThis hook uses Jotai to manage state.`]}),`\n`]}),`\n`]})]})}function F(n={}){let{wrapper:e}=n.components||{};return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(p,{...n})}):p(n)}return x(N);})();\n;return Component;"
    },
    "_id": "course/codebase-architecture/components-structure/shadcn-ui/mail-example-page.mdx",
    "_raw": {
      "sourceFilePath": "course/codebase-architecture/components-structure/shadcn-ui/mail-example-page.mdx",
      "sourceFileName": "mail-example-page.mdx",
      "sourceFileDir": "course/codebase-architecture/components-structure/shadcn-ui",
      "contentType": "mdx",
      "flattenedPath": "course/codebase-architecture/components-structure/shadcn-ui/mail-example-page"
    },
    "type": "Doc",
    "slug": "/course/codebase-architecture/components-structure/shadcn-ui/mail-example-page",
    "slugAsParams": "codebase-architecture/components-structure/shadcn-ui/mail-example-page"
  },
  {
    "published": false,
    "featured": false,
    "component": false,
    "toc": true,
    "body": {
      "raw": "[Alert component] is used to show errors:\n\nIn this guide, we analyze how errors are handled in a component in \n[cal.com](https://github.com/calcom/cal.com/blob/main/apps/web/pages/bookings/%5Bstatus%5D.tsx).\n\nHow to find out what error handling mechanisms are used in cal.com codebase? Pick a page on cal.com and\nfind the page route in its [source code](link-to-code)\n\nIn this guide, we choose the \n[bookings listing component](https://github.com/calcom/cal.com/blob/main/apps/web/modules/bookings/views/bookings-listing-view.tsx).\n\n[Insert screenshots of bookings page]\n\nBookings component depends purely on the `query` result to decide what to render based on `query.status`.\n\n```\n// picked from https://github.com/calcom/cal.com/blob/main/apps/web/modules/bookings/views/bookings-listing-view.tsx#L82C3-L95C5\nconst query = trpc.viewer.bookings.get.useInfiniteQuery(\n    {\n      limit: 10,\n      filters: {\n        ...filterQuery,\n        status: filterQuery.status ?? status,\n      },\n    },\n    {\n      // first render has status `undefined`\n      enabled: true,\n      getNextPageParam: (lastPage) => lastPage.nextCursor,\n    }\n  );\n``` \n\nIn this guide, our focus is only on how errors are handled in a component. So, if there's an error encountered,\nquery.status would be \"error\".\n\n```\n{\n    query.status === \"error\" && \n    (\n      <Alert severity=\"error\" title={t(\"something_went_wrong\")} message={query.error.message} />\n    )\n}\n```\n\n[Alert](https://github.com/calcom/cal.com/blob/main/packages/ui/components/alert/Alert.tsx) is imported from\n`packages/ui/components/alert/Alert.tsx`\n\nReferences:\n1. https://github.com/calcom/cal.com/blob/main/apps/web/pages/bookings/%5Bstatus%5D.tsx\n2. https://github.com/calcom/cal.com/blob/main/apps/web/modules/bookings/views/bookings-listing-view.tsx#L165\n3. https://github.com/calcom/cal.com/blob/main/packages/ui/components/alert/Alert.tsx\n// In auth/login error handling:\n4. https://github.com/calcom/cal.com/blob/main/apps/web/modules/auth/login-view.tsx#L232C1-L233C80\n\n[Error tracking]:\nCal.com uses Sentry to track production errors. The below code snippet is from [cal.com/apps/web/intrumentation.ts](https://github.com/calcom/cal.com/blob/main/apps/web/instrumentation.ts)\n\n```\nimport * as Sentry from \"@sentry/nextjs\";\n\nexport function register() {\n  if (process.env.NEXT_RUNTIME === \"nodejs\") {\n    Sentry.init({\n      dsn: process.env.NEXT_PUBLIC_SENTRY_DSN,\n    });\n  }\n\n  if (process.env.NEXT_RUNTIME === \"edge\") {\n    Sentry.init({\n      dsn: process.env.NEXT_PUBLIC_SENTRY_DSN,\n    });\n  }\n}\n```\nRead this [official Sentry docs](https://docs.sentry.io/platforms/javascript/guides/nextjs/) that explains how to setup Sentry in a Next.js project.\n\nThis intrumentation file above is automatically generated as part of Sentry setup. \n`dsn`:\nThe DSN tells the SDK where to send the events. If this value is not provided, the SDK will try to read it from the SENTRY_DSN environment variable. If that variable also does not exist, the SDK will just not send any events.\n\nIn runtimes without a process environment (such as the browser) that fallback does not apply.\n\nLearn more about DSN utilization.\n  \nReferences:\n1. https://github.com/calcom/cal.com/blob/main/apps/web/instrumentation.ts\n2. https://github.com/calcom/cal.com/blob/main/apps/web/sentry.client.config.ts \n3. https://docs.sentry.io/platforms/javascript/guides/nextjs/\n\n[Error Boundary]\n\nBy default, if your application throws an error during rendering, React will remove its UI \nfrom the screen. To prevent this, you can wrap a part of your UI into an error boundary. \nAn error boundary is a special component that lets you display some fallback UI instead of \nthe part that crashedâ€”for example, an error message.\n\nReact docs explains [how to write your own boundary](https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary)\n\n```\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, info) {\n    // Example \"componentStack\":\n    //   in ComponentThatThrows (created by App)\n    //   in ErrorBoundary (created by App)\n    //   in div (created by App)\n    //   in App\n    logErrorToMyService(error, info.componentStack);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return this.props.fallback;\n    }\n\n    return this.props.children;\n  }\n}\n```\n\nYou can write your own ErrorBoundary or use [react-error-boundary](https://github.com/bvaughn/react-error-boundary/tree/master), recommended by React.\n\nGuess the kind of [ErrorBoundary used in cal.com](https://github.com/calcom/cal.com/blob/5bbccad41d625250ac03a6683e751b8ed6650721/packages/ui/components/errorBoundary/ErrorBoundary.tsx#L4)?\n\n```\nimport type { ErrorInfo } from \"react\";\nimport React from \"react\";\n\nclass ErrorBoundary extends React.Component<\n  { children: React.ReactNode; message?: string },\n  { error: Error | null; errorInfo: ErrorInfo | null }\n> {\n  constructor(props: { children: React.ReactNode } | Readonly<{ children: React.ReactNode }>) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch?(error: Error, errorInfo: ErrorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({ error, errorInfo });\n    // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    // do not intercept next-not-found error, allow displaying not-found.tsx page when notFound() is thrown on server side\n    if (\n      this.state.error !== null &&\n      \"digest\" in this.state.error &&\n      this.state.error.digest === \"NEXT_NOT_FOUND\"\n    ) {\n      return this.props.children;\n    }\n\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div>\n          <h2>{this.props.message || \"Something went wrong.\"}</h2>\n          <details style={{ whiteSpace: \"pre-wrap\" }}>\n            {this.state.error && this.state.error.toString()}\n          </details>\n        </div>\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n```\ncal.com has its own ErrorBoundary class. It has `componentDidCatch` and `render` methods defined. Although, documentation\nprovides the example containing `getDerivedStateFromError`, it looks like this `getDerivedStateFromError` method is not\nused in cal.com ErrorBoundary class. \n\nReferences:\n1. https://github.com/search?q=repo%3Acalcom%2Fcal.com%20ErrorBoundary&type=code\n2. https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary\n3. https://github.com/bvaughn/react-error-boundary\n4. https://github.com/calcom/cal.com/blob/5bbccad41d625250ac03a6683e751b8ed6650721/packages/ui/components/errorBoundary/ErrorBoundary.tsx#L4",
      "code": "var Component=(()=>{var p=Object.create;var a=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var f=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),y=(r,e)=>{for(var o in e)a(r,o,{get:e[o],enumerable:!0})},i=(r,e,o,c)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let t of u(e))!g.call(r,t)&&t!==o&&a(r,t,{get:()=>e[t],enumerable:!(c=m(e,t))||c.enumerable});return r};var w=(r,e,o)=>(o=r!=null?p(b(r)):{},i(e||!r||!r.__esModule?a(o,\"default\",{value:r,enumerable:!0}):o,r)),v=r=>i(a({},\"__esModule\",{value:!0}),r);var l=f((S,s)=>{s.exports=_jsx_runtime});var E={};y(E,{default:()=>d,frontmatter:()=>x});var n=w(l()),x=void 0;function h(r){let e={a:\"a\",code:\"code\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",...r.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"[Alert component] is used to show errors:\"}),`\n`,(0,n.jsxs)(e.p,{children:[`In this guide, we analyze how errors are handled in a component in\n`,(0,n.jsx)(e.a,{href:\"https://github.com/calcom/cal.com/blob/main/apps/web/pages/bookings/%5Bstatus%5D.tsx\",children:\"cal.com\"}),\".\"]}),`\n`,(0,n.jsxs)(e.p,{children:[`How to find out what error handling mechanisms are used in cal.com codebase? Pick a page on cal.com and\nfind the page route in its `,(0,n.jsx)(e.a,{href:\"link-to-code\",children:\"source code\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[`In this guide, we choose the\n`,(0,n.jsx)(e.a,{href:\"https://github.com/calcom/cal.com/blob/main/apps/web/modules/bookings/views/bookings-listing-view.tsx\",children:\"bookings listing component\"}),\".\"]}),`\n`,(0,n.jsx)(e.p,{children:\"[Insert screenshots of bookings page]\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Bookings component depends purely on the \",(0,n.jsx)(e.code,{children:\"query\"}),\" result to decide what to render based on \",(0,n.jsx)(e.code,{children:\"query.status\"}),\".\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:`// picked from https://github.com/calcom/cal.com/blob/main/apps/web/modules/bookings/views/bookings-listing-view.tsx#L82C3-L95C5\nconst query = trpc.viewer.bookings.get.useInfiniteQuery(\n    {\n      limit: 10,\n      filters: {\n        ...filterQuery,\n        status: filterQuery.status ?? status,\n      },\n    },\n    {\n      // first render has status \\`undefined\\`\n      enabled: true,\n      getNextPageParam: (lastPage) => lastPage.nextCursor,\n    }\n  );\n`})}),`\n`,(0,n.jsx)(e.p,{children:`In this guide, our focus is only on how errors are handled in a component. So, if there's an error encountered,\nquery.status would be \"error\".`}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:`{\n    query.status === \"error\" && \n    (\n      <Alert severity=\"error\" title={t(\"something_went_wrong\")} message={query.error.message} />\n    )\n}\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:\"https://github.com/calcom/cal.com/blob/main/packages/ui/components/alert/Alert.tsx\",children:\"Alert\"}),` is imported from\n`,(0,n.jsx)(e.code,{children:\"packages/ui/components/alert/Alert.tsx\"})]}),`\n`,(0,n.jsx)(e.p,{children:\"References:\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://github.com/calcom/cal.com/blob/main/apps/web/pages/bookings/%5Bstatus%5D.tsx\",children:\"https://github.com/calcom/cal.com/blob/main/apps/web/pages/bookings/%5Bstatus%5D.tsx\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://github.com/calcom/cal.com/blob/main/apps/web/modules/bookings/views/bookings-listing-view.tsx#L165\",children:\"https://github.com/calcom/cal.com/blob/main/apps/web/modules/bookings/views/bookings-listing-view.tsx#L165\"})}),`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.a,{href:\"https://github.com/calcom/cal.com/blob/main/packages/ui/components/alert/Alert.tsx\",children:\"https://github.com/calcom/cal.com/blob/main/packages/ui/components/alert/Alert.tsx\"}),`\n// In auth/login error handling:`]}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://github.com/calcom/cal.com/blob/main/apps/web/modules/auth/login-view.tsx#L232C1-L233C80\",children:\"https://github.com/calcom/cal.com/blob/main/apps/web/modules/auth/login-view.tsx#L232C1-L233C80\"})}),`\n`]}),`\n`,(0,n.jsxs)(e.p,{children:[`[Error tracking]:\nCal.com uses Sentry to track production errors. The below code snippet is from `,(0,n.jsx)(e.a,{href:\"https://github.com/calcom/cal.com/blob/main/apps/web/instrumentation.ts\",children:\"cal.com/apps/web/intrumentation.ts\"})]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:`import * as Sentry from \"@sentry/nextjs\";\n\nexport function register() {\n  if (process.env.NEXT_RUNTIME === \"nodejs\") {\n    Sentry.init({\n      dsn: process.env.NEXT_PUBLIC_SENTRY_DSN,\n    });\n  }\n\n  if (process.env.NEXT_RUNTIME === \"edge\") {\n    Sentry.init({\n      dsn: process.env.NEXT_PUBLIC_SENTRY_DSN,\n    });\n  }\n}\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Read this \",(0,n.jsx)(e.a,{href:\"https://docs.sentry.io/platforms/javascript/guides/nextjs/\",children:\"official Sentry docs\"}),\" that explains how to setup Sentry in a Next.js project.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[`This intrumentation file above is automatically generated as part of Sentry setup.\n`,(0,n.jsx)(e.code,{children:\"dsn\"}),`:\nThe DSN tells the SDK where to send the events. If this value is not provided, the SDK will try to read it from the SENTRY_DSN environment variable. If that variable also does not exist, the SDK will just not send any events.`]}),`\n`,(0,n.jsx)(e.p,{children:\"In runtimes without a process environment (such as the browser) that fallback does not apply.\"}),`\n`,(0,n.jsx)(e.p,{children:\"Learn more about DSN utilization.\"}),`\n`,(0,n.jsx)(e.p,{children:\"References:\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://github.com/calcom/cal.com/blob/main/apps/web/instrumentation.ts\",children:\"https://github.com/calcom/cal.com/blob/main/apps/web/instrumentation.ts\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://github.com/calcom/cal.com/blob/main/apps/web/sentry.client.config.ts\",children:\"https://github.com/calcom/cal.com/blob/main/apps/web/sentry.client.config.ts\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://docs.sentry.io/platforms/javascript/guides/nextjs/\",children:\"https://docs.sentry.io/platforms/javascript/guides/nextjs/\"})}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"[Error Boundary]\"}),`\n`,(0,n.jsx)(e.p,{children:`By default, if your application throws an error during rendering, React will remove its UI\nfrom the screen. To prevent this, you can wrap a part of your UI into an error boundary.\nAn error boundary is a special component that lets you display some fallback UI instead of\nthe part that crashed\\u2014for example, an error message.`}),`\n`,(0,n.jsxs)(e.p,{children:[\"React docs explains \",(0,n.jsx)(e.a,{href:\"https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary\",children:\"how to write your own boundary\"})]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:`class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, info) {\n    // Example \"componentStack\":\n    //   in ComponentThatThrows (created by App)\n    //   in ErrorBoundary (created by App)\n    //   in div (created by App)\n    //   in App\n    logErrorToMyService(error, info.componentStack);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return this.props.fallback;\n    }\n\n    return this.props.children;\n  }\n}\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"You can write your own ErrorBoundary or use \",(0,n.jsx)(e.a,{href:\"https://github.com/bvaughn/react-error-boundary/tree/master\",children:\"react-error-boundary\"}),\", recommended by React.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Guess the kind of \",(0,n.jsx)(e.a,{href:\"https://github.com/calcom/cal.com/blob/5bbccad41d625250ac03a6683e751b8ed6650721/packages/ui/components/errorBoundary/ErrorBoundary.tsx#L4\",children:\"ErrorBoundary used in cal.com\"}),\"?\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:`import type { ErrorInfo } from \"react\";\nimport React from \"react\";\n\nclass ErrorBoundary extends React.Component<\n  { children: React.ReactNode; message?: string },\n  { error: Error | null; errorInfo: ErrorInfo | null }\n> {\n  constructor(props: { children: React.ReactNode } | Readonly<{ children: React.ReactNode }>) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch?(error: Error, errorInfo: ErrorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({ error, errorInfo });\n    // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    // do not intercept next-not-found error, allow displaying not-found.tsx page when notFound() is thrown on server side\n    if (\n      this.state.error !== null &&\n      \"digest\" in this.state.error &&\n      this.state.error.digest === \"NEXT_NOT_FOUND\"\n    ) {\n      return this.props.children;\n    }\n\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div>\n          <h2>{this.props.message || \"Something went wrong.\"}</h2>\n          <details style={{ whiteSpace: \"pre-wrap\" }}>\n            {this.state.error && this.state.error.toString()}\n          </details>\n        </div>\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"cal.com has its own ErrorBoundary class. It has \",(0,n.jsx)(e.code,{children:\"componentDidCatch\"}),\" and \",(0,n.jsx)(e.code,{children:\"render\"}),` methods defined. Although, documentation\nprovides the example containing `,(0,n.jsx)(e.code,{children:\"getDerivedStateFromError\"}),\", it looks like this \",(0,n.jsx)(e.code,{children:\"getDerivedStateFromError\"}),` method is not\nused in cal.com ErrorBoundary class.`]}),`\n`,(0,n.jsx)(e.p,{children:\"References:\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://github.com/search?q=repo%3Acalcom%2Fcal.com%20ErrorBoundary&type=code\",children:\"https://github.com/search?q=repo%3Acalcom%2Fcal.com%20ErrorBoundary&type=code\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary\",children:\"https://react.dev/reference/react/Component#catching-rendering-errors-with-an-error-boundary\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://github.com/bvaughn/react-error-boundary\",children:\"https://github.com/bvaughn/react-error-boundary\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://github.com/calcom/cal.com/blob/5bbccad41d625250ac03a6683e751b8ed6650721/packages/ui/components/errorBoundary/ErrorBoundary.tsx#L4\",children:\"https://github.com/calcom/cal.com/blob/5bbccad41d625250ac03a6683e751b8ed6650721/packages/ui/components/errorBoundary/ErrorBoundary.tsx#L4\"})}),`\n`]})]})}function d(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,{...r,children:(0,n.jsx)(h,{...r})}):h(r)}return v(E);})();\n;return Component;"
    },
    "_id": "course/codebase-architecture/error-handling/cal-com/introduction.mdx",
    "_raw": {
      "sourceFilePath": "course/codebase-architecture/error-handling/cal-com/introduction.mdx",
      "sourceFileName": "introduction.mdx",
      "sourceFileDir": "course/codebase-architecture/error-handling/cal-com",
      "contentType": "mdx",
      "flattenedPath": "course/codebase-architecture/error-handling/cal-com/introduction"
    },
    "type": "Doc",
    "slug": "/course/codebase-architecture/error-handling/cal-com/introduction",
    "slugAsParams": "codebase-architecture/error-handling/cal-com/introduction"
  },
  {
    "published": false,
    "featured": false,
    "component": false,
    "toc": true,
    "body": {
      "raw": "In this guide, we look at security practices used in Supabase. \n\nFollowing these resources, \n- [Security in Next.js](https://nextjs.org/blog/security-nextjs-server-components-actions) \n- [Bulletproof React's Security](https://github.com/alan2207/bulletproof-react/blob/master/docs/security.md)\n- [Strap's authentication guide](https://strapi.io/integrations/nextjs-cms/topics/next-js-authentication)\n\nWe analyze the following concepts in the Supabase source code:\n\n1. Authentication\n2. Authorization\n3. Data Handling Model\n\n[L: Authentication]\nSupabase makes authentication easy to implement but have you ever wondered how Supabase implemented its own authentication on their\napplication?\n\nIn this guide, we will analyze the Authentication mechanism in Supabase.\n\nSupabase uses pages router, at the time of writing this guide. Let's first analyze the sign in with email and password\n\n[Insert screenshot of email and password screen here]\n\nThere is [pages/sign-in.tsx](https://github.com/supabase/supabase/blob/master/apps/studio/pages/sign-in.tsx), it has a lot of\nimports, but in this guide, out focus is on [SigninForm](https://github.com/supabase/supabase/blob/master/apps/studio/pages/sign-in.tsx#L51)\n\n[Insert screenshot of Line - https://github.com/supabase/supabase/blob/master/apps/studio/pages/sign-in.tsx#L51]\n\n## SigninForm\n\n[sign-in page](https://github.com/supabase/supabase/blob/master/apps/studio/pages/sign-in.tsx#L51) has a component named [SigninForm](https://github.com/supabase/supabase/blob/master/apps/studio/components/interfaces/SignIn/SignInForm.tsx#L22)\n\nLet's analyze sign-in form.\n\n```\n<Form\n      validateOnBlur\n      id=\"signIn-form\"\n      initialValues={{ email: '', password: '' }}\n      validationSchema={signInSchema}\n      onSubmit={onSignIn}\n    >\n      {({ isSubmitting }: { isSubmitting: boolean }) => {\n        return (\n          <div className=\"flex flex-col gap-4\">\n            <Input\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              label=\"Email\"\n              placeholder=\"you@example.com\"\n              disabled={isSubmitting}\n              autoComplete=\"email\"\n            />\n\n            <div className=\"relative\">\n              <Input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                label=\"Password\"\n                placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                disabled={isSubmitting}\n                autoComplete=\"current-password\"\n              />\n\n              {/* positioned using absolute instead of labelOptional prop so tabbing between inputs works smoothly */}\n              <Link\n                href=\"/forgot-password\"\n                className=\"absolute top-0 right-0 text-sm text-foreground-lighter\"\n              >\n                Forgot Password?\n              </Link>\n            </div>\n\n            <div className=\"self-center\">\n              <HCaptcha\n                ref={captchaRef}\n                sitekey={process.env.NEXT_PUBLIC_HCAPTCHA_SITE_KEY!}\n                size=\"invisible\"\n                onVerify={(token) => {\n                  setCaptchaToken(token)\n                }}\n                onExpire={() => {\n                  setCaptchaToken(null)\n                }}\n              />\n            </div>\n\n            <LastSignInWrapper type=\"email\">\n              <Button\n                block\n                form=\"signIn-form\"\n                htmlType=\"submit\"\n                size=\"large\"\n                disabled={isSubmitting}\n                loading={isSubmitting}\n              >\n                Sign In\n              </Button>\n            </LastSignInWrapper>\n          </div>\n        )\n      }}\n    </Form>\n```\n\nForm, Input, Button are imported from [internal package ui](link-to-ui-package).\n\nLet's focus on the following functionalities:\n1. validationSchema\n2. onSubmit\n3. HCaptcha\n\n### validationSchema\n\n```\nconst signInSchema = object({\n  email: string().email('Must be a valid email').required('Email is required'),\n  password: string().required('Password is required'),\n})\n```\n\nSupabase uses [yup](https://www.npmjs.com/package/yup), a schema builder for runtime value parsing and validation\n\n[Insert screenshot of this line - https://github.com/supabase/supabase/blob/master/apps/studio/components/interfaces/SignIn/SignInForm.tsx#L87C13-L87C38]\n\n## onSubmit\n\nonSubmit calls a function named `onSignIn`.\n\n[Insert screenshot of line - https://github.com/supabase/supabase/blob/master/apps/studio/components/interfaces/SignIn/SignInForm.tsx#L88]\n\nThere's a lot happening inside [onSignIn function](https://github.com/supabase/supabase/blob/master/apps/studio/components/interfaces/SignIn/SignInForm.tsx#L30).\n\n```\nconst toastId = toast.loading('Signing in...')\n\nlet token = captchaToken\nif (!token) {\n      const captchaResponse = await captchaRef.current?.execute({ async: true })\n      token = captchaResponse?.response ?? null\n}\n``` \ntoast is from [sonner package](https://www.npmjs.com/package/sonner)\n\n```\nlet token = captchaToken\nif (!token) {\n      const captchaResponse = await captchaRef.current?.execute({ async: true })\n      token = captchaResponse?.response ?? null\n}\n```\n\ncaptchaRef is reference to HCaptcha element\n\n```\n      <HCaptcha\n            ref={captchaRef}\n            sitekey={process.env.NEXT_PUBLIC_HCAPTCHA_SITE_KEY!}\n            size=\"invisible\"\n            onVerify={(token) => {\n            setCaptchaToken(token)\n            }}\n            onExpire={() => {\n            setCaptchaToken(null)\n            }}\n      />\n```\nHCaptcha is imported at the top of the file.\n\n```\nimport HCaptcha from '@hcaptcha/react-hcaptcha'\n```\n\nToken is updated based on captchaResponse.\n\nWith HCaptcha, you can send upto 1 million requests per month on free plan.\n\n```\nconst { error } = await auth.signInWithPassword({\n      email,\n      password,\n      options: { captchaToken: token ?? undefined },\n})\n```\n\n`auth` is imported from `lib/gotrue`\n\n```\nimport { auth, buildPathWithParams, getReturnToPath } from 'lib/gotrue'\n```\n\n> Note: Our focus is on the way the authentication is implemented. This means, we look at the sequence of operations performed,\nat a high level.\n\n### When the auth succeeds\n\nWhen the auth succeeds, the following are operations are performed based on error flag.\n\n```\nif (!error) {\n      setLastSignIn('email')\n      try {\n        const data = await getMfaAuthenticatorAssuranceLevel()\n        if (data) {\n          if (data.currentLevel !== data.nextLevel) {\n            toast.success(`You need to provide your second factor authentication`, { id: toastId })\n            const url = buildPathWithParams('/sign-in-mfa')\n            router.replace(url)\n            return\n          }\n        }\n\n        toast.success(`Signed in successfully!`, { id: toastId })\n        await queryClient.resetQueries()\n        const returnTo = getReturnToPath()\n        // since we're already on the /sign-in page, prevent redirect loops\n        router.push(returnTo === '/sign-in' ? '/projects' : returnTo)\n      } catch (error: any) {\n        toast.error(`Failed to sign in: ${(error as AuthError).message}`, { id: toastId })\n        Sentry.captureMessage('[CRITICAL] Failed to sign in via EP: ' + error.message)\n      }\n    }\n```\n\nLet's analyze the operations in the above snippet.\n\n```\nsetLastSignIn('email')\ntry {\n  const data = await getMfaAuthenticatorAssuranceLevel()\n  if (data) {\n    if (data.currentLevel !== data.nextLevel) {\n      toast.success(`You need to provide your second factor authentication`, { id: toastId })\n      const url = buildPathWithParams('/sign-in-mfa')\n      router.replace(url)\n      return\n    }\n  }\n```\nThis code handles the second factor authentication, notice how it redirects to a different url - `/sign-in-mfa`\nbased on the data returned by [getMfaAuthenticatorAssuranceLevel](https://github.com/supabase/supabase/blob/master/apps/studio/data/profile/mfa-authenticator-assurance-level-query.ts#L9)\n\n```\ntoast.success(`Signed in successfully!`, { id: toastId })\nawait queryClient.resetQueries()\nconst returnTo = getReturnToPath()\n// since we're already on the /sign-in page, prevent redirect loops\nrouter.push(returnTo === '/sign-in' ? '/projects' : returnTo)\n```\n\ntoast is shown, queryClient resets queries, supabase uses a query param - `returnTo` to redirect a user\nto the page they came from to \"signin\".\n\nThe comment there explains the mechanism to prevent redirect loops.\n\n```\ncatch (error: any) {\n  toast.error(`Failed to sign in: ${(error as AuthError).message}`, { id: toastId })\n  Sentry.captureMessage('[CRITICAL] Failed to sign in via EP: ' + error.message)\n}\n```\n\nWhen the sign in fails, it is reported to Sentry vai `captureMessage`.\n\n```\nelse {\n      setCaptchaToken(null)\n      captchaRef.current?.resetCaptcha()\n      \n      if (error.message.toLowerCase() === 'email not confirmed') {\n        return toast.error(\n          'Account has not been verified, please check the link sent to your email',\n          { id: toastId }\n        )\n      }\n      \n      toast.error(error.message, { id: toastId })\n      }\n}\n```\n\n`setCaptchaToken` is set to null, captchaRef is reset.\n\n`if (error.message.toLowerCase() === 'email not confirmed') {` - this checks if the error message contains 'email not confirmed'\nand shows a toast.error with a message.\n\nSummary of onSubmit operations:\n1. Show a toaster\n2. Get token from captchaResponse\n3. Call the signinWithPassword function\n4. If there's no error, check if the 2FA is enabled and redirect to get the 2FA code.\n5. If there's no 2FA, `router.push` based on redirectTo but with ternary operation to prevent redirect loop\n6. If for any reason steps 4, 5 fail, error is reported to Sentry via `captureMessage`\n7. If there's an error in signin, captcha is reset. In case the account is not verified, a toaster is shown\n\n\n# References:\n1. https://github.com/supabase/supabase/blob/master/apps/studio/pages/sign-in.tsx\n2. https://github.com/supabase/supabase/blob/master/apps/studio/components/interfaces/SignIn/SignInForm.tsx#L22\n3. https://www.hcaptcha.com/\n4. https://github.com/supabase/supabase/blob/master/apps/studio/lib/gotrue.ts\n5. https://github.com/supabase/supabase/blob/master/apps/studio/data/profile/mfa-authenticator-assurance-level-query.ts#L9",
      "code": "var Component=(()=>{var d=Object.create;var i=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var f=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),S=(t,e)=>{for(var s in e)i(t,s,{get:e[s],enumerable:!0})},o=(t,e,s,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of m(e))!g.call(t,a)&&a!==s&&i(t,a,{get:()=>e[a],enumerable:!(r=u(e,a))||r.enumerable});return t};var w=(t,e,s)=>(s=t!=null?d(b(t)):{},o(e||!t||!t.__esModule?i(s,\"default\",{value:t,enumerable:!0}):s,t)),I=t=>o(i({},\"__esModule\",{value:!0}),t);var l=f((L,c)=>{c.exports=_jsx_runtime});var v={};S(v,{default:()=>p,frontmatter:()=>y});var n=w(l()),y=void 0;function h(t){let e={a:\"a\",blockquote:\"blockquote\",code:\"code\",h1:\"h1\",h2:\"h2\",h3:\"h3\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",ul:\"ul\",...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"In this guide, we look at security practices used in Supabase.\"}),`\n`,(0,n.jsx)(e.p,{children:\"Following these resources,\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://nextjs.org/blog/security-nextjs-server-components-actions\",children:\"Security in Next.js\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://github.com/alan2207/bulletproof-react/blob/master/docs/security.md\",children:\"Bulletproof React's Security\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://strapi.io/integrations/nextjs-cms/topics/next-js-authentication\",children:\"Strap's authentication guide\"})}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"We analyze the following concepts in the Supabase source code:\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Authentication\"}),`\n`,(0,n.jsx)(e.li,{children:\"Authorization\"}),`\n`,(0,n.jsx)(e.li,{children:\"Data Handling Model\"}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:`[L: Authentication]\nSupabase makes authentication easy to implement but have you ever wondered how Supabase implemented its own authentication on their\napplication?`}),`\n`,(0,n.jsx)(e.p,{children:\"In this guide, we will analyze the Authentication mechanism in Supabase.\"}),`\n`,(0,n.jsx)(e.p,{children:\"Supabase uses pages router, at the time of writing this guide. Let's first analyze the sign in with email and password\"}),`\n`,(0,n.jsx)(e.p,{children:\"[Insert screenshot of email and password screen here]\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"There is \",(0,n.jsx)(e.a,{href:\"https://github.com/supabase/supabase/blob/master/apps/studio/pages/sign-in.tsx\",children:\"pages/sign-in.tsx\"}),`, it has a lot of\nimports, but in this guide, out focus is on `,(0,n.jsx)(e.a,{href:\"https://github.com/supabase/supabase/blob/master/apps/studio/pages/sign-in.tsx#L51\",children:\"SigninForm\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"[Insert screenshot of Line - \",(0,n.jsx)(e.a,{href:\"https://github.com/supabase/supabase/blob/master/apps/studio/pages/sign-in.tsx#L51\",children:\"https://github.com/supabase/supabase/blob/master/apps/studio/pages/sign-in.tsx#L51\"}),\"]\"]}),`\n`,(0,n.jsx)(e.h2,{id:\"signinform\",children:\"SigninForm\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:\"https://github.com/supabase/supabase/blob/master/apps/studio/pages/sign-in.tsx#L51\",children:\"sign-in page\"}),\" has a component named \",(0,n.jsx)(e.a,{href:\"https://github.com/supabase/supabase/blob/master/apps/studio/components/interfaces/SignIn/SignInForm.tsx#L22\",children:\"SigninForm\"})]}),`\n`,(0,n.jsx)(e.p,{children:\"Let's analyze sign-in form.\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:`<Form\n      validateOnBlur\n      id=\"signIn-form\"\n      initialValues={{ email: '', password: '' }}\n      validationSchema={signInSchema}\n      onSubmit={onSignIn}\n    >\n      {({ isSubmitting }: { isSubmitting: boolean }) => {\n        return (\n          <div className=\"flex flex-col gap-4\">\n            <Input\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              label=\"Email\"\n              placeholder=\"you@example.com\"\n              disabled={isSubmitting}\n              autoComplete=\"email\"\n            />\n\n            <div className=\"relative\">\n              <Input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                label=\"Password\"\n                placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\n                disabled={isSubmitting}\n                autoComplete=\"current-password\"\n              />\n\n              {/* positioned using absolute instead of labelOptional prop so tabbing between inputs works smoothly */}\n              <Link\n                href=\"/forgot-password\"\n                className=\"absolute top-0 right-0 text-sm text-foreground-lighter\"\n              >\n                Forgot Password?\n              </Link>\n            </div>\n\n            <div className=\"self-center\">\n              <HCaptcha\n                ref={captchaRef}\n                sitekey={process.env.NEXT_PUBLIC_HCAPTCHA_SITE_KEY!}\n                size=\"invisible\"\n                onVerify={(token) => {\n                  setCaptchaToken(token)\n                }}\n                onExpire={() => {\n                  setCaptchaToken(null)\n                }}\n              />\n            </div>\n\n            <LastSignInWrapper type=\"email\">\n              <Button\n                block\n                form=\"signIn-form\"\n                htmlType=\"submit\"\n                size=\"large\"\n                disabled={isSubmitting}\n                loading={isSubmitting}\n              >\n                Sign In\n              </Button>\n            </LastSignInWrapper>\n          </div>\n        )\n      }}\n    </Form>\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Form, Input, Button are imported from \",(0,n.jsx)(e.a,{href:\"link-to-ui-package\",children:\"internal package ui\"}),\".\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Let's focus on the following functionalities:\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsx)(e.li,{children:\"validationSchema\"}),`\n`,(0,n.jsx)(e.li,{children:\"onSubmit\"}),`\n`,(0,n.jsx)(e.li,{children:\"HCaptcha\"}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{id:\"validationschema\",children:\"validationSchema\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:`const signInSchema = object({\n  email: string().email('Must be a valid email').required('Email is required'),\n  password: string().required('Password is required'),\n})\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Supabase uses \",(0,n.jsx)(e.a,{href:\"https://www.npmjs.com/package/yup\",children:\"yup\"}),\", a schema builder for runtime value parsing and validation\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"[Insert screenshot of this line - \",(0,n.jsx)(e.a,{href:\"https://github.com/supabase/supabase/blob/master/apps/studio/components/interfaces/SignIn/SignInForm.tsx#L87C13-L87C38\",children:\"https://github.com/supabase/supabase/blob/master/apps/studio/components/interfaces/SignIn/SignInForm.tsx#L87C13-L87C38\"}),\"]\"]}),`\n`,(0,n.jsx)(e.h2,{id:\"onsubmit\",children:\"onSubmit\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"onSubmit calls a function named \",(0,n.jsx)(e.code,{children:\"onSignIn\"}),\".\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"[Insert screenshot of line - \",(0,n.jsx)(e.a,{href:\"https://github.com/supabase/supabase/blob/master/apps/studio/components/interfaces/SignIn/SignInForm.tsx#L88\",children:\"https://github.com/supabase/supabase/blob/master/apps/studio/components/interfaces/SignIn/SignInForm.tsx#L88\"}),\"]\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"There's a lot happening inside \",(0,n.jsx)(e.a,{href:\"https://github.com/supabase/supabase/blob/master/apps/studio/components/interfaces/SignIn/SignInForm.tsx#L30\",children:\"onSignIn function\"}),\".\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:`const toastId = toast.loading('Signing in...')\n\nlet token = captchaToken\nif (!token) {\n      const captchaResponse = await captchaRef.current?.execute({ async: true })\n      token = captchaResponse?.response ?? null\n}\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"toast is from \",(0,n.jsx)(e.a,{href:\"https://www.npmjs.com/package/sonner\",children:\"sonner package\"})]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:`let token = captchaToken\nif (!token) {\n      const captchaResponse = await captchaRef.current?.execute({ async: true })\n      token = captchaResponse?.response ?? null\n}\n`})}),`\n`,(0,n.jsx)(e.p,{children:\"captchaRef is reference to HCaptcha element\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:`      <HCaptcha\n            ref={captchaRef}\n            sitekey={process.env.NEXT_PUBLIC_HCAPTCHA_SITE_KEY!}\n            size=\"invisible\"\n            onVerify={(token) => {\n            setCaptchaToken(token)\n            }}\n            onExpire={() => {\n            setCaptchaToken(null)\n            }}\n      />\n`})}),`\n`,(0,n.jsx)(e.p,{children:\"HCaptcha is imported at the top of the file.\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:`import HCaptcha from '@hcaptcha/react-hcaptcha'\n`})}),`\n`,(0,n.jsx)(e.p,{children:\"Token is updated based on captchaResponse.\"}),`\n`,(0,n.jsx)(e.p,{children:\"With HCaptcha, you can send upto 1 million requests per month on free plan.\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:`const { error } = await auth.signInWithPassword({\n      email,\n      password,\n      options: { captchaToken: token ?? undefined },\n})\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:\"auth\"}),\" is imported from \",(0,n.jsx)(e.code,{children:\"lib/gotrue\"})]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:`import { auth, buildPathWithParams, getReturnToPath } from 'lib/gotrue'\n`})}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsx)(e.p,{children:`Note: Our focus is on the way the authentication is implemented. This means, we look at the sequence of operations performed,\nat a high level.`}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{id:\"when-the-auth-succeeds\",children:\"When the auth succeeds\"}),`\n`,(0,n.jsx)(e.p,{children:\"When the auth succeeds, the following are operations are performed based on error flag.\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:`if (!error) {\n      setLastSignIn('email')\n      try {\n        const data = await getMfaAuthenticatorAssuranceLevel()\n        if (data) {\n          if (data.currentLevel !== data.nextLevel) {\n            toast.success(\\`You need to provide your second factor authentication\\`, { id: toastId })\n            const url = buildPathWithParams('/sign-in-mfa')\n            router.replace(url)\n            return\n          }\n        }\n\n        toast.success(\\`Signed in successfully!\\`, { id: toastId })\n        await queryClient.resetQueries()\n        const returnTo = getReturnToPath()\n        // since we're already on the /sign-in page, prevent redirect loops\n        router.push(returnTo === '/sign-in' ? '/projects' : returnTo)\n      } catch (error: any) {\n        toast.error(\\`Failed to sign in: \\${(error as AuthError).message}\\`, { id: toastId })\n        Sentry.captureMessage('[CRITICAL] Failed to sign in via EP: ' + error.message)\n      }\n    }\n`})}),`\n`,(0,n.jsx)(e.p,{children:\"Let's analyze the operations in the above snippet.\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:`setLastSignIn('email')\ntry {\n  const data = await getMfaAuthenticatorAssuranceLevel()\n  if (data) {\n    if (data.currentLevel !== data.nextLevel) {\n      toast.success(\\`You need to provide your second factor authentication\\`, { id: toastId })\n      const url = buildPathWithParams('/sign-in-mfa')\n      router.replace(url)\n      return\n    }\n  }\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"This code handles the second factor authentication, notice how it redirects to a different url - \",(0,n.jsx)(e.code,{children:\"/sign-in-mfa\"}),`\nbased on the data returned by `,(0,n.jsx)(e.a,{href:\"https://github.com/supabase/supabase/blob/master/apps/studio/data/profile/mfa-authenticator-assurance-level-query.ts#L9\",children:\"getMfaAuthenticatorAssuranceLevel\"})]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:`toast.success(\\`Signed in successfully!\\`, { id: toastId })\nawait queryClient.resetQueries()\nconst returnTo = getReturnToPath()\n// since we're already on the /sign-in page, prevent redirect loops\nrouter.push(returnTo === '/sign-in' ? '/projects' : returnTo)\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"toast is shown, queryClient resets queries, supabase uses a query param - \",(0,n.jsx)(e.code,{children:\"returnTo\"}),` to redirect a user\nto the page they came from to \"signin\".`]}),`\n`,(0,n.jsx)(e.p,{children:\"The comment there explains the mechanism to prevent redirect loops.\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:`catch (error: any) {\n  toast.error(\\`Failed to sign in: \\${(error as AuthError).message}\\`, { id: toastId })\n  Sentry.captureMessage('[CRITICAL] Failed to sign in via EP: ' + error.message)\n}\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[\"When the sign in fails, it is reported to Sentry vai \",(0,n.jsx)(e.code,{children:\"captureMessage\"}),\".\"]}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:`else {\n      setCaptchaToken(null)\n      captchaRef.current?.resetCaptcha()\n      \n      if (error.message.toLowerCase() === 'email not confirmed') {\n        return toast.error(\n          'Account has not been verified, please check the link sent to your email',\n          { id: toastId }\n        )\n      }\n      \n      toast.error(error.message, { id: toastId })\n      }\n}\n`})}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:\"setCaptchaToken\"}),\" is set to null, captchaRef is reset.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.code,{children:\"if (error.message.toLowerCase() === 'email not confirmed') {\"}),` - this checks if the error message contains 'email not confirmed'\nand shows a toast.error with a message.`]}),`\n`,(0,n.jsx)(e.p,{children:\"Summary of onSubmit operations:\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Show a toaster\"}),`\n`,(0,n.jsx)(e.li,{children:\"Get token from captchaResponse\"}),`\n`,(0,n.jsx)(e.li,{children:\"Call the signinWithPassword function\"}),`\n`,(0,n.jsx)(e.li,{children:\"If there's no error, check if the 2FA is enabled and redirect to get the 2FA code.\"}),`\n`,(0,n.jsxs)(e.li,{children:[\"If there's no 2FA, \",(0,n.jsx)(e.code,{children:\"router.push\"}),\" based on redirectTo but with ternary operation to prevent redirect loop\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"If for any reason steps 4, 5 fail, error is reported to Sentry via \",(0,n.jsx)(e.code,{children:\"captureMessage\"})]}),`\n`,(0,n.jsx)(e.li,{children:\"If there's an error in signin, captcha is reset. In case the account is not verified, a toaster is shown\"}),`\n`]}),`\n`,(0,n.jsx)(e.h1,{id:\"references\",children:\"References:\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://github.com/supabase/supabase/blob/master/apps/studio/pages/sign-in.tsx\",children:\"https://github.com/supabase/supabase/blob/master/apps/studio/pages/sign-in.tsx\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://github.com/supabase/supabase/blob/master/apps/studio/components/interfaces/SignIn/SignInForm.tsx#L22\",children:\"https://github.com/supabase/supabase/blob/master/apps/studio/components/interfaces/SignIn/SignInForm.tsx#L22\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://www.hcaptcha.com/\",children:\"https://www.hcaptcha.com/\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://github.com/supabase/supabase/blob/master/apps/studio/lib/gotrue.ts\",children:\"https://github.com/supabase/supabase/blob/master/apps/studio/lib/gotrue.ts\"})}),`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://github.com/supabase/supabase/blob/master/apps/studio/data/profile/mfa-authenticator-assurance-level-query.ts#L9\",children:\"https://github.com/supabase/supabase/blob/master/apps/studio/data/profile/mfa-authenticator-assurance-level-query.ts#L9\"})}),`\n`]})]})}function p(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(h,{...t})}):h(t)}return I(v);})();\n;return Component;"
    },
    "_id": "course/codebase-architecture/security/supabase/introduction.mdx",
    "_raw": {
      "sourceFilePath": "course/codebase-architecture/security/supabase/introduction.mdx",
      "sourceFileName": "introduction.mdx",
      "sourceFileDir": "course/codebase-architecture/security/supabase",
      "contentType": "mdx",
      "flattenedPath": "course/codebase-architecture/security/supabase/introduction"
    },
    "type": "Doc",
    "slug": "/course/codebase-architecture/security/supabase/introduction",
    "slugAsParams": "codebase-architecture/security/supabase/introduction"
  },
  {
    "published": false,
    "featured": false,
    "component": false,
    "toc": true,
    "body": {
      "raw": "[Architecture: Tooling In Shadcn-ui/ui]\n[C: Introduction]\n\nIn this guide, you will learn the tooling used in [Shadcn-ui/ui repository](https://github.com/shadcn-ui/ui).\n\n# What's Tooling?\nYou might be wondering what tooling means. If you check out [Bulletproof React's Project Standards](https://github.com/alan2207/bulletproof-react/blob/master/docs/project-standards.md),\nit describes tools such as ESLint, Prettier, Husky etc.,\n\nSimilarly, in this guide, we provide an in-depth shadcn-ui/ui tooling analysis.\n\n# Shadcn-ui/ui Tooling \n\nShadcn-ui/ui is a monorepo, you will find more information about monorepo in [Project Structure](https://app.thinkthroo.com/architecture#project-structure).\n\nFor us to study the tooling used in this monorepo, we would have to study the tooling used:\n1. At [root level](https://github.com/shadcn-ui/ui)\n2. In [apps in shadcn-ui/ui monorepo.](https://github.com/shadcn-ui/ui/tree/main/apps/www)\n3. In [packages in shadcn-ui/ui monorepo.](https://github.com/shadcn-ui/ui/tree/main/packages)\n\nTooling might vary based on an app or packages.\n\n# Concepts you will learn:\n\nYou will be learning the configuration used in this large monorepo. Read through this guide to understand how these tools work together.\n\n## Tools used at root level:\n- [.editorconfig](https://github.com/shadcn-ui/ui/blob/main/.editorconfig) \n- [.eslintrc.json](https://github.com/shadcn-ui/ui/blob/main/.eslintrc.json)\n- [.kodiak.toml](https://github.com/shadcn-ui/ui/blob/main/.kodiak.toml)\n- [.npmrc](https://github.com/shadcn-ui/ui/blob/main/.npmrc)\n- [.nvmrc](https://github.com/shadcn-ui/ui/blob/main/.nvmrc)\n- [.prettierignore](https://github.com/shadcn-ui/ui/blob/main/.prettierignore)\n- [package.json](https://github.com/shadcn-ui/ui/blob/main/package.json)\n- [pnpm-lock.yaml](https://github.com/shadcn-ui/ui/blob/main/pnpm-lock.yaml)\n- [pnpm-workspace.yaml](https://github.com/shadcn-ui/ui/blob/main/pnpm-workspace.yaml)\n- [postcss.config.cjs](https://github.com/shadcn-ui/ui/blob/main/postcss.config.cjs)\n- [prettier.config.cjs](https://github.com/shadcn-ui/ui/blob/main/prettier.config.cjs)\n- [tailwind.config.cjs](https://github.com/shadcn-ui/ui/blob/main/tailwind.config.cjs)\n- [tsconfig.json](https://github.com/shadcn-ui/ui/blob/main/tsconfig.json)\n- [turbo.json](https://github.com/shadcn-ui/ui/blob/main/turbo.json)\n- [vitest.config.ts](https://github.com/shadcn-ui/ui/blob/main/vitest.config.ts)\n\n## Tools used in `apps/www` app:\n- [.prettierignore](https://github.com/shadcn-ui/ui/blob/main/apps/www/.prettierignore)\n- [.prettierignore](https://github.com/shadcn-ui/ui/blob/main/apps/www/.prettierignore)\n- [contentlayer.config.js](https://github.com/shadcn-ui/ui/blob/main/apps/www/contentlayer.config.js)\n- [next-env.d.ts](https://github.com/shadcn-ui/ui/blob/main/apps/www/next-env.d.ts)\n- [next.config.mjs](https://github.com/shadcn-ui/ui/blob/main/apps/www/next.config.mjs)\n- [package.json](https://github.com/shadcn-ui/ui/blob/main/apps/www/package.json)\n- [postcss.config.cjs](https://github.com/shadcn-ui/ui/blob/main/apps/www/postcss.config.cjs)\n- [postcss.config.cjs](https://github.com/shadcn-ui/ui/blob/main/apps/www/postcss.config.cjs)\n- [tailwind.config.cjs](https://github.com/shadcn-ui/ui/blob/main/apps/www/tailwind.config.cjs)\n- [tsconfig.json](https://github.com/shadcn-ui/ui/blob/main/apps/www/tsconfig.json)\n- [tsconfig.scripts.json](https://github.com/shadcn-ui/ui/blob/main/apps/www/tsconfig.scripts.json)\n\n## Tools used in `packages/cli` app:\n- [.prettierignore](https://github.com/shadcn-ui/ui/blob/main/packages/cli/.prettierignore)\n- [CHANGELOG.md](https://github.com/shadcn-ui/ui/blob/main/packages/cli/CHANGELOG.md) \n- [package.json](https://github.com/shadcn-ui/ui/blob/main/packages/cli/package.json)\n- [tsconfig.json](https://github.com/shadcn-ui/ui/blob/main/packages/cli/tsconfig.json)\n- [tsup.config.ts](https://github.com/shadcn-ui/ui/blob/main/packages/cli/tsup.config.ts)\n\n## Tools used in `packages/shadcn` app:\n- [.prettierignore](https://github.com/shadcn-ui/ui/blob/main/packages/shadcn/.prettierignore)\n- [CHANGELOG.md](https://github.com/shadcn-ui/ui/blob/main/packages/shadcn/CHANGELOG.md)\n- [package.json](https://github.com/shadcn-ui/ui/blob/main/packages/shadcn/package.json)\n- [tsconfig.json](https://github.com/shadcn-ui/ui/blob/main/packages/shadcn/tsconfig.json)\n- [tsup.config.ts](https://github.com/shadcn-ui/ui/blob/main/packages/shadcn/tsup.config.ts)\n\n# Conclusion:\nIn this guide, we introduced the tooling concepts you would learn. There will be additional resources provided pointing\nto source code, documentation and an in-depth analysis of configuration used across the shadcn-ui/ui monorepo. \n\nReferences:\n1. https://github.com/shadcn-ui/ui/tree/main/apps/www\n2. https://github.com/shadcn-ui/ui/tree/main/packages\n3. https://github.com/alan2207/bulletproof-react/blob/master/docs/project-standards.md",
      "code": "var Component=(()=>{var u=Object.create;var t=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var f=(e,i)=>()=>(i||e((i={exports:{}}).exports,i),i.exports),w=(e,i)=>{for(var c in i)t(e,c,{get:i[c],enumerable:!0})},s=(e,i,c,o)=>{if(i&&typeof i==\"object\"||typeof i==\"function\")for(let h of g(i))!b.call(e,h)&&h!==c&&t(e,h,{get:()=>i[h],enumerable:!(o=p(i,h))||o.enumerable});return e};var j=(e,i,c)=>(c=e!=null?u(m(e)):{},s(i||!e||!e.__esModule?t(c,\"default\",{value:e,enumerable:!0}):c,e)),k=e=>s(t({},\"__esModule\",{value:!0}),e);var r=f((C,a)=>{a.exports=_jsx_runtime});var v={};w(v,{default:()=>d,frontmatter:()=>y});var n=j(r()),y=void 0;function l(e){let i={a:\"a\",code:\"code\",h1:\"h1\",h2:\"h2\",li:\"li\",ol:\"ol\",p:\"p\",ul:\"ul\",...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.p,{children:`[Architecture: Tooling In Shadcn-ui/ui]\n[C: Introduction]`}),`\n`,(0,n.jsxs)(i.p,{children:[\"In this guide, you will learn the tooling used in \",(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui\",children:\"Shadcn-ui/ui repository\"}),\".\"]}),`\n`,(0,n.jsx)(i.h1,{id:\"whats-tooling\",children:\"What's Tooling?\"}),`\n`,(0,n.jsxs)(i.p,{children:[\"You might be wondering what tooling means. If you check out \",(0,n.jsx)(i.a,{href:\"https://github.com/alan2207/bulletproof-react/blob/master/docs/project-standards.md\",children:\"Bulletproof React's Project Standards\"}),`,\nit describes tools such as ESLint, Prettier, Husky etc.,`]}),`\n`,(0,n.jsx)(i.p,{children:\"Similarly, in this guide, we provide an in-depth shadcn-ui/ui tooling analysis.\"}),`\n`,(0,n.jsx)(i.h1,{id:\"shadcn-uiui-tooling\",children:\"Shadcn-ui/ui Tooling\"}),`\n`,(0,n.jsxs)(i.p,{children:[\"Shadcn-ui/ui is a monorepo, you will find more information about monorepo in \",(0,n.jsx)(i.a,{href:\"https://app.thinkthroo.com/architecture#project-structure\",children:\"Project Structure\"}),\".\"]}),`\n`,(0,n.jsx)(i.p,{children:\"For us to study the tooling used in this monorepo, we would have to study the tooling used:\"}),`\n`,(0,n.jsxs)(i.ol,{children:[`\n`,(0,n.jsxs)(i.li,{children:[\"At \",(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui\",children:\"root level\"})]}),`\n`,(0,n.jsxs)(i.li,{children:[\"In \",(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/tree/main/apps/www\",children:\"apps in shadcn-ui/ui monorepo.\"})]}),`\n`,(0,n.jsxs)(i.li,{children:[\"In \",(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/tree/main/packages\",children:\"packages in shadcn-ui/ui monorepo.\"})]}),`\n`]}),`\n`,(0,n.jsx)(i.p,{children:\"Tooling might vary based on an app or packages.\"}),`\n`,(0,n.jsx)(i.h1,{id:\"concepts-you-will-learn\",children:\"Concepts you will learn:\"}),`\n`,(0,n.jsx)(i.p,{children:\"You will be learning the configuration used in this large monorepo. Read through this guide to understand how these tools work together.\"}),`\n`,(0,n.jsx)(i.h2,{id:\"tools-used-at-root-level\",children:\"Tools used at root level:\"}),`\n`,(0,n.jsxs)(i.ul,{children:[`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/.editorconfig\",children:\".editorconfig\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/.eslintrc.json\",children:\".eslintrc.json\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/.kodiak.toml\",children:\".kodiak.toml\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/.npmrc\",children:\".npmrc\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/.nvmrc\",children:\".nvmrc\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/.prettierignore\",children:\".prettierignore\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/package.json\",children:\"package.json\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/pnpm-lock.yaml\",children:\"pnpm-lock.yaml\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/pnpm-workspace.yaml\",children:\"pnpm-workspace.yaml\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/postcss.config.cjs\",children:\"postcss.config.cjs\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/prettier.config.cjs\",children:\"prettier.config.cjs\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/tailwind.config.cjs\",children:\"tailwind.config.cjs\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/tsconfig.json\",children:\"tsconfig.json\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/turbo.json\",children:\"turbo.json\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/vitest.config.ts\",children:\"vitest.config.ts\"})}),`\n`]}),`\n`,(0,n.jsxs)(i.h2,{id:\"tools-used-in-appswww-app\",children:[\"Tools used in \",(0,n.jsx)(i.code,{children:\"apps/www\"}),\" app:\"]}),`\n`,(0,n.jsxs)(i.ul,{children:[`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/apps/www/.prettierignore\",children:\".prettierignore\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/apps/www/.prettierignore\",children:\".prettierignore\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/apps/www/contentlayer.config.js\",children:\"contentlayer.config.js\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/apps/www/next-env.d.ts\",children:\"next-env.d.ts\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/apps/www/next.config.mjs\",children:\"next.config.mjs\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/apps/www/package.json\",children:\"package.json\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/apps/www/postcss.config.cjs\",children:\"postcss.config.cjs\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/apps/www/postcss.config.cjs\",children:\"postcss.config.cjs\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/apps/www/tailwind.config.cjs\",children:\"tailwind.config.cjs\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/apps/www/tsconfig.json\",children:\"tsconfig.json\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/apps/www/tsconfig.scripts.json\",children:\"tsconfig.scripts.json\"})}),`\n`]}),`\n`,(0,n.jsxs)(i.h2,{id:\"tools-used-in-packagescli-app\",children:[\"Tools used in \",(0,n.jsx)(i.code,{children:\"packages/cli\"}),\" app:\"]}),`\n`,(0,n.jsxs)(i.ul,{children:[`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/cli/.prettierignore\",children:\".prettierignore\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/cli/CHANGELOG.md\",children:\"CHANGELOG.md\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/cli/package.json\",children:\"package.json\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/cli/tsconfig.json\",children:\"tsconfig.json\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/cli/tsup.config.ts\",children:\"tsup.config.ts\"})}),`\n`]}),`\n`,(0,n.jsxs)(i.h2,{id:\"tools-used-in-packagesshadcn-app\",children:[\"Tools used in \",(0,n.jsx)(i.code,{children:\"packages/shadcn\"}),\" app:\"]}),`\n`,(0,n.jsxs)(i.ul,{children:[`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/shadcn/.prettierignore\",children:\".prettierignore\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/shadcn/CHANGELOG.md\",children:\"CHANGELOG.md\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/shadcn/package.json\",children:\"package.json\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/shadcn/tsconfig.json\",children:\"tsconfig.json\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/shadcn/tsup.config.ts\",children:\"tsup.config.ts\"})}),`\n`]}),`\n`,(0,n.jsx)(i.h1,{id:\"conclusion\",children:\"Conclusion:\"}),`\n`,(0,n.jsx)(i.p,{children:`In this guide, we introduced the tooling concepts you would learn. There will be additional resources provided pointing\nto source code, documentation and an in-depth analysis of configuration used across the shadcn-ui/ui monorepo.`}),`\n`,(0,n.jsx)(i.p,{children:\"References:\"}),`\n`,(0,n.jsxs)(i.ol,{children:[`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/tree/main/apps/www\",children:\"https://github.com/shadcn-ui/ui/tree/main/apps/www\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/shadcn-ui/ui/tree/main/packages\",children:\"https://github.com/shadcn-ui/ui/tree/main/packages\"})}),`\n`,(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:\"https://github.com/alan2207/bulletproof-react/blob/master/docs/project-standards.md\",children:\"https://github.com/alan2207/bulletproof-react/blob/master/docs/project-standards.md\"})}),`\n`]})]})}function d(e={}){let{wrapper:i}=e.components||{};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}return k(v);})();\n;return Component;"
    },
    "_id": "course/codebase-architecture/tooling/shadcn-ui/introduction.mdx",
    "_raw": {
      "sourceFilePath": "course/codebase-architecture/tooling/shadcn-ui/introduction.mdx",
      "sourceFileName": "introduction.mdx",
      "sourceFileDir": "course/codebase-architecture/tooling/shadcn-ui",
      "contentType": "mdx",
      "flattenedPath": "course/codebase-architecture/tooling/shadcn-ui/introduction"
    },
    "type": "Doc",
    "slug": "/course/codebase-architecture/tooling/shadcn-ui/introduction",
    "slugAsParams": "codebase-architecture/tooling/shadcn-ui/introduction"
  }
]