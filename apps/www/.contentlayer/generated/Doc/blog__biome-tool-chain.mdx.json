{
  "title": "Biome.js, a toolchain to format and lint your web project\r",
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\r\nI found that [t3-env](https://github.com/t3-oss/t3-env/blob/main/package.json#L10) uses [Biomejs](https://biomejs.dev/) for linting purposes. This article provides an overview of Biomejs and usage in t3-env.\r\n\r\n### Biome.js\r\n\r\nBiome.js is a toolchain for your web project. It helps with formatting and linting your project.\r\n\r\n#### Quick start\r\n\r\n1. Installation\r\n    \r\n\r\n```plaintext\r\nnpm install - save-dev - save-exact @biomejs/biome\r\n```\r\n\r\n2\\. Configuration\r\n\r\n```plaintext\r\nnpx @biomejs/biome init\r\n```\r\n\r\nWhen you run the above command, it automatically creates biome.json file. Below is the code generated by default when you run  \r\nthe above command in biome.json.\r\n\r\n```plaintext\r\n{\r\n \"$schema\": \"https://biomejs.dev/schemas/1.9.4/schema.json\",\r\n \"vcs\": {\r\n \"enabled\": false,\r\n \"clientKind\": \"git\",\r\n \"useIgnoreFile\": false\r\n },\r\n \"files\": { \"ignoreUnknown\": false, \"ignore\": [] },\r\n \"formatter\": { \"enabled\": true, \"indentStyle\": \"tab\" },\r\n \"organizeImports\": { \"enabled\": true },\r\n \"linter\": {\r\n \"enabled\": true,\r\n \"rules\": { \"recommended\": true }\r\n },\r\n \"javascript\": { \"formatter\": { \"quoteStyle\": \"double\" } }\r\n}\r\n```\r\n\r\nThe linter.enabled: true enables the linter and rules.recommended: true enables the recommended rules. This corresponds to the default settings.\r\n\r\nFormatting is enabled by default, but you can disable it by explicitly using formatter.enabled: false.\r\n\r\n3\\. Biome commands\r\n\r\na. format\r\n\r\nYou can format files and directories using the format command with the — write option:\r\n\r\n```plaintext\r\nnpx @biomejs/biome format - write <files>\r\n```\r\n\r\nb. lint\r\n\r\nYou can lint and apply safe fixes to files and directories using the lint command with the — write option:\r\n\r\n```plaintext\r\nnpx @biomejs/biome lint - write <files>\r\n```\r\n\r\nc. check\r\n\r\nYou can run both, format and link, by leveraging the check command:\r\n\r\n```plaintext\r\nnpx @biomejs/biome check - write <files>\r\n```\r\n\r\n### Biome.js usage in t3-env\r\n\r\n1. Scripts in package.json\r\n    \r\n\r\n```plaintext\r\n\"lint\": \"biome check .\",\r\n\"lint:fix\": \"biome check . - apply\",\r\n```\r\n\r\nThis is found to be using the `check` CLI command that applies formatting and linting. There’s a variation though, lint only checks the linting issues but when you do lint:fix, it is executed with — apply.\r\n\r\n — apply — Alias for — write, writes safe fixes, formatting and import sorting (deprecated, use — write)\r\n\r\n2\\. [biome.json](https://github.com/t3-oss/t3-env/blob/main/biome.json)\r\n\r\n```plaintext\r\n{\r\n \"$schema\": \"https://biomejs.dev/schemas/1.5.3/schema.json\",\r\n \"organizeImports\": {\r\n \"enabled\": true\r\n },\r\n \"formatter\": {\r\n \"enabled\": true,\r\n \"indentWidth\": 2,\r\n \"indentStyle\": \"space\"\r\n },\r\n \"linter\": {\r\n \"enabled\": true,\r\n \"rules\": {\r\n \"recommended\": true,\r\n \"a11y\": {\r\n \"noSvgWithoutTitle\": \"off\",\r\n \"useButtonType\": \"off\",\r\n \"useAltText\": \"off\"\r\n },\r\n \"complexity\": {\r\n \"noBannedTypes\": \"off\"\r\n },\r\n \"style\": {\r\n \"useImportType\": \"error\",\r\n \"useExportType\": \"error\"\r\n }\r\n }\r\n },\r\n \"overrides\": [\r\n {\r\n \"include\": [\"**/*.test.ts\"],\r\n \"linter\": {\r\n \"rules\": {\r\n \"suspicious\": {\r\n \"noExplicitAny\": \"off\"\r\n }\r\n }\r\n }\r\n }\r\n ],\r\n \"vcs\": {\r\n \"enabled\": true,\r\n \"clientKind\": \"git\",\r\n \"useIgnoreFile\": true\r\n }\r\n}\r\n```\r\n\r\n# **About me:**\r\n\r\nHey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\r\n\r\nI am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com\r\n\r\nMy Github — [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\r\n\r\nMy website — [https://ramunarasinga.com](https://ramunarasinga.com/)\r\n\r\nMy Youtube channel — [https://www.youtube.com/@thinkthroo](https://www.youtube.com/@thinkthroo)\r\n\r\nLearning platform — [https://thinkthroo.com](https://thinkthroo.com/)\r\n\r\nCodebase Architecture — [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\r\n\r\nBest practices — [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\r\n\r\nProduction-grade projects — [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\r\n\r\n### References:\r\n\r\n1\\. [https://biomejs.dev/](https://biomejs.dev/)  \r\n2\\. [https://github.com/t3-oss/t3-env/blob/main/biome.json](https://github.com/t3-oss/t3-env/blob/main/biome.json)  \r\n3\\. [https://github.com/t3-oss/t3-env/blob/main/package.json#L10](https://github.com/t3-oss/t3-env/blob/main/package.json#L10)",
    "code": "var Component=(()=>{var o=Object.create;var s=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var b=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),N=(a,e)=>{for(var i in e)s(a,i,{get:e[i],enumerable:!0})},r=(a,e,i,t)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let l of u(e))!f.call(a,l)&&l!==i&&s(a,l,{get:()=>e[l],enumerable:!(t=m(e,l))||t.enumerable});return a};var y=(a,e,i)=>(i=a!=null?o(g(a)):{},r(e||!a||!a.__esModule?s(i,\"default\",{value:a,enumerable:!0}):i,a)),j=a=>r(s({},\"__esModule\",{value:!0}),a);var d=b((k,c)=>{c.exports=_jsx_runtime});var x={};N(x,{default:()=>p,frontmatter:()=>v});var n=y(d()),v={title:\"Biome.js, a toolchain to format and lint your web\\xA0project\"};function h(a){let e={a:\"a\",br:\"br\",code:\"code\",div:\"div\",h1:\"h1\",h3:\"h3\",h4:\"h4\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"I found that \",(0,n.jsx)(e.a,{href:\"https://github.com/t3-oss/t3-env/blob/main/package.json#L10\",children:\"t3-env\"}),\" uses \",(0,n.jsx)(e.a,{href:\"https://biomejs.dev/\",children:\"Biomejs\"}),\" for linting purposes. This article provides an overview of Biomejs and usage in t3-env.\"]}),`\n`,(0,n.jsx)(e.h3,{id:\"biomejs\",children:\"Biome.js\"}),`\n`,(0,n.jsx)(e.p,{children:\"Biome.js is a toolchain for your web project. It helps with formatting and linting your project.\"}),`\n`,(0,n.jsx)(e.h4,{id:\"quick-start\",children:\"Quick start\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Installation\"}),`\n`]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"npm install - save-dev - save-exact @biomejs/biome\"})})})})}),`\n`,(0,n.jsx)(e.p,{children:\"2. Configuration\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"npx @biomejs/biome init\"})})})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"When you run the above command, it automatically creates biome.json file. Below is the code generated by default when you run\",(0,n.jsx)(e.br,{}),`\n`,\"the above command in biome.json.\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"{\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"$schema\": \"https://biomejs.dev/schemas/1.9.4/schema.json\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"vcs\": {'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"enabled\": false,'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"clientKind\": \"git\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"useIgnoreFile\": false'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" },\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"files\": { \"ignoreUnknown\": false, \"ignore\": [] },'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"formatter\": { \"enabled\": true, \"indentStyle\": \"tab\" },'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"organizeImports\": { \"enabled\": true },'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"linter\": {'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"enabled\": true,'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"rules\": { \"recommended\": true }'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" },\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"javascript\": { \"formatter\": { \"quoteStyle\": \"double\" } }'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}\"})})]})})}),`\n`,(0,n.jsx)(e.p,{children:\"The linter.enabled: true enables the linter and rules.recommended: true enables the recommended rules. This corresponds to the default settings.\"}),`\n`,(0,n.jsx)(e.p,{children:\"Formatting is enabled by default, but you can disable it by explicitly using formatter.enabled: false.\"}),`\n`,(0,n.jsx)(e.p,{children:\"3. Biome commands\"}),`\n`,(0,n.jsx)(e.p,{children:\"a. format\"}),`\n`,(0,n.jsx)(e.p,{children:\"You can format files and directories using the format command with the\\u200A\\u2014\\u200Awrite option:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"npx @biomejs/biome format - write <files>\"})})})})}),`\n`,(0,n.jsx)(e.p,{children:\"b. lint\"}),`\n`,(0,n.jsx)(e.p,{children:\"You can lint and apply safe fixes to files and directories using the lint command with the\\u200A\\u2014\\u200Awrite option:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"npx @biomejs/biome lint - write <files>\"})})})})}),`\n`,(0,n.jsx)(e.p,{children:\"c. check\"}),`\n`,(0,n.jsx)(e.p,{children:\"You can run both, format and link, by leveraging the check command:\"}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"npx @biomejs/biome check - write <files>\"})})})})}),`\n`,(0,n.jsx)(e.h3,{id:\"biomejs-usage-int3-env\",children:\"Biome.js usage in\\xA0t3-env\"}),`\n`,(0,n.jsxs)(e.ol,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Scripts in package.json\"}),`\n`]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'\"lint\": \"biome check .\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:'\"lint:fix\": \"biome check . - apply\",'})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"This is found to be using the \",(0,n.jsx)(e.code,{children:\"check\"}),\" CLI command that applies formatting and linting. There\\u2019s a variation though, lint only checks the linting issues but when you do lint:fix, it is executed with\\u200A\\u2014\\u200Aapply.\"]}),`\n`,(0,n.jsx)(e.p,{children:\"\\u200A\\u2014\\u200Aapply\\u200A\\u2014\\u200AAlias for\\u200A\\u2014\\u200Awrite, writes safe fixes, formatting and import sorting (deprecated, use\\u200A\\u2014\\u200Awrite)\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"2. \",(0,n.jsx)(e.a,{href:\"https://github.com/t3-oss/t3-env/blob/main/biome.json\",children:\"biome.json\"})]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,n.jsxs)(e.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"{\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"$schema\": \"https://biomejs.dev/schemas/1.5.3/schema.json\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"organizeImports\": {'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"enabled\": true'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" },\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"formatter\": {'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"enabled\": true,'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"indentWidth\": 2,'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"indentStyle\": \"space\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" },\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"linter\": {'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"enabled\": true,'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"rules\": {'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"recommended\": true,'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"a11y\": {'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"noSvgWithoutTitle\": \"off\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"useButtonType\": \"off\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"useAltText\": \"off\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" },\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"complexity\": {'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"noBannedTypes\": \"off\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" },\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"style\": {'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"useImportType\": \"error\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"useExportType\": \"error\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" },\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"overrides\": ['})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" {\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"include\": [\"**/*.test.ts\"],'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"linter\": {'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"rules\": {'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"suspicious\": {'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"noExplicitAny\": \"off\"'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" ],\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"vcs\": {'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"enabled\": true,'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"clientKind\": \"git\",'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:' \"useIgnoreFile\": true'})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\" }\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"}\"})})]})})}),`\n`,(0,n.jsx)(e.h1,{id:\"about-me\",children:(0,n.jsx)(e.strong,{children:\"About me:\"})}),`\n`,(0,n.jsx)(e.p,{children:\"Hey, my name is Ramu Narasinga. I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"I am open to work on interesting projects. Send me an email at \",(0,n.jsx)(e.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:\"ramu.narasinga@gmail.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Github \\u2014 \",(0,n.jsx)(e.a,{href:\"https://github.com/ramu-narasinga\",children:\"https://github.com/ramu-narasinga\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My website \\u2014 \",(0,n.jsx)(e.a,{href:\"https://ramunarasinga.com/\",children:\"https://ramunarasinga.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"My Youtube channel \\u2014 \",(0,n.jsx)(e.a,{href:\"https://www.youtube.com/@thinkthroo\",children:\"https://www.youtube.com/@thinkthroo\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Learning platform \\u2014 \",(0,n.jsx)(e.a,{href:\"https://thinkthroo.com/\",children:\"https://thinkthroo.com\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Codebase Architecture \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/architecture\",children:\"https://app.thinkthroo.com/architecture\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Best practices \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/best-practices\",children:\"https://app.thinkthroo.com/best-practices\"})]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Production-grade projects \\u2014 \",(0,n.jsx)(e.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:\"https://app.thinkthroo.com/production-grade-projects\"})]}),`\n`,(0,n.jsx)(e.h3,{id:\"references\",children:\"References:\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"1. \",(0,n.jsx)(e.a,{href:\"https://biomejs.dev/\",children:\"https://biomejs.dev/\"}),(0,n.jsx)(e.br,{}),`\n`,\"2. \",(0,n.jsx)(e.a,{href:\"https://github.com/t3-oss/t3-env/blob/main/biome.json\",children:\"https://github.com/t3-oss/t3-env/blob/main/biome.json\"}),(0,n.jsx)(e.br,{}),`\n`,\"3. \",(0,n.jsx)(e.a,{href:\"https://github.com/t3-oss/t3-env/blob/main/package.json#L10\",children:\"https://github.com/t3-oss/t3-env/blob/main/package.json#L10\"})]})]})}function p(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(h,{...a})}):h(a)}return j(x);})();\n;return Component;"
  },
  "_id": "blog/biome-tool-chain.mdx",
  "_raw": {
    "sourceFilePath": "blog/biome-tool-chain.mdx",
    "sourceFileName": "biome-tool-chain.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/biome-tool-chain"
  },
  "type": "Doc",
  "slug": "/blog/biome-tool-chain",
  "slugAsParams": "biome-tool-chain"
}