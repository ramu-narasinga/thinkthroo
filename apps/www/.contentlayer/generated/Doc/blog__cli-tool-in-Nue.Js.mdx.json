{
  "title": "CLI tool in Nue-Js source code.\r",
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
    "raw": "\r\nIn this article, we will review the how the CLI tool is written in Nue.js source code.\r\n\r\n![](https://cdn-images-1.medium.com/max/1000/1*_As7CY7ol9p_TRKnFlRvtQ.png)\r\n\r\nNue.js CLI tool supports the below listed commands:\r\n\r\n1. Help\r\n    \r\n2. Serve\r\n    \r\n3. Build\r\n    \r\n4. Create\r\n    \r\n5. Init\r\n    \r\n\r\nWe will review Help, Init commands to understand the underlying pattern.\r\n\r\n### Help command\r\n\r\nLet’s find out how help is printed to CLI. At line 126-133 in packages/nuejs/src/cli.js, you will find the below code:\r\n\r\n```plaintext\r\n// Only run main when called as real CLI\r\nif (esMain(import.meta)) {\r\n\r\n  const args = getArgs(process.argv.slice(2))\r\n\r\n  // help\r\n  if (args.help) {\r\n    await printHelp()\r\n\r\n    // version\r\n  }\r\n```\r\n\r\n#### printHelp()\r\n\r\nprintHelp() is defined in the [same cli.js file](https://github.com/nuejs/nue/blob/master/packages/nuekit/src/cli.js#L76) and has the below code:\r\n\r\n```plaintext\r\nasync function printHelp() {\r\n  const { getHelp } = await import('./cli-help.js')\r\n  console.info(getHelp())\r\n}\r\n```\r\n\r\nCheck out the [cli-help.js](https://github.com/nuejs/nue/blob/master/packages/nuekit/src/cli-help.js) it contains the below code:\r\n\r\n```plaintext\r\n\r\n#!/usr/bin/env bun\r\n\r\nimport { esMain, log, colors, version, getEngine, openUrl } from './util.js'\r\n\r\n\r\n// [-npe] --> [-n, -p, -e]\r\nexport function expandArgs(args) {\r\n  const arr = []\r\n  args.forEach(arg => {\r\n    if (arg[0] == '-' && arg[1] != '-' && arg[2]) {\r\n      arg.slice(1).split('').forEach(el => arr.push('-' + el))\r\n    } else {\r\n      arr.push(arg)\r\n    }\r\n  })\r\n  return arr\r\n}\r\n\r\n// TODO: tests\r\nexport function getArgs(argv) {\r\n  const commands = ['serve', 'build', 'init', 'create', 'docs']\r\n  const args = { paths: [], root: null }\r\n  let opt\r\n\r\n  expandArgs(argv).forEach((arg) => {\r\n    // skip\r\n    if (arg == '--') {\r\n\r\n      // test suite\r\n    } else if (arg.endsWith('.test.js')) {\r\n      args.test = true\r\n\r\n      // command\r\n    } else if (!args.cmd && commands.includes(arg)) {\r\n      args.cmd = arg\r\n\r\n      // options\r\n    } else if (!opt && arg[0] == '-') {\r\n\r\n      // booleans\r\n      if (['-p', '--production'].includes(arg)) args.is_prod = true\r\n      else if (['-v', '--version'].includes(arg) && !args.cmd) args.version = true\r\n      else if (['-n', '--dry-run'].includes(arg)) args.dryrun = true\r\n      else if (['-h', '--help'].includes(arg)) args.help = true\r\n      else if (['-v', '--verbose'].includes(arg)) args.verbose = true\r\n      else if (['-b', '--esbuild'].includes(arg)) args.esbuild = true\r\n      else if (['-l', '--lcss'].includes(arg)) args.lcss = true\r\n      else if (['-d', '--deploy'].includes(arg)) args.deploy = args.is_prod = true\r\n      else if (['-I', '--incremental'].includes(arg)) args.incremental = true\r\n      else if (['-o', '--open'].includes(arg)) args.open = true\r\n\r\n      // string values\r\n      else if (['-e', '--environment'].includes(arg)) opt = 'env'\r\n      else if (['-r', '--root'].includes(arg)) opt = 'root'\r\n      else if (['-P', '--port'].includes(arg)) opt = 'port'\r\n      else if (['-B', '--base'].includes(arg)) opt = 'base'\r\n\r\n      // bad options\r\n      else throw `Unknown option: \"${arg}\"`\r\n\r\n    } else if (arg && arg[0] != '-') {\r\n      if (opt) {\r\n        args[opt] = opt == 'port' ? Number(arg) : arg\r\n        // Number(alphabetic characters) is falsy. Check if port is really set:\r\n        if (opt != 'port' || (opt == 'port' && args.port)) opt = null\r\n      }\r\n      else args.paths.push(arg)\r\n    } else if (opt) throw `\"${opt}\" option is not set`\r\n  })\r\n\r\n  if (opt) throw `\"${opt}\" option is not set`\r\n\r\n  return args\r\n}\r\n\r\nasync function printHelp() {\r\n  const { getHelp } = await import('./cli-help.js')\r\n  console.info(getHelp())\r\n}\r\n\r\nasync function printVersion() {\r\n  log(`Nue ${version} ${colors.green('•')} ${getEngine()}`)\r\n}\r\n\r\nasync function runCommand(args) {\r\n  if (args.cmd == 'docs') return openUrl('https://nuejs.org/docs/')\r\n\r\n  const { createKit } = await import('./nuekit.js')\r\n  const { cmd = 'serve', dryrun, deploy, root = null, port } = args\r\n  const init = cmd == 'init'\r\n\r\n  if (!root) args.root = '.' // ensure root is unset for create, if not set manually\r\n\r\n  console.info('')\r\n  await printVersion()\r\n  args.nuekit_version = version\r\n\r\n  // create nue\r\n  if (cmd == 'create') {\r\n    const { create } = await import('./create.js')\r\n    return await create({ ...args, root, port })\r\n  }\r\n\r\n  const nue = await createKit(args)\r\n  if (!nue) return\r\n  if (args.open) openUrl(`http://localhost:${nue.port}/`)\r\n\r\n  // deployer (private repo)\r\n  const { deploy: deployer } = deploy ? await import('nue-deployer') : {}\r\n\r\n  // build\r\n  if (init) {\r\n    await nue.init(true)\r\n    if (deploy) await deployer({ root: nue.dist, init: true })\r\n\r\n  } else if (dryrun || deploy || args.paths[0] || cmd == 'build') {\r\n    const paths = await nue.build(args.paths)\r\n    if (!dryrun && deploy && paths[0]) await deployer({ paths, root: nue.dist, init })\r\n\r\n    // serve\r\n  } else {\r\n    await nue.serve()\r\n  }\r\n}\r\n\r\n// Only run main when called as real CLI\r\nif (esMain(import.meta)) {\r\n\r\n  const args = getArgs(process.argv.slice(2))\r\n\r\n  // help\r\n  if (args.help) {\r\n    await printHelp()\r\n\r\n    // version\r\n  } else if (args.version) {\r\n    await printVersion()\r\n\r\n    // command\r\n  } else if (!args.test) {\r\n    try {\r\n      await runCommand(args)\r\n    } catch (e) {\r\n      console.info(e)\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### Init command\r\n\r\n[At line 90 in cli.js](https://github.com/nuejs/nue/blob/master/packages/nuekit/src/cli.js#L90), there is this below check:\r\n\r\n```plaintext\r\nasync function runCommand(args) {\r\n  if (args.cmd == 'docs') return openUrl('https://nuejs.org/docs/')\r\n\r\n  const { createKit } = await import('./nuekit.js')\r\n  const { cmd = 'serve', dryrun, deploy, root = null, port } = args\r\n  const init = cmd == 'init'\r\n```\r\n\r\nAt [line 112 in the cli.js](https://github.com/nuejs/nue/blob/master/packages/nuekit/src/cli.js#L112), you will find the below code:\r\n\r\n```plaintext\r\nif (init) {\r\n    await nue.init(true)\r\n    if (deploy) await deployer({ root: nue.dist, init: true })\r\n}\r\n```\r\n\r\nnue.init? where is that coming from? you will see this below code [at line 104](https://github.com/nuejs/nue/blob/master/packages/nuekit/src/cli.js#L104)\r\n\r\n```plaintext\r\n  const nue = await createKit(args)\r\n```\r\n\r\n### createKit\r\n\r\ncreateKit is exported from [nuekit.js](https://github.com/nuejs/nue/blob/master/packages/nuekit/src/nuekit.js#L23) and has 383 LOC at the time of writing this article. Since we are interested in init, I searched for “init” in this nuekit.js file and found the below code:\r\n\r\n```plaintext\r\nasync function init(force) {\r\n    await initNueDir({ dist, is_dev, esbuild, force })\r\n}\r\n```\r\n\r\ninitNueDir is imported from a file named init.js. Similarly I saw create.js.\r\n\r\n### About me:\r\n\r\nHey, my name is [Ramu Narasinga](https://ramunarasinga.com). I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\r\n\r\n***I am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com***\r\n\r\nMy Github — [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\r\n\r\nMy website — [https://ramunarasinga.com](https://ramunarasinga.com/)\r\n\r\nMy Youtube channel — [https://www.youtube.com/@ramu-narasinga](https://www.youtube.com/@ramu-narasinga)\r\n\r\nLearning platform — [https://thinkthroo.com](https://thinkthroo.com/)\r\n\r\nCodebase Architecture — [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\r\n\r\nBest practices — [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\r\n\r\nProduction-grade projects — [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\r\n\r\n### References:\r\n\r\n1. [https://github.com/nuejs/nue/blob/master/packages/nuekit/src/cli.js](https://github.com/nuejs/nue/blob/master/packages/nuekit/src/cli.js)\r\n    \r\n2. [https://github.com/nuejs/nue/blob/master/packages/nuekit/package.json#L14](https://github.com/nuejs/nue/blob/master/packages/nuekit/package.json#L14)\r\n    \r\n3. [https://nuejs.org/docs/command-line-interface.html](https://nuejs.org/docs/command-line-interface.html)\r\n    \r\n4. [https://github.com/nuejs/nue/blob/master/packages/nuekit/src/cli.js#L76](https://github.com/nuejs/nue/blob/master/packages/nuekit/src/cli.js#L76)",
    "code": "var Component=(()=>{var o=Object.create;var i=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,N=Object.prototype.hasOwnProperty;var f=(a,n)=>()=>(n||a((n={exports:{}}).exports,n),n.exports),b=(a,n)=>{for(var s in n)i(a,s,{get:n[s],enumerable:!0})},r=(a,n,s,c)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let l of u(n))!N.call(a,l)&&l!==s&&i(a,l,{get:()=>n[l],enumerable:!(c=m(n,l))||c.enumerable});return a};var y=(a,n,s)=>(s=a!=null?o(g(a)):{},r(n||!a||!a.__esModule?i(s,\"default\",{value:a,enumerable:!0}):s,a)),w=a=>r(i({},\"__esModule\",{value:!0}),a);var d=f((x,p)=>{p.exports=_jsx_runtime});var k={};b(k,{default:()=>h,frontmatter:()=>j});var e=y(d()),j={title:\"CLI tool in Nue-Js source\\xA0code.\"};function t(a){let n={a:\"a\",code:\"code\",div:\"div\",em:\"em\",h3:\"h3\",h4:\"h4\",img:\"img\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",...a.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:\"In this article, we will review the how the CLI tool is written in Nue.js source code.\"}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.img,{src:\"https://cdn-images-1.medium.com/max/1000/1*_As7CY7ol9p_TRKnFlRvtQ.png\",alt:\"\"})}),`\n`,(0,e.jsx)(n.p,{children:\"Nue.js CLI tool supports the below listed commands:\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Help\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Serve\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Build\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Create\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Init\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.p,{children:\"We will review Help, Init commands to understand the underlying pattern.\"}),`\n`,(0,e.jsx)(n.h3,{id:\"help-command\",children:\"Help command\"}),`\n`,(0,e.jsx)(n.p,{children:\"Let\\u2019s find out how help is printed to CLI. At line 126-133 in packages/nuejs/src/cli.js, you will find the below code:\"}),`\n`,(0,e.jsx)(n.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,e.jsx)(n.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,e.jsxs)(n.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"// Only run main when called as real CLI\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"if (esMain(import.meta)) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  const args = getArgs(process.argv.slice(2))\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  // help\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  if (args.help) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    await printHelp()\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    // version\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  }\"})})]})})}),`\n`,(0,e.jsx)(n.h4,{id:\"printhelp\",children:\"printHelp()\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"printHelp() is defined in the \",(0,e.jsx)(n.a,{href:\"https://github.com/nuejs/nue/blob/master/packages/nuekit/src/cli.js#L76\",children:\"same cli.js file\"}),\" and has the below code:\"]}),`\n`,(0,e.jsx)(n.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,e.jsx)(n.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,e.jsxs)(n.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"async function printHelp() {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  const { getHelp } = await import('./cli-help.js')\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  console.info(getHelp())\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"}\"})})]})})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Check out the \",(0,e.jsx)(n.a,{href:\"https://github.com/nuejs/nue/blob/master/packages/nuekit/src/cli-help.js\",children:\"cli-help.js\"}),\" it contains the below code:\"]}),`\n`,(0,e.jsx)(n.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,e.jsx)(n.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,e.jsxs)(n.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"#!/usr/bin/env bun\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"import { esMain, log, colors, version, getEngine, openUrl } from './util.js'\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"// [-npe] --> [-n, -p, -e]\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"export function expandArgs(args) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  const arr = []\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  args.forEach(arg => {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    if (arg[0] == '-' && arg[1] != '-' && arg[2]) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      arg.slice(1).split('').forEach(el => arr.push('-' + el))\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    } else {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      arr.push(arg)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    }\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  })\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  return arr\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"}\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"// TODO: tests\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"export function getArgs(argv) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  const commands = ['serve', 'build', 'init', 'create', 'docs']\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  const args = { paths: [], root: null }\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  let opt\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  expandArgs(argv).forEach((arg) => {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    // skip\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    if (arg == '--') {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      // test suite\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    } else if (arg.endsWith('.test.js')) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      args.test = true\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      // command\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    } else if (!args.cmd && commands.includes(arg)) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      args.cmd = arg\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      // options\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    } else if (!opt && arg[0] == '-') {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      // booleans\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      if (['-p', '--production'].includes(arg)) args.is_prod = true\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      else if (['-v', '--version'].includes(arg) && !args.cmd) args.version = true\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      else if (['-n', '--dry-run'].includes(arg)) args.dryrun = true\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      else if (['-h', '--help'].includes(arg)) args.help = true\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      else if (['-v', '--verbose'].includes(arg)) args.verbose = true\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      else if (['-b', '--esbuild'].includes(arg)) args.esbuild = true\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      else if (['-l', '--lcss'].includes(arg)) args.lcss = true\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      else if (['-d', '--deploy'].includes(arg)) args.deploy = args.is_prod = true\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      else if (['-I', '--incremental'].includes(arg)) args.incremental = true\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      else if (['-o', '--open'].includes(arg)) args.open = true\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      // string values\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      else if (['-e', '--environment'].includes(arg)) opt = 'env'\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      else if (['-r', '--root'].includes(arg)) opt = 'root'\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      else if (['-P', '--port'].includes(arg)) opt = 'port'\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      else if (['-B', '--base'].includes(arg)) opt = 'base'\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      // bad options\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:'      else throw `Unknown option: \"${arg}\"`'})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    } else if (arg && arg[0] != '-') {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      if (opt) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"        args[opt] = opt == 'port' ? Number(arg) : arg\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"        // Number(alphabetic characters) is falsy. Check if port is really set:\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"        if (opt != 'port' || (opt == 'port' && args.port)) opt = null\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      }\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      else args.paths.push(arg)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:'    } else if (opt) throw `\"${opt}\" option is not set`'})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  })\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:'  if (opt) throw `\"${opt}\" option is not set`'})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  return args\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"}\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"async function printHelp() {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  const { getHelp } = await import('./cli-help.js')\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  console.info(getHelp())\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"}\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"async function printVersion() {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  log(`Nue ${version} ${colors.green('\\u2022')} ${getEngine()}`)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"}\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"async function runCommand(args) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  if (args.cmd == 'docs') return openUrl('https://nuejs.org/docs/')\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  const { createKit } = await import('./nuekit.js')\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  const { cmd = 'serve', dryrun, deploy, root = null, port } = args\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  const init = cmd == 'init'\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  if (!root) args.root = '.' // ensure root is unset for create, if not set manually\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  console.info('')\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  await printVersion()\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  args.nuekit_version = version\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  // create nue\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  if (cmd == 'create') {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    const { create } = await import('./create.js')\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    return await create({ ...args, root, port })\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  }\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  const nue = await createKit(args)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  if (!nue) return\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  if (args.open) openUrl(`http://localhost:${nue.port}/`)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  // deployer (private repo)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  const { deploy: deployer } = deploy ? await import('nue-deployer') : {}\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  // build\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  if (init) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    await nue.init(true)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    if (deploy) await deployer({ root: nue.dist, init: true })\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  } else if (dryrun || deploy || args.paths[0] || cmd == 'build') {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    const paths = await nue.build(args.paths)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    if (!dryrun && deploy && paths[0]) await deployer({ paths, root: nue.dist, init })\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    // serve\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  } else {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    await nue.serve()\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  }\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"}\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"// Only run main when called as real CLI\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"if (esMain(import.meta)) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  const args = getArgs(process.argv.slice(2))\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  // help\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  if (args.help) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    await printHelp()\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    // version\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  } else if (args.version) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    await printVersion()\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    // command\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  } else if (!args.test) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    try {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      await runCommand(args)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    } catch (e) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      console.info(e)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    }\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  }\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"}\"})})]})})}),`\n`,(0,e.jsx)(n.h3,{id:\"init-command\",children:\"Init command\"}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.a,{href:\"https://github.com/nuejs/nue/blob/master/packages/nuekit/src/cli.js#L90\",children:\"At line 90 in cli.js\"}),\", there is this below check:\"]}),`\n`,(0,e.jsx)(n.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,e.jsx)(n.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,e.jsxs)(n.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"async function runCommand(args) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  if (args.cmd == 'docs') return openUrl('https://nuejs.org/docs/')\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  const { createKit } = await import('./nuekit.js')\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  const { cmd = 'serve', dryrun, deploy, root = null, port } = args\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  const init = cmd == 'init'\"})})]})})}),`\n`,(0,e.jsxs)(n.p,{children:[\"At \",(0,e.jsx)(n.a,{href:\"https://github.com/nuejs/nue/blob/master/packages/nuekit/src/cli.js#L112\",children:\"line 112 in the cli.js\"}),\", you will find the below code:\"]}),`\n`,(0,e.jsx)(n.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,e.jsx)(n.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,e.jsxs)(n.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"if (init) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    await nue.init(true)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    if (deploy) await deployer({ root: nue.dist, init: true })\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"}\"})})]})})}),`\n`,(0,e.jsxs)(n.p,{children:[\"nue.init? where is that coming from? you will see this below code \",(0,e.jsx)(n.a,{href:\"https://github.com/nuejs/nue/blob/master/packages/nuekit/src/cli.js#L104\",children:\"at line 104\"})]}),`\n`,(0,e.jsx)(n.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,e.jsx)(n.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,e.jsx)(n.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  const nue = await createKit(args)\"})})})})}),`\n`,(0,e.jsx)(n.h3,{id:\"createkit\",children:\"createKit\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"createKit is exported from \",(0,e.jsx)(n.a,{href:\"https://github.com/nuejs/nue/blob/master/packages/nuekit/src/nuekit.js#L23\",children:\"nuekit.js\"}),\" and has 383 LOC at the time of writing this article. Since we are interested in init, I searched for \\u201Cinit\\u201D in this nuekit.js file and found the below code:\"]}),`\n`,(0,e.jsx)(n.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,e.jsx)(n.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,e.jsxs)(n.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"async function init(force) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    await initNueDir({ dist, is_dev, esbuild, force })\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"}\"})})]})})}),`\n`,(0,e.jsx)(n.p,{children:\"initNueDir is imported from a file named init.js. Similarly I saw create.js.\"}),`\n`,(0,e.jsx)(n.h3,{id:\"about-me\",children:\"About me:\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Hey, my name is \",(0,e.jsx)(n.a,{href:\"https://ramunarasinga.com\",children:\"Ramu Narasinga\"}),\". I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"]}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.em,{children:(0,e.jsxs)(n.strong,{children:[\"I am open to work on interesting projects. Send me an email at \",(0,e.jsx)(n.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:\"ramu.narasinga@gmail.com\"})]})})}),`\n`,(0,e.jsxs)(n.p,{children:[\"My Github\\u200A\\u2014\\u200A\",(0,e.jsx)(n.a,{href:\"https://github.com/ramu-narasinga\",children:\"https://github.com/ramu-narasinga\"})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"My website\\u200A\\u2014\\u200A\",(0,e.jsx)(n.a,{href:\"https://ramunarasinga.com/\",children:\"https://ramunarasinga.com\"})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"My Youtube channel\\u200A\\u2014\\u200A\",(0,e.jsx)(n.a,{href:\"https://www.youtube.com/@ramu-narasinga\",children:\"https://www.youtube.com/@ramu-narasinga\"})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Learning platform\\u200A\\u2014\\u200A\",(0,e.jsx)(n.a,{href:\"https://thinkthroo.com/\",children:\"https://thinkthroo.com\"})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Codebase Architecture\\u200A\\u2014\\u200A\",(0,e.jsx)(n.a,{href:\"https://app.thinkthroo.com/architecture\",children:\"https://app.thinkthroo.com/architecture\"})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Best practices\\u200A\\u2014\\u200A\",(0,e.jsx)(n.a,{href:\"https://app.thinkthroo.com/best-practices\",children:\"https://app.thinkthroo.com/best-practices\"})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Production-grade projects\\u200A\\u2014\\u200A\",(0,e.jsx)(n.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:\"https://app.thinkthroo.com/production-grade-projects\"})]}),`\n`,(0,e.jsx)(n.h3,{id:\"references\",children:\"References:\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.a,{href:\"https://github.com/nuejs/nue/blob/master/packages/nuekit/src/cli.js\",children:\"https://github.com/nuejs/nue/blob/master/packages/nuekit/src/cli.js\"})}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.a,{href:\"https://github.com/nuejs/nue/blob/master/packages/nuekit/package.json#L14\",children:\"https://github.com/nuejs/nue/blob/master/packages/nuekit/package.json#L14\"})}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.a,{href:\"https://nuejs.org/docs/command-line-interface.html\",children:\"https://nuejs.org/docs/command-line-interface.html\"})}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.a,{href:\"https://github.com/nuejs/nue/blob/master/packages/nuekit/src/cli.js#L76\",children:\"https://github.com/nuejs/nue/blob/master/packages/nuekit/src/cli.js#L76\"})}),`\n`]}),`\n`]})]})}function h(a={}){let{wrapper:n}=a.components||{};return n?(0,e.jsx)(n,{...a,children:(0,e.jsx)(t,{...a})}):t(a)}return w(k);})();\n;return Component;"
  },
  "_id": "blog/cli-tool-in-Nue.Js.mdx",
  "_raw": {
    "sourceFilePath": "blog/cli-tool-in-Nue.Js.mdx",
    "sourceFileName": "cli-tool-in-Nue.Js.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/cli-tool-in-Nue.Js"
  },
  "type": "Doc",
  "slug": "/blog/cli-tool-in-Nue.Js",
  "slugAsParams": "cli-tool-in-Nue.Js"
}