{
<<<<<<< HEAD
  "title": "UploadingState component in FilePizza codebase.\r",
=======
  "title": "UploadingState component in FilePizza codebase.",
>>>>>>> 442b740f3cf43317109944c6cf4b7ca543a8cddf
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
<<<<<<< HEAD
    "raw": "\r\nIn this article, we will review the UploadingState component in FilePizza codebase.\r\n\r\n![](https://cdn-images-1.medium.com/max/1000/1*ZE2WCluOZlS1l3qL-KFM5Q.png)\r\n\r\nUploadingState component is returned in [app/page.tsx](https://github.com/kern/filepizza/blob/main/src/app/page.tsx#L158) and this is the component you would see when you have already uploaded a file.\r\n\r\n### UploadingState\r\n\r\n```plaintext\r\nfunction UploadingState({\r\n  uploadedFiles,\r\n  password,\r\n  onStop,\r\n}: {\r\n  uploadedFiles: UploadedFile[]\r\n  password: string\r\n  onStop: () => void\r\n}): JSX.Element {\r\n  const fileListData = useUploaderFileListData(uploadedFiles)\r\n  return (\r\n    <PageWrapper>\r\n      <TitleText>\r\n        You are uploading {pluralize(uploadedFiles.length, 'file', 'files')}.\r\n      </TitleText>\r\n      <UploadFileList files={fileListData} />\r\n      <WebRTCPeerProvider>\r\n        <Uploader files={uploadedFiles} password={password} onStop={onStop} />\r\n      </WebRTCPeerProvider>\r\n    </PageWrapper>\r\n  )\r\n}\r\n```\r\n\r\nThis above code can be found [at line 87 in app/page.tsx](https://github.com/kern/filepizza/blob/main/src/app/page.tsx#L87).\r\n\r\nPageWrapper and the TitleText components are straightforward. I am curious about the UploadFileList component. Let’s find out what this is.\r\n\r\n#### UploadFileList\r\n\r\n```plaintext\r\nimport React, { JSX } from 'react'\r\nimport TypeBadge from './TypeBadge'\r\n\r\ntype UploadedFileLike = {\r\n  fileName?: string\r\n  type: string\r\n}\r\n\r\nexport default function UploadFileList({\r\n  files,\r\n  onRemove,\r\n}: {\r\n  files: UploadedFileLike[]\r\n  onRemove?: (index: number) => void\r\n}): JSX.Element {\r\n  const items = files.map((f: UploadedFileLike, i: number) => (\r\n    <div\r\n      key={f.fileName}\r\n      className={`w-full border-b border-stone-300 dark:border-stone-700 last:border-0`}\r\n    >\r\n      <div className=\"flex justify-between items-center py-2 pl-3 pr-2\">\r\n        <p className=\"truncate text-sm font-medium text-stone-800 dark:text-stone-200\">\r\n          {f.fileName}\r\n        </p>\r\n        <div className=\"flex items-center\">\r\n          <TypeBadge type={f.type} />\r\n          {onRemove && (\r\n            <button\r\n              onClick={() => onRemove?.(i)}\r\n              className=\"text-stone-500 hover:text-stone-700 dark:text-stone-400 dark:hover:text-stone-200 focus:outline-none pl-3 pr-1\"\r\n            >\r\n              ✕\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ))\r\n\r\n  return (\r\n    <div className=\"w-full border border-stone-300 dark:border-stone-700 rounded-md shadow-sm dark:shadow-sm-dark bg-white dark:bg-stone-800\">\r\n      {items}\r\n    </div>\r\n  )\r\n}\r\n```\r\n\r\nUploadFileList can be in [components/UploadFileList.tsx](https://github.com/kern/filepizza/blob/main/src/components/UploadFileList.tsx#L9). This component accepts files and onRemove as its props.\r\n\r\n#### WebRTCProvider\r\n\r\nI have already talked about what WebRTCProvider is in one of my previous articles. Check it out.\r\n\r\n#### Uploader\r\n\r\n```plaintext\r\n'use client'\r\n\r\nimport React, { JSX, useCallback, useEffect } from 'react'\r\nimport { UploadedFile, UploaderConnectionStatus } from '../types'\r\nimport { useWebRTCPeer } from './WebRTCProvider'\r\nimport QRCode from 'react-qr-code'\r\nimport Loading from './Loading'\r\nimport StopButton from './StopButton'\r\nimport { useUploaderChannel } from '../hooks/useUploaderChannel'\r\nimport { useUploaderConnections } from '../hooks/useUploaderConnections'\r\nimport { CopyableInput } from './CopyableInput'\r\nimport { ConnectionListItem } from './ConnectionListItem'\r\nimport { ErrorMessage } from './ErrorMessage'\r\nimport { setRotating } from '../hooks/useRotatingSpinner'\r\n\r\nconst QR_CODE_SIZE = 128\r\n\r\nexport default function Uploader({\r\n  files,\r\n  password,\r\n  onStop,\r\n}: {\r\n  files: UploadedFile[]\r\n  password: string\r\n  onStop: () => void\r\n}): JSX.Element {\r\n  const { peer, stop } = useWebRTCPeer()\r\n  const { isLoading, error, longSlug, shortSlug, longURL, shortURL } =\r\n    useUploaderChannel(peer.id)\r\n  const connections = useUploaderConnections(peer, files, password)\r\n\r\n  const handleStop = useCallback(() => {\r\n    stop()\r\n    onStop()\r\n  }, [stop, onStop])\r\n\r\n  const activeDownloaders = connections.filter(\r\n    (conn) => conn.status === UploaderConnectionStatus.Uploading,\r\n  ).length\r\n\r\n  useEffect(() => {\r\n    setRotating(activeDownloaders > 0)\r\n  }, [activeDownloaders])\r\n\r\n  if (isLoading || !longSlug || !shortSlug) {\r\n    return <Loading text=\"Creating channel...\" />\r\n  }\r\n\r\n  if (error) {\r\n    return <ErrorMessage message={error.message} />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex w-full items-center\">\r\n        <div className=\"flex-none mr-4\">\r\n          <QRCode value={shortURL ?? ''} size={QR_CODE_SIZE} />\r\n        </div>\r\n        <div className=\"flex-auto flex flex-col justify-center space-y-2\">\r\n          <CopyableInput label=\"Long URL\" value={longURL ?? ''} />\r\n          <CopyableInput label=\"Short URL\" value={shortURL ?? ''} />\r\n        </div>\r\n      </div>\r\n      <div className=\"mt-6 pt-4 border-t border-stone-200 dark:border-stone-700 w-full\">\r\n        <div className=\"flex justify-between items-center mb-2\">\r\n          <h2 className=\"text-lg font-semibold text-stone-400 dark:text-stone-200\">\r\n            {activeDownloaders} Downloading, {connections.length} Total\r\n          </h2>\r\n          <StopButton onClick={handleStop} />\r\n        </div>\r\n        {connections.map((conn, i) => (\r\n          <ConnectionListItem key={i} conn={conn} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n```\r\n\r\nUploader component is responsible for showing QR code and the long/short URLs.\r\n\r\n### About me:\r\n\r\nHey, my name is [Ramu Narasinga](https://ramunarasinga.com). I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\r\n\r\n***I am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com***\r\n\r\nMy Github —  [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\r\n\r\nMy website —  [https://ramunarasinga.com](https://ramunarasinga.com/)\r\n\r\nMy Youtube channel —  [https://www.youtube.com/@ramu-narasinga](https://www.youtube.com/@ramu-narasinga)\r\n\r\nLearning platform —  [https://thinkthroo.com](https://thinkthroo.com/)\r\n\r\nCodebase Architecture —  [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\r\n\r\nBest practices —  [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\r\n\r\nProduction-grade projects —  [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\r\n\r\n### References:\r\n\r\n1. [https://github.com/kern/filepizza/blob/main/src/app/page.tsx#L87](https://github.com/kern/filepizza/blob/main/src/app/page.tsx#L87)\r\n    \r\n2. [https://github.com/kern/filepizza/blob/main/src/app/page.tsx#L158](https://github.com/kern/filepizza/blob/main/src/app/page.tsx#L158)\r\n    \r\n3. [https://github.com/kern/filepizza/blob/main/src/components/UploadFileList.tsx#L9](https://github.com/kern/filepizza/blob/main/src/components/UploadFileList.tsx#L9)",
=======
    "raw": "\nIn this article, we will review the UploadingState component in FilePizza codebase.\n\n![](https://cdn-images-1.medium.com/max/1000/1*ZE2WCluOZlS1l3qL-KFM5Q.png)\n\nUploadingState component is returned in [app/page.tsx](https://github.com/kern/filepizza/blob/main/src/app/page.tsx#L158) and this is the component you would see when you have already uploaded a file.\n\n### UploadingState\n\n```plaintext\nfunction UploadingState({\n  uploadedFiles,\n  password,\n  onStop,\n}: {\n  uploadedFiles: UploadedFile[]\n  password: string\n  onStop: () => void\n}): JSX.Element {\n  const fileListData = useUploaderFileListData(uploadedFiles)\n  return (\n    <PageWrapper>\n      <TitleText>\n        You are uploading {pluralize(uploadedFiles.length, 'file', 'files')}.\n      </TitleText>\n      <UploadFileList files={fileListData} />\n      <WebRTCPeerProvider>\n        <Uploader files={uploadedFiles} password={password} onStop={onStop} />\n      </WebRTCPeerProvider>\n    </PageWrapper>\n  )\n}\n```\n\nThis above code can be found [at line 87 in app/page.tsx](https://github.com/kern/filepizza/blob/main/src/app/page.tsx#L87).\n\nPageWrapper and the TitleText components are straightforward. I am curious about the UploadFileList component. Let’s find out what this is.\n\n#### UploadFileList\n\n```plaintext\nimport React, { JSX } from 'react'\nimport TypeBadge from './TypeBadge'\n\ntype UploadedFileLike = {\n  fileName?: string\n  type: string\n}\n\nexport default function UploadFileList({\n  files,\n  onRemove,\n}: {\n  files: UploadedFileLike[]\n  onRemove?: (index: number) => void\n}): JSX.Element {\n  const items = files.map((f: UploadedFileLike, i: number) => (\n    <div\n      key={f.fileName}\n      className={`w-full border-b border-stone-300 dark:border-stone-700 last:border-0`}\n    >\n      <div className=\"flex justify-between items-center py-2 pl-3 pr-2\">\n        <p className=\"truncate text-sm font-medium text-stone-800 dark:text-stone-200\">\n          {f.fileName}\n        </p>\n        <div className=\"flex items-center\">\n          <TypeBadge type={f.type} />\n          {onRemove && (\n            <button\n              onClick={() => onRemove?.(i)}\n              className=\"text-stone-500 hover:text-stone-700 dark:text-stone-400 dark:hover:text-stone-200 focus:outline-none pl-3 pr-1\"\n            >\n              ✕\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  ))\n\n  return (\n    <div className=\"w-full border border-stone-300 dark:border-stone-700 rounded-md shadow-sm dark:shadow-sm-dark bg-white dark:bg-stone-800\">\n      {items}\n    </div>\n  )\n}\n```\n\nUploadFileList can be in [components/UploadFileList.tsx](https://github.com/kern/filepizza/blob/main/src/components/UploadFileList.tsx#L9). This component accepts files and onRemove as its props.\n\n#### WebRTCProvider\n\nI have already talked about what WebRTCProvider is in one of my previous articles. Check it out.\n\n#### Uploader\n\n```plaintext\n'use client'\n\nimport React, { JSX, useCallback, useEffect } from 'react'\nimport { UploadedFile, UploaderConnectionStatus } from '../types'\nimport { useWebRTCPeer } from './WebRTCProvider'\nimport QRCode from 'react-qr-code'\nimport Loading from './Loading'\nimport StopButton from './StopButton'\nimport { useUploaderChannel } from '../hooks/useUploaderChannel'\nimport { useUploaderConnections } from '../hooks/useUploaderConnections'\nimport { CopyableInput } from './CopyableInput'\nimport { ConnectionListItem } from './ConnectionListItem'\nimport { ErrorMessage } from './ErrorMessage'\nimport { setRotating } from '../hooks/useRotatingSpinner'\n\nconst QR_CODE_SIZE = 128\n\nexport default function Uploader({\n  files,\n  password,\n  onStop,\n}: {\n  files: UploadedFile[]\n  password: string\n  onStop: () => void\n}): JSX.Element {\n  const { peer, stop } = useWebRTCPeer()\n  const { isLoading, error, longSlug, shortSlug, longURL, shortURL } =\n    useUploaderChannel(peer.id)\n  const connections = useUploaderConnections(peer, files, password)\n\n  const handleStop = useCallback(() => {\n    stop()\n    onStop()\n  }, [stop, onStop])\n\n  const activeDownloaders = connections.filter(\n    (conn) => conn.status === UploaderConnectionStatus.Uploading,\n  ).length\n\n  useEffect(() => {\n    setRotating(activeDownloaders > 0)\n  }, [activeDownloaders])\n\n  if (isLoading || !longSlug || !shortSlug) {\n    return <Loading text=\"Creating channel...\" />\n  }\n\n  if (error) {\n    return <ErrorMessage message={error.message} />\n  }\n\n  return (\n    <>\n      <div className=\"flex w-full items-center\">\n        <div className=\"flex-none mr-4\">\n          <QRCode value={shortURL ?? ''} size={QR_CODE_SIZE} />\n        </div>\n        <div className=\"flex-auto flex flex-col justify-center space-y-2\">\n          <CopyableInput label=\"Long URL\" value={longURL ?? ''} />\n          <CopyableInput label=\"Short URL\" value={shortURL ?? ''} />\n        </div>\n      </div>\n      <div className=\"mt-6 pt-4 border-t border-stone-200 dark:border-stone-700 w-full\">\n        <div className=\"flex justify-between items-center mb-2\">\n          <h2 className=\"text-lg font-semibold text-stone-400 dark:text-stone-200\">\n            {activeDownloaders} Downloading, {connections.length} Total\n          </h2>\n          <StopButton onClick={handleStop} />\n        </div>\n        {connections.map((conn, i) => (\n          <ConnectionListItem key={i} conn={conn} />\n        ))}\n      </div>\n    </>\n  )\n}\n```\n\nUploader component is responsible for showing QR code and the long/short URLs.\n\n### About me:\n\nHey, my name is [Ramu Narasinga](https://ramunarasinga.com). I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\n\n***I am open to work on interesting projects. Send me an email at ramu.narasinga@gmail.com***\n\nMy Github —  [https://github.com/ramu-narasinga](https://github.com/ramu-narasinga)\n\nMy website —  [https://ramunarasinga.com](https://ramunarasinga.com/)\n\nMy Youtube channel —  [https://www.youtube.com/@ramu-narasinga](https://www.youtube.com/@ramu-narasinga)\n\nLearning platform —  [https://thinkthroo.com](https://thinkthroo.com/)\n\nCodebase Architecture —  [https://app.thinkthroo.com/architecture](https://app.thinkthroo.com/architecture)\n\nBest practices —  [https://app.thinkthroo.com/best-practices](https://app.thinkthroo.com/best-practices)\n\nProduction-grade projects —  [https://app.thinkthroo.com/production-grade-projects](https://app.thinkthroo.com/production-grade-projects)\n\n### References:\n\n1. [https://github.com/kern/filepizza/blob/main/src/app/page.tsx#L87](https://github.com/kern/filepizza/blob/main/src/app/page.tsx#L87)\n    \n2. [https://github.com/kern/filepizza/blob/main/src/app/page.tsx#L158](https://github.com/kern/filepizza/blob/main/src/app/page.tsx#L158)\n    \n3. [https://github.com/kern/filepizza/blob/main/src/components/UploadFileList.tsx#L9](https://github.com/kern/filepizza/blob/main/src/components/UploadFileList.tsx#L9)",
>>>>>>> 442b740f3cf43317109944c6cf4b7ca543a8cddf
    "code": "var Component=(()=>{var o=Object.create;var i=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var N=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var f=(a,n)=>()=>(n||a((n={exports:{}}).exports,n),n.exports),b=(a,n)=>{for(var s in n)i(a,s,{get:n[s],enumerable:!0})},r=(a,n,s,c)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let l of N(n))!g.call(a,l)&&l!==s&&i(a,l,{get:()=>n[l],enumerable:!(c=m(n,l))||c.enumerable});return a};var x=(a,n,s)=>(s=a!=null?o(u(a)):{},r(n||!a||!a.__esModule?i(s,\"default\",{value:a,enumerable:!0}):s,a)),v=a=>r(i({},\"__esModule\",{value:!0}),a);var d=f((w,p)=>{p.exports=_jsx_runtime});var k={};b(k,{default:()=>h,frontmatter:()=>L});var e=x(d()),L={title:\"UploadingState component in FilePizza codebase.\"};function t(a){let n={a:\"a\",code:\"code\",div:\"div\",em:\"em\",h3:\"h3\",h4:\"h4\",img:\"img\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",...a.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:\"In this article, we will review the UploadingState component in FilePizza codebase.\"}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.img,{src:\"https://cdn-images-1.medium.com/max/1000/1*ZE2WCluOZlS1l3qL-KFM5Q.png\",alt:\"\"})}),`\n`,(0,e.jsxs)(n.p,{children:[\"UploadingState component is returned in \",(0,e.jsx)(n.a,{href:\"https://github.com/kern/filepizza/blob/main/src/app/page.tsx#L158\",children:\"app/page.tsx\"}),\" and this is the component you would see when you have already uploaded a file.\"]}),`\n`,(0,e.jsx)(n.h3,{id:\"uploadingstate\",children:\"UploadingState\"}),`\n`,(0,e.jsx)(n.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,e.jsx)(n.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,e.jsxs)(n.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"function UploadingState({\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  uploadedFiles,\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  password,\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  onStop,\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"}: {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  uploadedFiles: UploadedFile[]\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  password: string\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  onStop: () => void\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"}): JSX.Element {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  const fileListData = useUploaderFileListData(uploadedFiles)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  return (\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    <PageWrapper>\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      <TitleText>\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"        You are uploading {pluralize(uploadedFiles.length, 'file', 'files')}.\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      </TitleText>\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      <UploadFileList files={fileListData} />\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      <WebRTCPeerProvider>\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"        <Uploader files={uploadedFiles} password={password} onStop={onStop} />\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      </WebRTCPeerProvider>\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    </PageWrapper>\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  )\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"}\"})})]})})}),`\n`,(0,e.jsxs)(n.p,{children:[\"This above code can be found \",(0,e.jsx)(n.a,{href:\"https://github.com/kern/filepizza/blob/main/src/app/page.tsx#L87\",children:\"at line 87 in app/page.tsx\"}),\".\"]}),`\n`,(0,e.jsx)(n.p,{children:\"PageWrapper and the TitleText components are straightforward. I am curious about the UploadFileList component. Let\\u2019s find out what this is.\"}),`\n`,(0,e.jsx)(n.h4,{id:\"uploadfilelist\",children:\"UploadFileList\"}),`\n`,(0,e.jsx)(n.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,e.jsx)(n.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,e.jsxs)(n.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"import React, { JSX } from 'react'\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"import TypeBadge from './TypeBadge'\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"type UploadedFileLike = {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  fileName?: string\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  type: string\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"}\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"export default function UploadFileList({\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  files,\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  onRemove,\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"}: {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  files: UploadedFileLike[]\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  onRemove?: (index: number) => void\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"}): JSX.Element {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  const items = files.map((f: UploadedFileLike, i: number) => (\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    <div\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      key={f.fileName}\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      className={`w-full border-b border-stone-300 dark:border-stone-700 last:border-0`}\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    >\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:'      <div className=\"flex justify-between items-center py-2 pl-3 pr-2\">'})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:'        <p className=\"truncate text-sm font-medium text-stone-800 dark:text-stone-200\">'})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"          {f.fileName}\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"        </p>\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:'        <div className=\"flex items-center\">'})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"          <TypeBadge type={f.type} />\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"          {onRemove && (\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"            <button\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"              onClick={() => onRemove?.(i)}\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:'              className=\"text-stone-500 hover:text-stone-700 dark:text-stone-400 dark:hover:text-stone-200 focus:outline-none pl-3 pr-1\"'})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"            >\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"              \\u2715\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"            </button>\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"          )}\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"        </div>\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      </div>\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    </div>\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  ))\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  return (\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:'    <div className=\"w-full border border-stone-300 dark:border-stone-700 rounded-md shadow-sm dark:shadow-sm-dark bg-white dark:bg-stone-800\">'})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      {items}\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    </div>\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  )\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"}\"})})]})})}),`\n`,(0,e.jsxs)(n.p,{children:[\"UploadFileList can be in \",(0,e.jsx)(n.a,{href:\"https://github.com/kern/filepizza/blob/main/src/components/UploadFileList.tsx#L9\",children:\"components/UploadFileList.tsx\"}),\". This component accepts files and onRemove as its props.\"]}),`\n`,(0,e.jsx)(n.h4,{id:\"webrtcprovider\",children:\"WebRTCProvider\"}),`\n`,(0,e.jsx)(n.p,{children:\"I have already talked about what WebRTCProvider is in one of my previous articles. Check it out.\"}),`\n`,(0,e.jsx)(n.h4,{id:\"uploader\",children:\"Uploader\"}),`\n`,(0,e.jsx)(n.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,e.jsx)(n.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,e.jsxs)(n.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"'use client'\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"import React, { JSX, useCallback, useEffect } from 'react'\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"import { UploadedFile, UploaderConnectionStatus } from '../types'\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"import { useWebRTCPeer } from './WebRTCProvider'\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"import QRCode from 'react-qr-code'\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"import Loading from './Loading'\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"import StopButton from './StopButton'\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"import { useUploaderChannel } from '../hooks/useUploaderChannel'\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"import { useUploaderConnections } from '../hooks/useUploaderConnections'\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"import { CopyableInput } from './CopyableInput'\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"import { ConnectionListItem } from './ConnectionListItem'\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"import { ErrorMessage } from './ErrorMessage'\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"import { setRotating } from '../hooks/useRotatingSpinner'\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"const QR_CODE_SIZE = 128\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"export default function Uploader({\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  files,\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  password,\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  onStop,\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"}: {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  files: UploadedFile[]\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  password: string\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  onStop: () => void\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"}): JSX.Element {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  const { peer, stop } = useWebRTCPeer()\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  const { isLoading, error, longSlug, shortSlug, longURL, shortURL } =\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    useUploaderChannel(peer.id)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  const connections = useUploaderConnections(peer, files, password)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  const handleStop = useCallback(() => {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    stop()\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    onStop()\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  }, [stop, onStop])\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  const activeDownloaders = connections.filter(\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    (conn) => conn.status === UploaderConnectionStatus.Uploading,\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  ).length\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  useEffect(() => {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    setRotating(activeDownloaders > 0)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  }, [activeDownloaders])\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  if (isLoading || !longSlug || !shortSlug) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:'    return <Loading text=\"Creating channel...\" />'})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  }\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  if (error) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    return <ErrorMessage message={error.message} />\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  }\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  return (\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    <>\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:'      <div className=\"flex w-full items-center\">'})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:'        <div className=\"flex-none mr-4\">'})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"          <QRCode value={shortURL ?? ''} size={QR_CODE_SIZE} />\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"        </div>\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:'        <div className=\"flex-auto flex flex-col justify-center space-y-2\">'})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:`          <CopyableInput label=\"Long URL\" value={longURL ?? ''} />`})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:`          <CopyableInput label=\"Short URL\" value={shortURL ?? ''} />`})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"        </div>\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      </div>\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:'      <div className=\"mt-6 pt-4 border-t border-stone-200 dark:border-stone-700 w-full\">'})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:'        <div className=\"flex justify-between items-center mb-2\">'})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:'          <h2 className=\"text-lg font-semibold text-stone-400 dark:text-stone-200\">'})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"            {activeDownloaders} Downloading, {connections.length} Total\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"          </h2>\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"          <StopButton onClick={handleStop} />\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"        </div>\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"        {connections.map((conn, i) => (\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"          <ConnectionListItem key={i} conn={conn} />\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"        ))}\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      </div>\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    </>\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  )\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"}\"})})]})})}),`\n`,(0,e.jsx)(n.p,{children:\"Uploader component is responsible for showing QR code and the long/short URLs.\"}),`\n`,(0,e.jsx)(n.h3,{id:\"about-me\",children:\"About me:\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"Hey, my name is \",(0,e.jsx)(n.a,{href:\"https://ramunarasinga.com\",children:\"Ramu Narasinga\"}),\". I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"]}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.em,{children:(0,e.jsxs)(n.strong,{children:[\"I am open to work on interesting projects. Send me an email at \",(0,e.jsx)(n.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:\"ramu.narasinga@gmail.com\"})]})})}),`\n`,(0,e.jsxs)(n.p,{children:[\"My Github\\u200A\\u2014\\u200A \",(0,e.jsx)(n.a,{href:\"https://github.com/ramu-narasinga\",children:\"https://github.com/ramu-narasinga\"})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"My website\\u200A\\u2014\\u200A \",(0,e.jsx)(n.a,{href:\"https://ramunarasinga.com/\",children:\"https://ramunarasinga.com\"})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"My Youtube channel\\u200A\\u2014\\u200A \",(0,e.jsx)(n.a,{href:\"https://www.youtube.com/@ramu-narasinga\",children:\"https://www.youtube.com/@ramu-narasinga\"})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Learning platform\\u200A\\u2014\\u200A \",(0,e.jsx)(n.a,{href:\"https://thinkthroo.com/\",children:\"https://thinkthroo.com\"})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Codebase Architecture\\u200A\\u2014\\u200A \",(0,e.jsx)(n.a,{href:\"https://app.thinkthroo.com/architecture\",children:\"https://app.thinkthroo.com/architecture\"})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Best practices\\u200A\\u2014\\u200A \",(0,e.jsx)(n.a,{href:\"https://app.thinkthroo.com/best-practices\",children:\"https://app.thinkthroo.com/best-practices\"})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Production-grade projects\\u200A\\u2014\\u200A \",(0,e.jsx)(n.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:\"https://app.thinkthroo.com/production-grade-projects\"})]}),`\n`,(0,e.jsx)(n.h3,{id:\"references\",children:\"References:\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.a,{href:\"https://github.com/kern/filepizza/blob/main/src/app/page.tsx#L87\",children:\"https://github.com/kern/filepizza/blob/main/src/app/page.tsx#L87\"})}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.a,{href:\"https://github.com/kern/filepizza/blob/main/src/app/page.tsx#L158\",children:\"https://github.com/kern/filepizza/blob/main/src/app/page.tsx#L158\"})}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.a,{href:\"https://github.com/kern/filepizza/blob/main/src/components/UploadFileList.tsx#L9\",children:\"https://github.com/kern/filepizza/blob/main/src/components/UploadFileList.tsx#L9\"})}),`\n`]}),`\n`]})]})}function h(a={}){let{wrapper:n}=a.components||{};return n?(0,e.jsx)(n,{...a,children:(0,e.jsx)(t,{...a})}):t(a)}return v(k);})();\n;return Component;"
  },
  "_id": "blog/component-in-FilePizza.mdx",
  "_raw": {
    "sourceFilePath": "blog/component-in-FilePizza.mdx",
    "sourceFileName": "component-in-FilePizza.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/component-in-FilePizza"
  },
  "type": "Doc",
  "slug": "/blog/component-in-FilePizza",
  "slugAsParams": "component-in-FilePizza"
}