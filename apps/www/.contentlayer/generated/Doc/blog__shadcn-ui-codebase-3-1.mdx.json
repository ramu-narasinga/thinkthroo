{
<<<<<<< HEAD
  "title": "shadcn-ui/ui codebase analysis-How does shadcn-ui CLI work? — Part 3.1\r",
=======
  "title": "shadcn-ui/ui codebase analysis-How does shadcn-ui CLI work? — Part 3.1",
>>>>>>> 442b740f3cf43317109944c6cf4b7ca543a8cddf
  "published": false,
  "featured": false,
  "component": false,
  "toc": true,
  "body": {
<<<<<<< HEAD
    "raw": "\r\nI wanted to find out how shadcn-ui CLI works. In this article, I discuss the code used to build the shadcn-ui/ui CLI.\r\n\r\nIn part 3.0, I discussed how `npx shadcn-ui add <component>` command is registered. We will look at few more lines of code from [packages/cli/src/commands/add.ts](https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/commands/add.ts).\r\n\r\n```plaintext\r\nconst cwd = path.resolve(options.cwd)\r\n\r\nif (!existsSync(cwd)) {\r\n  logger.error(`The path ${cwd} does not exist. Please try again.`)\r\n  process.exit(1)\r\n}\r\n\r\nconst config = await getConfig(cwd)\r\nif (!config) {\r\n  logger.warn(\r\n    `Configuration is missing. Please run ${chalk.green(\r\n      `init`\r\n    )} to create a components.json file.`\r\n  )\r\n  process.exit(1)\r\n}\r\n\r\nconst registryIndex = await getRegistryIndex()\r\n```\r\n\r\nSo what’s happening in the above code snippet?\r\n\r\n1. Check if the cwd exists.\r\n    \r\n2. getConfig function.\r\n    \r\n3. getRegistryIndex.\r\n    \r\n\r\n# **Check if the cwd exists.**\r\n\r\n![](https://miro.medium.com/v2/resize:fit:875/1*c0e0rOoYv2VJrgJzV1zWKA.png)\r\n\r\nThis code checks the current directory exists and logs an error if it doesn’t.\r\n\r\nexistsSync is imported from “fs” at the top of add.ts file.\r\n\r\n![](https://miro.medium.com/v2/resize:fit:875/1*tbQEPNA3ResO2mGwxc4tyQ.png)\r\n\r\n# **getConfig function**\r\n\r\ngetConfig is not as simple as it looks like.\r\n\r\n```plaintext\r\nconst config = await getConfig(cwd)\r\nif (!config) {\r\n  logger.warn(\r\n    `Configuration is missing. Please run ${chalk.green(\r\n      `init`\r\n    )} to create a components.json file.`\r\n  )\r\n  process.exit(1)\r\n}\r\n```\r\n\r\n`getConfig` is imported from a different file named [get-config](https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/get-config.ts#L55). Reason behind this could be that context matters when it comes where you place your function. For example, logically, a function named `getConfig` can never be placed in a file named `get-project-info`.\r\n\r\n```plaintext\r\nexport async function getConfig(cwd: string) {\r\n  const config = await getRawConfig(cwd)\r\n\r\n  if (!config) {\r\n    return null\r\n  }\r\n\r\n  return await resolveConfigPaths(cwd, config)\r\n}\r\n```\r\n\r\nThis function calls another function named `getRawConfig`.\r\n\r\nI explained in great detail how getConfig works in the article [Part 2.2](https://medium.com/@ramu.narasinga_61050/shadcn-ui-ui-codebase-analysis-how-does-shadcn-ui-cli-work-part-2-2-73cff5651b06)\r\n\r\n# **getRegistryIndex**\r\n\r\n```plaintext\r\nexport async function getRegistryIndex() {\r\n  try {\r\n    const [result] = await fetchRegistry([\"index.json\"])\r\n\r\n    return registryIndexSchema.parse(result)\r\n  } catch (error) {\r\n    throw new Error(`Failed to fetch components from registry.`)\r\n  }\r\n}\r\n```\r\n\r\nA simple utility function that fetches index.json available at [https://ui.shadcn.com/registry/index.json](https://ui.shadcn.com/registry/index.json)\r\n\r\n![](https://miro.medium.com/v2/resize:fit:875/1*q0T-WVyOC-kp2G3pKdK6ZQ.png)\r\n\r\n# **Conclusion:**\r\n\r\nOnce the options and the argument passed to add command in shadcn-ui CLI, In the action, there is a lot of code, about 218 lines in [add.ts](https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/commands/add.ts#L1). I picked a few lines of code that followed part 3.0 explanation and discussed about\r\n\r\n1. Check if the cwd exists.\r\n    \r\n\r\nThis code checks the current directory exists and logs an error if it doesn’t.\r\n\r\nexistsSync is imported from “fs” at the top of add.ts file.\r\n\r\n2\\. getConfig function.\r\n\r\n`getConfig` is imported from a different file named [get-config](https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/get-config.ts#L55). Reason behind this could be that context matters when it comes where you place your function. For example, logically, a function named `getConfig` can never be placed in a file named `get-project-info`.\r\n\r\nI explained in great detail how getConfig works in the article [Part 2.2](https://medium.com/@ramu.narasinga_61050/shadcn-ui-ui-codebase-analysis-how-does-shadcn-ui-cli-work-part-2-2-73cff5651b06)\r\n\r\n3\\. getRegistryIndex.\r\n\r\nA simple utility function that fetches index.json available at [https://ui.shadcn.com/registry/index.json](https://ui.shadcn.com/registry/index.json)\r\n\r\n![](https://miro.medium.com/v2/resize:fit:875/1*47EKz3q3aUidRrzxVGAjLg.png)\r\n\r\n> [*Get free courses inspired by the best practices used in open source.*](https://app.thinkthroo.com/best-practices)\r\n\r\n# **About me:**\r\n\r\nHey, my name is [**Ramu Narasinga**](https://ramunarasinga.com/). I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\r\n\r\n***I am open to work on interesting projects. Send me an email at*** [***ramu.narasinga@gmail.com***](mailto:ramu.narasinga@gmail.com)\r\n\r\nMy Github — [**https://github.com/ramu-narasinga**](https://github.com/ramu-narasinga)\r\n\r\nMy website — [**https://ramunarasinga.com**](https://ramunarasinga.com/)\r\n\r\nMy Youtube channel — [**https://www.youtube.com/@thinkthroo**](https://www.youtube.com/@thinkthroo)\r\n\r\nLearning platform — [**https://thinkthroo.com**](https://thinkthroo.com/)\r\n\r\nCodebase Architecture — [**https://app.thinkthroo.com/architecture**](https://app.thinkthroo.com/architecture)\r\n\r\nBest practices — [**https://app.thinkthroo.com/best-practices**](https://app.thinkthroo.com/best-practices)\r\n\r\nProduction-grade projects — [**https://app.thinkthroo.com/production-grade-projects**](https://app.thinkthroo.com/production-grade-projects)\r\n\r\n# **References:**\r\n\r\n1. [https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/commands/add.ts](https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/commands/add.ts)\r\n    \r\n2. [https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/get-config.ts#L55](https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/get-config.ts#L55)\r\n    \r\n3. [https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/get-config.ts#L91](https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/get-config.ts#L91)\r\n    \r\n4. [https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/registry/index.ts#L19C1-L27C2](https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/registry/index.ts#L19C1-L27C2)",
=======
    "raw": "\nI wanted to find out how shadcn-ui CLI works. In this article, I discuss the code used to build the shadcn-ui/ui CLI.\n\nIn part 3.0, I discussed how `npx shadcn-ui add <component>` command is registered. We will look at few more lines of code from [packages/cli/src/commands/add.ts](https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/commands/add.ts).\n\n```plaintext\nconst cwd = path.resolve(options.cwd)\n\nif (!existsSync(cwd)) {\n  logger.error(`The path ${cwd} does not exist. Please try again.`)\n  process.exit(1)\n}\n\nconst config = await getConfig(cwd)\nif (!config) {\n  logger.warn(\n    `Configuration is missing. Please run ${chalk.green(\n      `init`\n    )} to create a components.json file.`\n  )\n  process.exit(1)\n}\n\nconst registryIndex = await getRegistryIndex()\n```\n\nSo what’s happening in the above code snippet?\n\n1. Check if the cwd exists.\n    \n2. getConfig function.\n    \n3. getRegistryIndex.\n    \n\n# **Check if the cwd exists.**\n\n![](https://miro.medium.com/v2/resize:fit:875/1*c0e0rOoYv2VJrgJzV1zWKA.png)\n\nThis code checks the current directory exists and logs an error if it doesn’t.\n\nexistsSync is imported from “fs” at the top of add.ts file.\n\n![](https://miro.medium.com/v2/resize:fit:875/1*tbQEPNA3ResO2mGwxc4tyQ.png)\n\n# **getConfig function**\n\ngetConfig is not as simple as it looks like.\n\n```plaintext\nconst config = await getConfig(cwd)\nif (!config) {\n  logger.warn(\n    `Configuration is missing. Please run ${chalk.green(\n      `init`\n    )} to create a components.json file.`\n  )\n  process.exit(1)\n}\n```\n\n`getConfig` is imported from a different file named [get-config](https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/get-config.ts#L55). Reason behind this could be that context matters when it comes where you place your function. For example, logically, a function named `getConfig` can never be placed in a file named `get-project-info`.\n\n```plaintext\nexport async function getConfig(cwd: string) {\n  const config = await getRawConfig(cwd)\n\n  if (!config) {\n    return null\n  }\n\n  return await resolveConfigPaths(cwd, config)\n}\n```\n\nThis function calls another function named `getRawConfig`.\n\nI explained in great detail how getConfig works in the article [Part 2.2](https://medium.com/@ramu.narasinga_61050/shadcn-ui-ui-codebase-analysis-how-does-shadcn-ui-cli-work-part-2-2-73cff5651b06)\n\n# **getRegistryIndex**\n\n```plaintext\nexport async function getRegistryIndex() {\n  try {\n    const [result] = await fetchRegistry([\"index.json\"])\n\n    return registryIndexSchema.parse(result)\n  } catch (error) {\n    throw new Error(`Failed to fetch components from registry.`)\n  }\n}\n```\n\nA simple utility function that fetches index.json available at [https://ui.shadcn.com/registry/index.json](https://ui.shadcn.com/registry/index.json)\n\n![](https://miro.medium.com/v2/resize:fit:875/1*q0T-WVyOC-kp2G3pKdK6ZQ.png)\n\n# **Conclusion:**\n\nOnce the options and the argument passed to add command in shadcn-ui CLI, In the action, there is a lot of code, about 218 lines in [add.ts](https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/commands/add.ts#L1). I picked a few lines of code that followed part 3.0 explanation and discussed about\n\n1. Check if the cwd exists.\n    \n\nThis code checks the current directory exists and logs an error if it doesn’t.\n\nexistsSync is imported from “fs” at the top of add.ts file.\n\n2\\. getConfig function.\n\n`getConfig` is imported from a different file named [get-config](https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/get-config.ts#L55). Reason behind this could be that context matters when it comes where you place your function. For example, logically, a function named `getConfig` can never be placed in a file named `get-project-info`.\n\nI explained in great detail how getConfig works in the article [Part 2.2](https://medium.com/@ramu.narasinga_61050/shadcn-ui-ui-codebase-analysis-how-does-shadcn-ui-cli-work-part-2-2-73cff5651b06)\n\n3\\. getRegistryIndex.\n\nA simple utility function that fetches index.json available at [https://ui.shadcn.com/registry/index.json](https://ui.shadcn.com/registry/index.json)\n\n![](https://miro.medium.com/v2/resize:fit:875/1*47EKz3q3aUidRrzxVGAjLg.png)\n\n> [*Get free courses inspired by the best practices used in open source.*](https://app.thinkthroo.com/best-practices)\n\n# **About me:**\n\nHey, my name is [**Ramu Narasinga**](https://ramunarasinga.com/). I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\n\n***I am open to work on interesting projects. Send me an email at*** [***ramu.narasinga@gmail.com***](mailto:ramu.narasinga@gmail.com)\n\nMy Github — [**https://github.com/ramu-narasinga**](https://github.com/ramu-narasinga)\n\nMy website — [**https://ramunarasinga.com**](https://ramunarasinga.com/)\n\nMy Youtube channel — [**https://www.youtube.com/@thinkthroo**](https://www.youtube.com/@thinkthroo)\n\nLearning platform — [**https://thinkthroo.com**](https://thinkthroo.com/)\n\nCodebase Architecture — [**https://app.thinkthroo.com/architecture**](https://app.thinkthroo.com/architecture)\n\nBest practices — [**https://app.thinkthroo.com/best-practices**](https://app.thinkthroo.com/best-practices)\n\nProduction-grade projects — [**https://app.thinkthroo.com/production-grade-projects**](https://app.thinkthroo.com/production-grade-projects)\n\n# **References:**\n\n1. [https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/commands/add.ts](https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/commands/add.ts)\n    \n2. [https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/get-config.ts#L55](https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/get-config.ts#L55)\n    \n3. [https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/get-config.ts#L91](https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/get-config.ts#L91)\n    \n4. [https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/registry/index.ts#L19C1-L27C2](https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/registry/index.ts#L19C1-L27C2)",
>>>>>>> 442b740f3cf43317109944c6cf4b7ca543a8cddf
    "code": "var Component=(()=>{var p=Object.create;var s=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var b=(i,n)=>()=>(n||i((n={exports:{}}).exports,n),n.exports),x=(i,n)=>{for(var a in n)s(i,a,{get:n[a],enumerable:!0})},r=(i,n,a,t)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let c of g(n))!f.call(i,c)&&c!==a&&s(i,c,{get:()=>n[c],enumerable:!(t=m(n,c))||t.enumerable});return i};var w=(i,n,a)=>(a=i!=null?p(u(i)):{},r(n||!i||!i.__esModule?s(a,\"default\",{value:i,enumerable:!0}):a,i)),y=i=>r(s({},\"__esModule\",{value:!0}),i);var d=b((j,l)=>{l.exports=_jsx_runtime});var N={};x(N,{default:()=>o,frontmatter:()=>k});var e=w(d()),k={title:\"shadcn-ui/ui codebase analysis-How does shadcn-ui CLI work? \\u2014 Part 3.1\"};function h(i){let n={a:\"a\",blockquote:\"blockquote\",code:\"code\",div:\"div\",em:\"em\",h1:\"h1\",img:\"img\",li:\"li\",ol:\"ol\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",...i.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.p,{children:\"I wanted to find out how shadcn-ui CLI works. In this article, I discuss the code used to build the shadcn-ui/ui CLI.\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"In part 3.0, I discussed how \",(0,e.jsx)(n.code,{children:\"npx shadcn-ui add <component>\"}),\" command is registered. We will look at few more lines of code from \",(0,e.jsx)(n.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/commands/add.ts\",children:\"packages/cli/src/commands/add.ts\"}),\".\"]}),`\n`,(0,e.jsx)(n.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,e.jsx)(n.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,e.jsxs)(n.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"const cwd = path.resolve(options.cwd)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"if (!existsSync(cwd)) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  logger.error(`The path ${cwd} does not exist. Please try again.`)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  process.exit(1)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"}\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"const config = await getConfig(cwd)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"if (!config) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  logger.warn(\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    `Configuration is missing. Please run ${chalk.green(\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      `init`\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    )} to create a components.json file.`\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  )\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  process.exit(1)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"}\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"const registryIndex = await getRegistryIndex()\"})})]})})}),`\n`,(0,e.jsx)(n.p,{children:\"So what\\u2019s happening in the above code snippet?\"}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"Check if the cwd exists.\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"getConfig function.\"}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:\"getRegistryIndex.\"}),`\n`]}),`\n`]}),`\n`,(0,e.jsx)(n.h1,{id:\"check-if-the-cwd-exists\",children:(0,e.jsx)(n.strong,{children:\"Check if the cwd exists.\"})}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.img,{src:\"https://miro.medium.com/v2/resize:fit:875/1*c0e0rOoYv2VJrgJzV1zWKA.png\",alt:\"\"})}),`\n`,(0,e.jsx)(n.p,{children:\"This code checks the current directory exists and logs an error if it doesn\\u2019t.\"}),`\n`,(0,e.jsx)(n.p,{children:\"existsSync is imported from \\u201Cfs\\u201D at the top of add.ts file.\"}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.img,{src:\"https://miro.medium.com/v2/resize:fit:875/1*tbQEPNA3ResO2mGwxc4tyQ.png\",alt:\"\"})}),`\n`,(0,e.jsx)(n.h1,{id:\"getconfig-function\",children:(0,e.jsx)(n.strong,{children:\"getConfig function\"})}),`\n`,(0,e.jsx)(n.p,{children:\"getConfig is not as simple as it looks like.\"}),`\n`,(0,e.jsx)(n.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,e.jsx)(n.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,e.jsxs)(n.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"const config = await getConfig(cwd)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"if (!config) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  logger.warn(\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    `Configuration is missing. Please run ${chalk.green(\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"      `init`\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    )} to create a components.json file.`\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  )\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  process.exit(1)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"}\"})})]})})}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.code,{children:\"getConfig\"}),\" is imported from a different file named \",(0,e.jsx)(n.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/get-config.ts#L55\",children:\"get-config\"}),\". Reason behind this could be that context matters when it comes where you place your function. For example, logically, a function named \",(0,e.jsx)(n.code,{children:\"getConfig\"}),\" can never be placed in a file named \",(0,e.jsx)(n.code,{children:\"get-project-info\"}),\".\"]}),`\n`,(0,e.jsx)(n.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,e.jsx)(n.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,e.jsxs)(n.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"export async function getConfig(cwd: string) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  const config = await getRawConfig(cwd)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  if (!config) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    return null\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  }\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  return await resolveConfigPaths(cwd, config)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"}\"})})]})})}),`\n`,(0,e.jsxs)(n.p,{children:[\"This function calls another function named \",(0,e.jsx)(n.code,{children:\"getRawConfig\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"I explained in great detail how getConfig works in the article \",(0,e.jsx)(n.a,{href:\"https://medium.com/@ramu.narasinga_61050/shadcn-ui-ui-codebase-analysis-how-does-shadcn-ui-cli-work-part-2-2-73cff5651b06\",children:\"Part 2.2\"})]}),`\n`,(0,e.jsx)(n.h1,{id:\"getregistryindex\",children:(0,e.jsx)(n.strong,{children:\"getRegistryIndex\"})}),`\n`,(0,e.jsx)(n.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,e.jsx)(n.pre,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:(0,e.jsxs)(n.code,{\"data-language\":\"plaintext\",\"data-theme\":\"default\",children:[(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"export async function getRegistryIndex() {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  try {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:'    const [result] = await fetchRegistry([\"index.json\"])'})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    return registryIndexSchema.parse(result)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  } catch (error) {\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"    throw new Error(`Failed to fetch components from registry.`)\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"  }\"})}),`\n`,(0,e.jsx)(n.span,{className:\"line\",children:(0,e.jsx)(n.span,{children:\"}\"})})]})})}),`\n`,(0,e.jsxs)(n.p,{children:[\"A simple utility function that fetches index.json available at \",(0,e.jsx)(n.a,{href:\"https://ui.shadcn.com/registry/index.json\",children:\"https://ui.shadcn.com/registry/index.json\"})]}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.img,{src:\"https://miro.medium.com/v2/resize:fit:875/1*q0T-WVyOC-kp2G3pKdK6ZQ.png\",alt:\"\"})}),`\n`,(0,e.jsx)(n.h1,{id:\"conclusion\",children:(0,e.jsx)(n.strong,{children:\"Conclusion:\"})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Once the options and the argument passed to add command in shadcn-ui CLI, In the action, there is a lot of code, about 218 lines in \",(0,e.jsx)(n.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/commands/add.ts#L1\",children:\"add.ts\"}),\". I picked a few lines of code that followed part 3.0 explanation and discussed about\"]}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsx)(n.li,{children:\"Check if the cwd exists.\"}),`\n`]}),`\n`,(0,e.jsx)(n.p,{children:\"This code checks the current directory exists and logs an error if it doesn\\u2019t.\"}),`\n`,(0,e.jsx)(n.p,{children:\"existsSync is imported from \\u201Cfs\\u201D at the top of add.ts file.\"}),`\n`,(0,e.jsx)(n.p,{children:\"2. getConfig function.\"}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.code,{children:\"getConfig\"}),\" is imported from a different file named \",(0,e.jsx)(n.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/get-config.ts#L55\",children:\"get-config\"}),\". Reason behind this could be that context matters when it comes where you place your function. For example, logically, a function named \",(0,e.jsx)(n.code,{children:\"getConfig\"}),\" can never be placed in a file named \",(0,e.jsx)(n.code,{children:\"get-project-info\"}),\".\"]}),`\n`,(0,e.jsxs)(n.p,{children:[\"I explained in great detail how getConfig works in the article \",(0,e.jsx)(n.a,{href:\"https://medium.com/@ramu.narasinga_61050/shadcn-ui-ui-codebase-analysis-how-does-shadcn-ui-cli-work-part-2-2-73cff5651b06\",children:\"Part 2.2\"})]}),`\n`,(0,e.jsx)(n.p,{children:\"3. getRegistryIndex.\"}),`\n`,(0,e.jsxs)(n.p,{children:[\"A simple utility function that fetches index.json available at \",(0,e.jsx)(n.a,{href:\"https://ui.shadcn.com/registry/index.json\",children:\"https://ui.shadcn.com/registry/index.json\"})]}),`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.img,{src:\"https://miro.medium.com/v2/resize:fit:875/1*47EKz3q3aUidRrzxVGAjLg.png\",alt:\"\"})}),`\n`,(0,e.jsxs)(n.blockquote,{children:[`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.a,{href:\"https://app.thinkthroo.com/best-practices\",children:(0,e.jsx)(n.em,{children:\"Get free courses inspired by the best practices used in open source.\"})})}),`\n`]}),`\n`,(0,e.jsx)(n.h1,{id:\"about-me\",children:(0,e.jsx)(n.strong,{children:\"About me:\"})}),`\n`,(0,e.jsxs)(n.p,{children:[\"Hey, my name is \",(0,e.jsx)(n.a,{href:\"https://ramunarasinga.com/\",children:(0,e.jsx)(n.strong,{children:\"Ramu Narasinga\"})}),\". I study large open-source projects and create content about their codebase architecture and best practices, sharing it through articles, videos.\"]}),`\n`,(0,e.jsxs)(n.p,{children:[(0,e.jsx)(n.em,{children:(0,e.jsx)(n.strong,{children:\"I am open to work on interesting projects. Send me an email at\"})}),\" \",(0,e.jsx)(n.a,{href:\"mailto:ramu.narasinga@gmail.com\",children:(0,e.jsx)(n.em,{children:(0,e.jsx)(n.strong,{children:\"ramu.narasinga@gmail.com\"})})})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"My Github\\u200A\\u2014\\u200A\",(0,e.jsx)(n.a,{href:\"https://github.com/ramu-narasinga\",children:(0,e.jsx)(n.strong,{children:\"https://github.com/ramu-narasinga\"})})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"My website\\u200A\\u2014\\u200A\",(0,e.jsx)(n.a,{href:\"https://ramunarasinga.com/\",children:(0,e.jsx)(n.strong,{children:\"https://ramunarasinga.com\"})})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"My Youtube channel\\u200A\\u2014\\u200A\",(0,e.jsx)(n.a,{href:\"https://www.youtube.com/@thinkthroo\",children:(0,e.jsx)(n.strong,{children:\"https://www.youtube.com/@thinkthroo\"})})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Learning platform\\u200A\\u2014\\u200A\",(0,e.jsx)(n.a,{href:\"https://thinkthroo.com/\",children:(0,e.jsx)(n.strong,{children:\"https://thinkthroo.com\"})})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Codebase Architecture\\u200A\\u2014\\u200A\",(0,e.jsx)(n.a,{href:\"https://app.thinkthroo.com/architecture\",children:(0,e.jsx)(n.strong,{children:\"https://app.thinkthroo.com/architecture\"})})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Best practices\\u200A\\u2014\\u200A\",(0,e.jsx)(n.a,{href:\"https://app.thinkthroo.com/best-practices\",children:(0,e.jsx)(n.strong,{children:\"https://app.thinkthroo.com/best-practices\"})})]}),`\n`,(0,e.jsxs)(n.p,{children:[\"Production-grade projects\\u200A\\u2014\\u200A\",(0,e.jsx)(n.a,{href:\"https://app.thinkthroo.com/production-grade-projects\",children:(0,e.jsx)(n.strong,{children:\"https://app.thinkthroo.com/production-grade-projects\"})})]}),`\n`,(0,e.jsx)(n.h1,{id:\"references\",children:(0,e.jsx)(n.strong,{children:\"References:\"})}),`\n`,(0,e.jsxs)(n.ol,{children:[`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/commands/add.ts\",children:\"https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/commands/add.ts\"})}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/get-config.ts#L55\",children:\"https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/get-config.ts#L55\"})}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/get-config.ts#L91\",children:\"https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/get-config.ts#L91\"})}),`\n`]}),`\n`,(0,e.jsxs)(n.li,{children:[`\n`,(0,e.jsx)(n.p,{children:(0,e.jsx)(n.a,{href:\"https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/registry/index.ts#L19C1-L27C2\",children:\"https://github.com/shadcn-ui/ui/blob/main/packages/cli/src/utils/registry/index.ts#L19C1-L27C2\"})}),`\n`]}),`\n`]})]})}function o(i={}){let{wrapper:n}=i.components||{};return n?(0,e.jsx)(n,{...i,children:(0,e.jsx)(h,{...i})}):h(i)}return y(N);})();\n;return Component;"
  },
  "_id": "blog/shadcn-ui-codebase-3-1.mdx",
  "_raw": {
    "sourceFilePath": "blog/shadcn-ui-codebase-3-1.mdx",
    "sourceFileName": "shadcn-ui-codebase-3-1.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/shadcn-ui-codebase-3-1"
  },
  "type": "Doc",
  "slug": "/blog/shadcn-ui-codebase-3-1",
  "slugAsParams": "shadcn-ui-codebase-3-1"
}